2008-03-30	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/bass_booster/bass_booster.cpp:
	* plugins/ladspa_effect/ladspa_effect.cpp:
	compare out_sum against getGate()+0.0001f as getGate() might be 0
	while out_sum in many cases never will reach 0,0...0 again - fixes
	high CPU-usage even after stop playing

2008-03-17	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/tracks/sample_track.cpp:
	fixed crash when removing sample-track with effects

2008-03-09	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	* README:
	made 0.3.2 release

	* plugins/vst_base/lvsl_server.cpp:
	made VST-GUI work with recent WINE-versions where no X-windows are
	being created until a ShowWindow()-request is issued and thus we get a
	XID for embedding GUI

2008-03-03	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/piano_roll.cpp:
	- fixed KEY_PRESSURE-events when changing volume of a note
	- improved painting of volume-lines

2008-02-11	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/ladspa_base/ladspa_manager.cpp:
	* plugins/ladspa_effect/ladspa_effect.cpp:
	* plugins/patman/patman.cpp:
	* plugins/vestige/vestige.cpp:
	* plugins/vst_base/lvsl_client.h:
	* include/track.h:
	* include/dummy_plugin.h:
	* include/config_mgr.h:
	* include/instrument_track.h:
	* include/file_browser.h:
	* include/dummy_instrument.h:
	* include/midi_time.h:
	* include/basic_filters.h:
	* include/journalling_object.h:
	* include/types.h:
	* include/dummy_effect.h:
	* src/audio/audio_file_ogg.cpp:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/preset_preview_play_handle.cpp:
	* src/core/export_project_dialog.cpp:
	* src/core/main_window.cpp:
	* src/lib/drumsynth.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/pattern.cpp:
	fixed compilation issues with GCC 4.3

2008-01-05	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/rack_view.cpp:
	added missing moveUp-call for effect-chain

	* plugins/organic/organic.cpp:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/vibed/vibed.cpp:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/stk/mallets/mallets.cpp:
	make sure, pluginData-pointer is always initialized in playNote()

	* src/core/envelope_and_lfo_widget.cpp:
	simple range-checking

	* README:
	fixed version

2008-01-02	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/dummy_effect.h:
	* src/core/effect.cpp:
	make dummyEffect really work in case we need it

	* README:
	* src/core/about_dialog.cpp:
	extended copyright from 2007 to 2008

2007-12-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/track_container.cpp:
	when removing tracks start removing at the end of track-vector (i.e.
	use m_trackWidgets.last() instead of m_trackWidgets.first()) - speeds
	up things *a lot*

2007-12-26	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/rack_plugin.cpp:
	fixed wrong signal-slot-connection which made gate-parameter of
	effects not working

2007-12-17	Paul Wayper <paulway/at/mabula/dot/net>

	* src/core/main_window.cpp:
	* data/locale/ru.ts:
	* data/locale/nl.ts:
	* data/locale/it.ts:
	* data/locale/ca.ts:
	* data/locale/de.ts:
	* data/locale/sv.ts:
	Changed wiki link to http://lmms.sourceforge.net/wiki/

2007-12-14	Paul Wayper <paulway/at/mabula/dot/net>

	* include/volume_knob.h:
	* src/widgets/volume_knob.cpp:
	* src/core/setup_dialog.cpp:
	* data/locale/nl.ts:
	* data/locale/it.ts:
	* data/locale/ca.ts:
	* data/locale/ru.t:	
	* data/locale/de.t:	
	* data/locale/sv.t:	
	Changed dbV to dBV throughout

2007-12-03	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/midi_import/midi_import.cpp:
	load Patman-plugin instead of TripleOsc and try to load patch
	according to program-change-events

2007-11-12	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	made 0.3.1 release

	* samples/data/drumsynth/*:
	replaced spaces in filenames with underscores

	* plugins/stereo_enhancer/stereo_enhancer.h:
	* plugins/stereo_enhancer/stereo_enhancer.cpp:
	* plugins/stereo_enhancer/stereoenhancer_control_dialog.h:
	* plugins/stereo_enhancer/stereoenhancer_control_dialog.cpp:
	* plugins/stereo_enhancer/Makefile.am:
	added StereoEnhancer-plugin from
	Lou Herard <lherard /at/ gmail /dot/ com>

2007-11-11	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/note.h:
	* src/core/note.cpp:
	* src/core/piano_roll.cpp:
	when adding new notes in piano-roll via mouse use alignment-border of
	80/20 instead of 50/50 which makes piano-roll more usable

2007-11-10	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* data/presets/AudioFileProcessor/Erazor.cs.xml:
	added preset

	* data/locale/de.ts:
	* data/locale/de.qm:
	updated German localization-files

	* src/lib/sample_buffer.cpp:
	fixed file-filter in file-selection-dialog

2007-10-30	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/note_play_handle.cpp:
	fixed crash in case of framesLeft() being less or equal zero while
	instrument::playNote is being called (e.g. when decreasing release
	while a note is active)

2007-10-08	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	merged some of Javiers recent changes to trunk:

	* configure.in:
	* plugins/vst_base/lvsl_client.cpp:
	* plugins/vst_base/lvsl_server.cpp:
	* plugins/vst_base/Makefile.am:
	* src/lib/journalling_object.cpp:
	amd64 fixes

	* plugins/vestige/vestige.cpp:
	fixed loading deadlock

	* plugins/vst_base/lvsl_server.c:
	restricted shared memory permissions

	* plugins/vst_base/communication.h:
	improved string communication

	* configure.in:
	look for wine header in system folder too

	* plugins/singerbot/singerbot.cpp:
	detected heap corruption

	* plugins/polyb302/polyb302.cpp:
	applied relevant LB302 changes

2007-09-25	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/mixer.h:
	* include/visualization_widget.h:
	* src/core/mixer.cpp:
	* src/widget/visualization_widget.cpp:
	reworked code for retrieving current mixer-buffer for visualizing it -
	do not use signal/slot-mechanism for passing pointer and use
	currentReadBuffer() + mixer-mutex instead which probably fixes some
	mixer-related crashes

	* src/widget/effect_label.cpp:
	set window-title for effect-chain-windows of a sample-track etc.

2007-08-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	* README:
	* lmms.spec.in:
	finally made 0.3.0 release :)

	* Makefile.am:
	added missing entry for 3rd-party samplerate.h

	* data/projects/cool_songs/Makefile.am:
	* data/projects/covers/Makefile.am:
	* data/projects/demos/Makefile.am:
	* data/projects/misc/Makefile.am:
	* data/projects/tutorials/Makefile.am:
	added missing mmpz-wildcard

	* data/projects/covers/MonkeyIsland1-Intro.mmpz:
	another cool cover

	* data/projects/covers/J.S.Bach-Preludium_and_Fugue_A-Minor.mmp:
	removed

	* data/projects/covers/J.S.Bach-Preludium_and_Fugue_A-Minor.mmpz:
	reworked

	* data/projects/demos/demo1.mmp:
	* data/projects/demos/demo2.mmp:
	* data/projects/demos/demo3.mmp:
	* data/projects/cool_songs/Siegel-DreamWave.mmp:
	updated

	* data/projects/misc/lb302quick.mmp:
	* data/projects/demos/basses-demo.mmp:
	removed because of really low-quality and/or duplicate

	* data/projects/demos/lb302quick.mmpz:
	added another demo

	* data/projects/cool_songs/StrictProduction-Lamentelnes.mmp:
	* data/projects/cool_songs/StrictProduction-DearJonDoe.mmp:
	* data/projects/cool_songs/OrtalDj-FirstProyect.mmp:
	* data/projects/cool_songs/Siegel-SpeedTrack.mmp:
	* data/projects/cool_songs/Chris-RaveRiff.mmpz:
	* data/projects/cool_songs/MysthR-Living.mmpz:
	* data/projects/cool_songs/j1m-DingDong.mmp:
	* data/projects/cool_songs/BlueWolf-DreamTravel.mmp:
	* data/projects/cool_songs/Silva-ElvesCall.mmp:
	added some more really cool projects

	* data/samples/drums/bassdrum04.ogg:
	resampled to end at zero-level - fixes clicks in some projects

	* data/samples/drums/nasty_bass01.ogg:
	* data/samples/drums/nasty_snare01.ogg:
	* data/samples/drums/rim01.ogg:
	* data/samples/drums/ride02.ogg:
	* data/samples/drums/nasty_rim01.ogg:
	* data/samples/drums/hihat_opened03.ogg
	* data/samples/misc/applause01.ogg:
	added samples

	* data/presets/TripleOscillator/SawLead.cs.xml:
	* data/presets/TripleOscillator/SawLead2.cs.xml:
	* data/presets/TripleOscillator/HardClipping.cs.xml:
	* data/presets/TripleOscillator/PowerStrings.cs.xml:
	* data/presets/TripleOscillator/SquareLead.cs.xml:
	* data/presets/TripleOscillator/SquareLead2.cs.xml:
	added some presets

	* plugins/lb302/lb302.cpp:
	removed debug-out

	* plugins/audio_file_processor/audio_file_processor.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bit_invader/bit_invader.h:
	* plugins/bit_invader/bit_invader.cpp:
	added applyRelease(...)-call in playNote(...) and
	re-implemented desiredReleaseFrames()-method

	* include/mmp.h:
	* src/lib/mmp.cpp:
	* src/tracks/instrument_track.cpp:
	* src/core/main_window.cpp:
	* src/core/song_editor.cpp:
	fixed some bugs concerning recent-files-list

2007-08-20	dieEasy <dieeasy/at/cheapnet/dot/it>

	* data/locale/it.ts:
	updated Italian localization-file

2007-08-19	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* data/locale/de.ts:
	* data/locale/de.qm:
	updated German localization-file

	* Makefile.am:
	fixed command for updating TS-files

	* include/config_mgr.h:
	* include/main_window.h:
	* src/core/config_mgr.cpp:
	* src/core/main_window.cpp:
	added support for "Recently opened files"-menu

	* src/core/main_window.cpp:
	- cleanups
	- limit x-coordinate of a widget to be >= 0 in
	  mainWindow::restoreWidgetState( ... ) - fixes bug with appearently
	  inacccessible title-bars of piano-roll, song-editor etc. after
	  loading project

	* include/config_mgr.h:
	* src/core/engine.cpp:
	also destroy config-manager at engine::destroy()

	* src/audio/audio_jack.cpp:
	added define for support for per-track audio-ports - almost works
	except that the buffers of the audio-port are already cleared again at
	the time the callback fills the buffers - will need an additional
	buffer in audio-ports or something like that

	* src/core/mixer.cpp:
	* src/lib/journalling_object.cpp:
	* src/lib/project_journal.cpp:
	* src/widgets/knob.cpp:
	removed debug-out

	* plugins/patman/patman.cpp:
	set directory of sample-selection-dialog to /usr/share/midi/freepats
	if it exists

	* configure.in:
	* plugins/Makefile.am:
	* plugins/vibed/vibed.cpp:
	* lib/src/mmp.cpp:
	replaced obsolete PluckedStringSynth with Vibed

	* configure.in:
	* plugins/Makefile.am:
	removed Polyb302 from build as the same results can be achieved either
	via (improved and maintained) LB302 or TripleOsc+filter - Polyb302
	just increases redundancy and adds extra maintainance-work

	* plugins/stk/mallets/mallets.cpp:
	do not crash if Stk-files are missing

2007-08-18	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/lb302/lb302.cpp:
	* plugins/lb302/lb302.h:
	- rewrote code for monophonic behaviour (calculation of position at
	  which to resume states etc.)
	- added some debugging-stuff
	
	* src/core/mixer.cpp:
	remove play-handles *after* we played all play-handles

	* src/tracks/instrument_track.cpp:
	fixed a bug in monophonic behaviour

2007-08-16	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/instrument.h:
	* src/tracks/instrument_track.cpp:
	reverted previous changes (behaviour with monophonic instruments)

2007-08-06	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/triple_oscillator/triple_oscillator.h:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	use new applyRelease()-method

	* include/instrument.h:
	* src/core/instrument.cpp:
	added method instrument::applyRelease( ... ) which applies a release
	on given buffer according to the value returned by
	desiredReleaseFrames() - instruments can use this easily by simply
	calling this method before calling
	getInstrumentTrack()->processAudioBuffer()

	* src/core/preset_preview_play_handle.cpp:
	* src/tracks/instrument_track.cpp:
	use only half of valueRange<f_cnt_t>::max because otherwise we have
	overflows at several places

	* src/core/note_play_handle.cpp:
	fixed framesLeft()-method to return correct values if plugin has
	desiredReleaseFrames() > 0

	* include/note_play_handle.h:
	cleanups

	* configure.in:
	bumped to 0.3.0-rc2

	* src/lib/mmp.cpp:
	added more compat-code to upgrade() for being able to properly open
	files created by 0.0.9 and the whole 0.1.x-series

	* plugins/flp_import/flp_import.cpp:
	* include/arp_and_chords_tab_widget.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/lib/mmp.cpp:
	cleaned up all the arpeggio-direction-hacks - now the values are UP
	(0) to RANDOM (3) at *all* places - required some compat-hacks in
	mmp-upgrade()-method

	* include/file_browser.h:
	* src/core/file_browser.cpp:
	protect m_previewPlayHandle with mutex - fixes crash when releasing
	mouse button on preset-file with VST-plugin/-effect while VST-plugin
	is still loading

	
2007-08-04	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widget/visualization_widget.cpp:
	proper visualization even with period-sizes < 128

	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/kicker/kicker.cpp:
	* plugins/lb302/lb302.cpp:
	* plugins/patman/patman.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/polyb302/polyb302.cpp:
	* plugins/singerbot/singerbot.cpp:
	* plugins/stk/mallets/mallets.cpp:
	* plugins/vibed/vibed.cpp:
	removed check for framesLeftForCurrentPeriod() being zero - fixed by
	patch below

	* src/tracks/instrument_track.cpp:
	- acquire mixer-lock while calling noteOff() in
	  instrumentTrack::processInEvent( ... ) - fixes asynchronously
	  modifications of variables in notePlayHandle which led to segfaults in
	  some cases
	- when encountering old running notes on monophonic instruments only
	  clear the part of the audio-port-buffer where the new note will be
	  mixed in

2007-08-03	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/kicker/kicker.cpp:
	* plugins/lb302/lb302.cpp:
	* plugins/patman/patman.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/polyb302/polyb302.cpp:
	* plugins/singerbot/singerbot.cpp:
	* plugins/stk/mallets/mallets.cpp:
	* plugins/vibed/vibed.cpp:
	added check for framesLeftForCurrentPeriod() being zero - fixes
	segfault in some cases

	* src/tracks/instrument_track.cpp:
	- do not simply pass-through _frames-parameter, use
	  notePlayHandle::framesLeftForCurrentPeriod() if possible
	- disabled basic envelopes for the time being
	- better handling of monophonic instruments
	- do not play new notePlayHandles directly, set offset instead and let
	  mixer manage the rest

	* src/tracks/sample_track.cpp:
	do not play new samplePlayHandles directly, set offset instead and let
	mixer manage the rest

	* include/note_play_handle.h:
	- removed framesAhead-property - now replaced by offset-property of
	  base-class
	- introduced methods framesLeft() and framesLeftForCurrentPeriod() -
	  proper usage of them in plugins etc. fixes more clicks/pops especially
	  in monophonic instruments (LB302!)

	* src/core/mixer.cpp:
	call songEditor::processNextBuffer() *before* playing all play-handles

	* src/core/mixer.cpp:
	* include/mixer.h:
	extended clearAudioBuffer()-methods by offset

	* include/play_handle.h:
	added offset-property

	* include/mixer.h:
	* most other files:
	renamed "framesPerAudioBuffer()" to "framesPerPeriod()"

	* include/types.h:
	* most other files:
	renamed type "fpab_t" to "fpp_t"

2007-07-30	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/singerbot/singerbot.h:
	* include/sample_buffer.h:
	* include/audio_device.h:
	* configure.in:
	* acinclude.m4:
	* Makefile.am:
	use 3rd-party code if libsamplerate is not available on system

	* src/3rdparty/samplerate/src_linear.c:
	* src/3rdparty/samplerate/samplerate.h:
	* src/3rdparty/samplerate/fastest_coeffs.h:
	* src/3rdparty/samplerate/src_sinc.c:
	* src/3rdparty/samplerate/float_cast.h:
	* src/3rdparty/samplerate/mid_qual_coeffs.h:
	* src/3rdparty/samplerate/src_zoh.c:
	* src/3rdparty/samplerate/high_qual_coeffs.h:
	* src/3rdparty/samplerate/samplerate.c:
	* src/3rdparty/samplerate/common.h:
	added libsamplerate-source-code

2007-07-29	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	- made 0.3.0-rc1 release
	- replaced "+=" operator by according X="$X ..." constructs as older
	  bashes have problems with it

	* configure.in:
	* Makefile.am:
	* include/audio_device.h:
	* include/sample_buffer.h:
	* src/audio/audio_device.cpp:
	* src/lib/sample_buffer.cpp:
	removed already broken support for building LMMS without libsamplerate

	* acinclude.m4:
	disabled Qt4-support - re-enable it / rewrite Qt4-detection code in
	0.4.x-devel-branch

2007-07-23	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/midi_import/midi_import.h:
	* plugins/midi_import/midi_import.cpp:
	- when adding notes to pattern *never* let them be quantized - fixes
	  bug where notes of imported MIDI-files were not where they should have
	  been
	- added support for tempo-change-events by modifying
	  automation-pattern of tempo-knob of track-container (if such exists)
	- import track-names
	- proper handling of time-base, -division etc.

	* include/midi.h:
	added midiMetaEvents-enum

	* include/song_editor.h:
	* include/track_container.h:
	* src/core/song_editor.cpp:
	added virtual tempoAutomationPattern()-method which returns
	automation-pattern of tempo-object (i.e. bpmSpinBox) if such exists
	for a certain track-container

	* include/automation_pattern.h:
	- added non-const version of object()-method
	- made lot of other methods const

2007-07-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/mixer.h:
	* src/core/mixer.cpp:
	added more mutexes to protect all important data-structures more
	granularly and safely - fixes some potential segfaults

	* src/tracks/instrument_track.cpp:
	- lock mixer while loading instrument / track-specific settings - fixes
	  segfault when dragging preset/instrument plugin to existing track
	  while playing
	- remove effects in loadTrackSpecificSettings() if none were in preset
	  (e.g. old preset-file)

	* include/rack_view.h:
	* include/effect_tab_widget.h:
	* src/widgets/rack_view.cpp:
	- delete all existing plugins before adding new ones in
	  rackView::loadSettings()
	- cleanups

	* configure.in:
	cleanups

2007-07-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* lmms.spec.in:
	merged changes found in
	https://sourceforge.net/tracker/download.php?group_id=105168&atid=640436&file_id=225331&aid=1702303

	* configure.in:
	- cleaned up and improved detection of WINE-development-files and/or
	  single components of it and removed aeffectx.h-detection-stuff as
	  not needed anymore
	- changed warning on missing STK-files
	- several improvements of output-texts

2007-07-17	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	- removed unsafe flags
	- disabled single-source-compiling per default

	* src/audio/audio_port.cpp:
	initialize all member-variables in initialization-list of
	audioPort-constructor - this way the audio-port isn't being added to
	the mixer before it's completely initialized - fixes some segfaults

	* include/midi.h:
	* plugins/midi_import/midi_import.h:
	* plugins/midi_import/midi_import.cpp:
	- initial incomplete handling for tempo-events
	- properly aligned imported notes

2007-07-16	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/mixer.cpp:
	fixed logical error in mixer::renderNextBuffer() which led to lot of
	clicks and pops when using parallelization-level > 1

	* include/note_play_handle.h:
	* src/tracks/instrument_track-cpp:
	fixed broken detection of last period of a note which resulted in
	clicks and pops as the soft fade-out at the end sometimes was done twice

2007-05-12	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/clipboard.h:
	* include/mmp.h:
	* include/note.h:
	* include/piano_roll.h:
	* src/core/note.cpp:
	* src/core/piano_roll.cpp:
	* src/lib/clipboard.cpp:
	* src/lib/mmp.cpp:
	use the global clipboard to copy notes

	* include/group_box.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/envelope_tab_widget.cpp:
	* src/lib/mmp.cpp:
	* src/widgets/group_box.cpp:
	save groupbox automation

	* include/surround_area.h:
	* src/core/surround_area.cpp:
	* src/core/track.cpp:
	* src/lib/mmp.cpp:
	calculate volume vector in a more consistent way

	* src/core/track.cpp:
	fixed drag track onto another segfault

	* include/piano_widget.h:
	* src/core/piano_widget.cpp:
	fixed release invalid key segfault

	* src/tracks/instrument_track.cpp:
	fixed freeze pattern segfault

	* include/preset_preview_play_handle.h:
	* src/core/engine.cpp:
	* src/core/preset_preview_play_handle.cpp:
	fixed uninitialized preset preview container segfault

	* include/main_window.h:
	* src/core/main_window.cpp:
	added Qt4 menu implementations

	* include/file_browser.h:
	* include/qt3support.h:
	* src/core/file_browser.cpp:
	fixed Qt4 context menu

	* data/locale/ca.ts:
	* src/tracks/pattern.cpp:
	hide irrelevant freeze options from context menu

2007-05-07	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/audio_jack.h:
	* include/effect.h:
	* include/effect_chain.h:
	* include/envelope_and_lfo_widget.h:
	* include/instrument_track.h:
	* include/mixer.h:
	* include/pattern.h:
	* include/sample_buffer.h:
	* include/shared_object.h:
	* plugins/ladspa_bas:e/ladspa_control.cpp:
	* plugins/ladspa_base/ladspa_control.h:
	* plugins/ladspa_effect/ladspa_effect.cpp:
	* src/audio/audio_jack.cpp:
	* src/core/effect.cpp:
	* src/core/effect_chain.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/core/envelope_tab_widget.cpp:
	* src/core/file_browser.cpp:
	* src/core/mixer.cpp:
	* src/core/piano_roll.cpp:
	* src/core/song_editor.cpp:
	* src/core/track.cpp:
	* src/core/track_container.cpp:
	* src/lib/oscillator.cpp:
	* src/lib/sample_buffer.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/pattern.cpp:
	- removed process locks
	- use mixer lock if necessary

	* include/detuning_helper.h:
	initial release, light replacement for the note detuning knob

	* Makefile.am:
	* include/automatable_object.h:
	* include/automatable_object_templates.h:
	* include/note.h:
	* include/note_play_handle.h:
	* src/core/note.cpp:
	* src/core/note_play_handle.cpp:
	use detuning helpers

	* Makefile.am:
	* include/note_play_handle.h:
	* src/core/note_play_handle.cpp:
	dropped QObject inheritance

	* include/note_play_handle.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/note_play_handle.cpp:
	simplified subnote creation

	* include/pattern.h:
	* include/piano_roll.h:
	* src/core/piano_roll.cpp:
	* src/tracks/instrument_track.cpp:
	note list became read-only

	* include/oscillator.h:
	* plugins/organic/organic.cpp:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* src/lib/oscillator.cpp:
	use references instead of pointers

	* include/oscillator.h:
	* include/sample_buffer.h:
	use read-only user waveform

	* include/custom_events.h:
	initial release, custom events list

	* include/update_event.h:
	initial release, allow thread-safe GUI updates

	* Makefile.am:
	* include/fade_button.h:
	* include/piano_widget.h:
	* src/core/piano_widget.cpp:
	* src/widgets/fade_button.cpp:
	use thread-safe GUI updates

	* include/automation_editor.h:
	* include/piano_roll.h:
	* src/core/automation_editor.cpp:
	* src/core/piano_roll.cpp:
	simplified paint event

	* include/instrument.h:
	* include/instrument_play_handle.h:
	* include/mixer.h:
	* include/note_play_handle.h:
	* include/play_handle.h:
	* include/preset_preview_play_handle.h:
	* include/sample_play_handle.h:
	* include/track.h:
	* plugins/vestige/vestige.cpp:
	* src/core/instrument.cpp:
	* src/core/mixer.cpp:
	* src/core/note_play_handle.cpp:
	* src/core/preset_preview_play_handle.cpp:
	* src/core/sample_play_handle.cpp:
	* src/tracks/bb_track.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/sample_track.cpp:
	simplified handle removal

	* include/mixer.h:
	- removed duplicate playHandles()
	- removed unnecessary private copy constructor

	* include/track.h:
	* include/track_container.h:
	* src/core/track.cpp:
	* src/core/track_container.cpp:
	simplified track clonation

	* include/track.h:
	* src/core/track.cpp:
	simplified track removal

	* include/instrument_track.h:
	* include/note_play_handle.h:
	* src/core/note_play_handle.cpp:
	* src/tracks/instrument_track.cpp:
	- moved piano widget control to instrument track
	- calculate frequencies in note play handle

	* include/note_play_handle.h:
	* plugins/organic/organic.cpp:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	public note frequency became read-only

	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/lb302/lb302.cpp:
	* plugins/patman/patman.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/polyb302/polyb302.cpp:
	* plugins/singerbot/singerbot.cpp:
	* plugins/stk/mallets/mallets.cpp:
	* plugins/vibed/vibed.cpp:
	use precalculated note frequency

	* include/automatable_object_templates.h:
	reduced XML size for single-valued patterns

	* src/core/automation_pattern.cpp:
	* src/tracks/automation_pattern.cpp:
	- moved to core
	- initialize copy constructor

	* include/automation_pattern.h:
	* src/core/automation_pattern.cpp:
	- show read-only data
	- disconnect single-valued patterns from track

	* include/level_object.h:
	* src/core/automation_pattern.cpp:
	added display name

	* include/project_version.h:
	* src/lib/project_version.cpp:
	initial release, compare application versions

	* include/mmp.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/song_editor.cpp:
	* src/lib/mmp.cpp:
	* src/tracks/sample_track.cpp:
	added upgrade feature

	* Makefile.am:
	* src/lmms_single_source.cpp:
	- moved automation pattern to core
	- added project version

	* include/arp_and_chords_tab_widget.h:
	* include/audio_jack.h:
	* include/audio_oss.h:
	* include/audio_port.h:
	* include/audio_sdl.h:
	* include/automatable_slider.h:
	* include/automation_editor.h:
	* include/automation_pattern.h:
	* include/config_mgr.h:
	* include/effect.h:
	* include/effect_control_dialog.h:
	* include/effect_label.h:
	* include/effect_tab_widget.h:
	* include/engine.h:
	* include/envelope_tab_widget.h:
	* include/fifo_buffer.h:
	* include/instrument.h:
	* include/instrument_track.h:
	* include/level_object.h:
	* include/main_window.h:
	* include/meter_dialog.h:
	* include/midi_dummy.h:
	* include/midi_event_processor.h:
	* include/midi_port.h:
	* include/mixer.h:
	* include/note_play_handle.h:
	* include/pattern.h:
	* include/piano_roll.h:
	* include/piano_widget.h:
	* include/plugin.h:
	* include/preset_preview_play_handle.h:
	* include/rack_plugin.h:
	* include/rack_view.h:
	* include/sample_play_handle.h:
	* include/sample_track.h:
	* include/side_bar.h:
	* include/surround_area.h:
	* include/tempo_sync_knob.h:
	* include/tool.h:
	* include/track_container.h:
	* include/volume_knob.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bass_booster/bassbooster_control_dialog.cpp:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/flp_import/flp_import.cpp:
	* plugins/kicker/kicker.cpp:
	* plugins/ladspa_base/ladspa_control.cpp:
	* plugins/ladspa_base/ladspa_control.h:
	* plugins/ladspa_base/ladspa_manager.h:
	* plugins/ladspa_effect/ladspa_control_dialog.h:
	* plugins/lb302/lb302.cpp:
	* plugins/lb302/lb302.h:
	* plugins/organic/organic.cpp:
	* plugins/patman/patman.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/polyb302/polyb302.cpp:
	* plugins/polyb302/polyb302.h:
	* plugins/singerbot/singerbot.cpp:
	* plugins/singerbot/singerbot.h:
	* plugins/stk/mallets/mallets.cpp:
	* plugins/stk/mallets/mallets.h:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/vestige/vestige.cpp:
	* plugins/vestige/vestige.h:
	* plugins/vibed/impulse_editor.cpp:
	* plugins/vibed/vibed.cpp:
	* plugins/vst_effect/vst_control_dialog.cpp:
	* plugins/vst_effect/vst_effect.cpp:
	* plugins/vst_effect/vst_subplugin_features.cpp:
	* src/core/automation_pattern.cpp:
	* src/core/effect_control_dialog.cpp:
	* src/core/effect_tab_widget.cpp:
	* src/core/envelope_tab_widget.cpp:
	* src/core/midi_tab_widget.cpp:
	* src/core/piano_widget.cpp:
	* src/core/plugin.cpp:
	* src/core/surround_area.cpp:
	* src/core/track.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/sample_track.cpp:
	* src/widgets/automatable_slider.cpp:
	* src/widgets/effect_label.cpp:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/tempo_sync_knob.cpp:
	reduced dependencies

	* plugins/ladspa_base/ladspa_manager.cpp:
	* plugins/lb302/lb302.cpp:
	* plugins/lb302/lb302.h:
	* src/audio/audio_port.cpp:
	* src/core/engine.cpp:
	* src/midi/midi_client.cpp:
	* src/tracks/instrument_track.cpp:
	* src/widgets/knob.cpp:
	* src/widgets/rack_view.cpp:
	fixed memory leaks

	* include/automatable_object_templates.h:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/singerbot/singerbot.cpp:
	* plugins/vibed/vibrating_string.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/lib/sample_buffer.cpp:
	simplified deletions

	* include/song_editor.h:
	* src/core/song_editor.cpp:
	improved destructor workaround (still a workaround)

	* src/core/timeline.cpp:
	avoid invalid reference

	* src/core/config_mgr.cpp:
	removed invariant condition

	* src/core/automation_editor.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/core/piano_roll.cpp:
	reordered inline functions

	* src/core/plugin.cpp:
	initialize dummy plugin subfeatures

	* include/effect_chain.h:
	* src/core/effect_chain.cpp:
	- normalized destructor
	- renamed deleteEffect() to removeEffect(), the effect isn't deleted
	  actually
	- simplified removeEffect()

	* src/widgets/rack_view.cpp:
	simplified deletePlugin()

	* include/rack_plugin.h:
	* src/widgets/rack_plugin.cpp:
	- fixed hot insertion/removal
	- simplified context menu

	* src/lib/project_journal.cpp:
	initialize journalling state

	* include/arp_and_chords_tab_widget.h:
	arpeggio directions are public

	* src/core/midi_tab_widget.cpp:
	spin boxes are initially disabled

	* plugins/ladspa_base/ladspa_control.cpp:
	* plugins/ladspa_effect/ladspa_control_dialog.cpp:
	disabled link automation

	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/audio_file_processor/audio_file_processor.h:
	- save/load start/end knobs automation
	- don't reset start/end knob values when changing the sample file
	- removed unused setStartAndEndKnob()

	* plugins/polyb302/polyb302.cpp:
	* plugins/polyb302/polyb302.h:
	removed slide toggle

	* include/effect_label.h:
	* src/widgets/effect_label.cpp:
	- delete related effect window
	- display label text

	* include/audio_device.h:
	* include/audio_dummy.h
	* include/midi_client.h:
	* include/midi_dummy.h:
	hide empty settings box

	* include/pattern.h:
	* plugins/flp_import/flp_import.cpp:
	* src/tracks/pattern.cpp:
	- simplified beat insertion/display
	- removed unused functions

	* include/mixer.h:
	* src/tracks/pattern.cpp:
	render note tails in frozen patterns

	* plugins/organic/organic.cpp:
	* plugins/organic/organic.h:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/triple_oscillator/triple_oscillator.h:
	added oscillator objects

	* plugins/organic/organic.cpp:
	* plugins/organic/organic.h:
	- normalized member names
	- simplified waveshape selection

	* include/automatable_object.h:
	* include/knob.h:
	* src/widgets/knob.cpp:
	* src/widgets/volume_knob.cpp:
	removed automatable object custom data

	* plugins/singerbot/singerbot.cpp:
	* plugins/singerbot/singerbot.h:
	- reworked play process without sample buffers
	- retry wave generation on damaged environment

	* configure.in:
	* plugins/ladspa_effect/Makefile.am:
	added --without-caps configure option

	* configure.in:
	added extra compilation warnings

	* include/qt3support.h:
	removed (non-)bug comment

	* data/locale/ca.ts:
	updated translation

2007-04-25	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/basic_filters.h:
	* plugins/flp_import/flp_import.cpp:
	* src/core/envelope_tab_widget.cpp:
	simplified filtering

	* plugins/vst_base/lvsl_server.c:
	clear output buffers before processing

	* plugins/vestige/vestige.cpp:
	* plugins/vst_base/lvsl_client.cpp:
	* plugins/vst_base/lvsl_client.h:
	fixed sample rate change

	* data/locale/ca.ts:
	updated translation

2007-04-24	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/buffer_allocator.h:
	* src/lib/buffer_allocator.cpp:
	removed, obsoleted by small audio buffers

	* Makefile.am:
	* include/audio_device.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/kicker/kicker.cpp:
	* plugins/ladspa_effect/ladspa_effect.cpp:
	* plugins/lb302/lb302.cpp:
	* plugins/organic/organic.cpp:
	* plugins/patman/patman.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/polyb302/polyb302.cpp:
	* plugins/singerbot/singerbot.cpp:
	* plugins/stk/mallets/mallets.cpp:
	* plugins/stk/mallets/mallets.h:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/vestige/vestige.cpp:
	* plugins/vibed/vibed.cpp:
	* plugins/vibed/vibed.h:
	* plugins/vibed/vibrating_string.cpp:
	* plugins/vibed/vibrating_string.h:
	* plugins/vst_effect/vst_effect.cpp:
	* src/lmms_single_source.cpp:
	* src/audio/audio_alsa.cpp:
	* src/audio/audio_device.cpp:
	* src/audio/audio_file_device.cpp:
	* src/audio/audio_file_wave.cpp:
	* src/audio/audio_jack.cpp:
	* src/audio/audio_oss.cpp:
	* src/audio/audio_port.cpp:
	* src/audio/audio_sample_recorder.cpp:
	* src/audio/audio_sdl.cpp:
	* src/core/main_window.cpp:
	* src/core/mixer.cpp:
	* src/core/sample_play_handle.cpp:
	* src/tracks/pattern.cpp:
	* src/widgets/visualization_widget.cpp:
	removed buffer allocator

	* include/automatable_object_templates.h:
	initial release, templates extracted from automatable_object.h

	* Makefile.am:
	* include/automatable_object.h:
	* plugins/ladspa_base/ladspa_control.cpp:
	* plugins/ladspa_effect/ladspa_effect.h:
	* plugins/patman/patman.cpp:
	* plugins/singerbot/singerbot.cpp:
	* src/core/automation_editor.cpp:
	* src/core/bb_editor.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/core/export_project_dialog.cpp:
	* src/core/note.cpp:
	* src/core/note_play_handle.cpp:
	* src/core/piano_roll.cpp:
	* src/core/piano_widget.cpp:
	* src/core/setup_dialog.cpp:
	* src/core/song_editor.cpp:
	* src/core/surround_area.cpp:
	* src/core/track.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/sample_track.cpp:
	* src/widgets/automatable_button.cpp:
	* src/widgets/automatable_slider.cpp:
	* src/widgets/combobox.cpp:
	* src/widgets/effect_label.cpp:
	* src/widgets/knob.cpp:
	* src/widgets/lcd_spinbox.cpp:
	* src/widgets/led_checkbox.cpp:
	* src/widgets/pixmap_button.cpp:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/tempo_sync_knob.cpp:
	* src/widgets/volume_knob.cpp:
	reduced dependencies on automatable object

	* src/audio/audio_device.cpp:
	* src/core/export_project_dialog.cpp:
	* src/core/mixer.cpp:
	fixed deadlocks

	* include/audio_dummy.h:
	don't process buffers

	* src/audio/audio_sample_recorder.cpp:
	fixed high quality

	* include/basic_filters.h:
	* include/envelope_and_lfo_widget.h:
	* src/core/envelope_tab_widget.cpp:
	simplified envelope processing

	* include/basic_filters.h:
	- use samplerate member as sample rate
	- reformatted

	* plugins/ladspa_effect/ladspa_subplugin_features.cpp:
	reverted layout changes in QT3, fixes descriptions

	* plugins/triple_oscillator/artwork.png:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	updated GUI

	* include/tempo_sync_knob.h:
	* src/widgets/tempo_sync_knob.cpp:
	graceful shutdown

	* src/widgets/automatable_button.cpp:
	fixed undef

	* plugins/ladspa_effect/caps/Makefile.am:
	use DESTDIR

2007-04-21	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* plugins/singerbot/singerbot.cpp:
	* src/audio/audio_jack.cpp:
	* src/audio/audio_sdl.cpp:
	assume 1-case semaphores, fixes single source compilation

	* configure.in:
	fixed --enable options

2007-04-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/ladspa_effect/ladspa_subplugin_features.cpp:
	* plugins/patman/patman.cpp:
	* plugins/singerbot/singerbot.h:
	* plugins/singerbot/singerbot.cpp:
	* plugins/live_tool/live_tool.cpp:
	* plugins/polyb302/polyb302.cpp:
	* include/fifo_buffer.h:
	* include/bb_track.h:
	* include/audio_device.h:
	* include/midi_client.h:
	* include/qt3support.h:
	* src/audio/audio_sdl.cpp:
	* src/audio/audio_jack.cpp:
	* src/core/note_play_handle.cpp:
	* src/core/track_container.cpp:
	* src/core/tool.cpp:
	* src/core/setup_dialog.cpp:
	* src/core/track.cpp:
	* src/core/effect_select_dialog.cpp:
	* src/core/main_window.cpp:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/tool_button.cpp:
	* src/widgets/rack_view.cpp:
	* src/widgets/effect_label.cpp:
	fixes for Qt4-version

	* plugins/midi_import/midi_import.cpp:
	* src/core/automation_editor.cpp:
	* src/core/piano_roll.cpp:
	added inclusion of debug.h which includes assert.h for not failing to
	compile on several platforms

2007-04-20	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* executable files:
	removed executable property

2007-04-19	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/audio_port.h:
	* include/automatable_button.h:
	* include/automatable_object.h:
	* include/automatable_slider.h:
	* include/automation_editor.h:
	* include/automation_pattern.h:
	* include/bb_editor.h:
	* include/bb_track.h:
	* include/combobox.h:
	* include/cpuload_widget.h:
	* include/dummy_plugin.h:
	* include/effect.h:
	* include/effect_chain.h:
	* include/effect_label.h:
	* include/effect_select_dialog.h:
	* include/engine.h:
	* include/envelope_and_lfo_widget.h:
	* include/export_project_dialog.h:
	* include/file_browser.h:
	* include/group_box.h:
	* include/import_filter.h:
	* include/instrument.h:
	* include/journalling_object.h:
	* include/knob.h:
	* include/lcd_spinbox.h:
	* include/led_checkbox.h:
	* include/main_window.h:
	* include/midi_alsa_raw.h:
	* include/midi_alsa_seq.h:
	* include/midi_client.h:
	* include/midi_dummy.h:
	* include/midi_oss.h:
	* include/mixer.h:
	* include/name_label.h:
	* include/note.h:
	* include/pattern.h:
	* include/piano_roll.h:
	* include/pixmap_button.h:
	* include/plugin.h:
	* include/plugin_browser.h:
	* include/preset_preview_play_handle.h:
	* include/project_journal.h:
	* include/project_notes.h:
	* include/rack_view.h:
	* include/sample_buffer.h:
	* include/sample_play_handle.h:
	* include/setup_dialog.h:
	* include/song_editor.h:
	* include/string_pair_drag.h:
	* include/surround_area.h:
	* include/tempo_sync_knob.h:
	* include/timeline.h:
	* include/track_container.h:
	* include/visualization_widget.h:
	* include/volume_knob.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bass_booster/bass_booster.cpp:
	* plugins/bass_booster/bass_booster.h:
	* plugins/bass_booster/bassbooster_control_dialog.cpp
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/bit_invader/graph.cpp:
	* plugins/bit_invader/graph.h:
	* plugins/flp_import/flp_import.cpp:
	* plugins/kicker/kicker.cpp:
	* plugins/ladspa_base/ladspa_2_lmms.cpp:
	* plugins/ladspa_base/ladspa_2_lmms.h:
	* plugins/ladspa_base/ladspa_base.h:
	* plugins/ladspa_base/ladspa_control.cpp:
	* plugins/ladspa_base/ladspa_control.h:
	* plugins/ladspa_base/ladspa_manager.cpp:
	* plugins/ladspa_base/ladspa_manager.h:
	* plugins/ladspa_base/ladspa_port_dialog.cpp:
	* plugins/ladspa_base/ladspa_port_dialog.h:
	* plugins/ladspa_effect/ladspa_control_dialog.cpp:
	* plugins/ladspa_effect/ladspa_effect.cpp:
	* plugins/ladspa_effect/ladspa_effect.h:
	* plugins/ladspa_effect/ladspa_subplugin_features.cpp:
	* plugins/ladspa_effect/ladspa_subplugin_features.h:
	* plugins/lb302/lb302.cpp:
	* plugins/live_tool/live_tool.cpp:
	* plugins/midi_import/midi_import.cpp:
	* plugins/organic/organic.cpp:
	* plugins/patman/patman.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/polyb302/polyb302.cpp:
	* plugins/polyb302/polyb302.h:
	* plugins/singerbot/singerbot.cpp:
	* plugins/stk/mallets/mallets.cpp:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/vestige/vestige.cpp:
	* plugins/vibed/graph.cpp:
	* plugins/vibed/graph.h:
	* plugins/vibed/impulse_editor.cpp:
	* plugins/vibed/impulse_editor.h:
	* plugins/vibed/nine_button_selector.cpp:
	* plugins/vibed/nine_button_selector.h:
	* plugins/vibed/vibed.cpp:
	* plugins/vst_base/lvsl_client.cpp:
	* plugins/vst_base/lvsl_client.h:
	* plugins/vst_effect/vst_effect.cpp:
	* plugins/vst_effect/vst_effect.h:
	* plugins/vst_effect/vst_subplugin_features.cpp:
	* plugins/vst_effect/vst_subplugin_features.h:
	* src/audio/audio_alsa.cpp:
	* src/audio/audio_jack.cpp:
	* src/audio/audio_oss.cpp:
	* src/audio/audio_port.cpp:
	* src/audio/audio_sample_recorder.cpp:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/automation_editor.cpp:
	* src/core/bb_editor.cpp:
	* src/core/effect.cpp:
	* src/core/effect_chain.cpp:
	* src/core/effect_control_dialog.cpp:
	* src/core/effect_select_dialog.cpp:
	* src/core/effect_tab_widget.cpp:
	* src/core/engine.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/core/envelope_tab_widget.cpp:
	* src/core/export_project_dialog.cpp:
	* src/core/file_browser.cpp:
	* src/core/import_filter.cpp:
	* src/core/instrument.cpp:
	* src/core/main.cpp:
	* src/core/main_window.cpp:
	* src/core/meter_dialog.cpp:
	* src/core/midi_tab_widget.cpp:
	* src/core/mixer.cpp:
	* src/core/name_label.cpp:
	* src/core/note.cpp:
	* src/core/note_play_handle.cpp:
	* src/core/piano_roll.cpp:
	* src/core/piano_widget.cpp:
	* src/core/plugin.cpp:
	* src/core/plugin_browser.cpp:
	* src/core/preset_preview_play_handle.cpp:
	* src/core/sample_play_handle.cpp:
	* src/core/setup_dialog.cpp:
	* src/core/song_editor.cpp:
	* src/core/surround_area.cpp:
	* src/core/timeline.cpp:
	* src/core/tool.cpp:
	* src/core/track.cpp:
	* src/core/track_container.cpp:
	* src/lib/journalling_object.cpp:
	* src/lib/project_journal.cpp:
	* src/lib/sample_buffer.cpp:
	* src/lib/string_pair_drag.cpp:
	* src/midi/midi_alsa_raw.cpp:
	* src/midi/midi_alsa_seq.cpp:
	* src/midi/midi_client.cpp:
	* src/midi/midi_oss.cpp:
	* src/tracks/automation_pattern.cpp:
	* src/tracks/bb_track.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/pattern.cpp:
	* src/tracks/sample_track.cpp:
	* src/widgets/automatable_button.cpp:
	* src/widgets/automatable_slider.cpp:
	* src/widgets/combobox.cpp:
	* src/widgets/cpuload_widget.cpp:
	* src/widgets/effect_label.cpp:
	* src/widgets/group_box.cpp:
	* src/widgets/knob.cpp:
	* src/widgets/lcd_spinbox.cpp:
	* src/widgets/led_checkbox.cpp:
	* src/widgets/pixmap_button.cpp:
	* src/widgets/project_notes.cpp:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/rack_view.cpp:
	* src/widgets/tempo_sync_knob.cpp:
	* src/widgets/visualization_widget.cpp:
	* src/widgets/volume_knob.cpp:
	return of the singletons

	* include/fifo_buffer.h:
	initial release, allows chunked audio buffer

	* include/audio_alsa.h:
	* include/audio_device.h:
	* include/audio_dummy.h:
	* include/audio_jack.h:
	* include/audio_oss.h:
	* include/audio_sdl.h:
	* include/mixer.h:
	* src/audio/audio_alsa.cpp:
	* src/audio/audio_device.cpp:
	* src/audio/audio_jack.cpp:
	* src/audio/audio_oss.cpp:
	* src/audio/audio_sdl.cpp:
	* src/core/mixer.cpp:
	* src/core/setup_dialog.cpp:
	use chunked audio buffer

	* src/core/mixer.cpp:
	don't delete the audio device when changing quality, fixes JACK without
	external server

	* include/sample_buffer.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/patman/patman.cpp:
	* src/lib/sample_buffer.cpp:
	handle different sample rates, fixes many looping patch samples

	* src/core/sample_play_handle.cpp:
	fixed high quality

	* plugins/patman/patman.cpp:
	automated Loop and Tune modes

	* plugins/audio_file_processor/audio_file_processor.cpp:
	automated Loop mode

	* src/core/automation_editor.cpp:
	fixed selections

	* src/core/track_container.cpp:
	use modularized sample extensions

	* include/string_pair_drag.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/patman/patman.cpp:
	* src/lib/string_pair_drag.cpp:
	changed string pair MIME type

	* src/lib/mmp.cpp:
	renamed root element

	* data/lmms.xml:
	initial release, project MIME type

	* data/Makefile.am:
	install project MIME type

	* data/lmms.desktop:
	- added project MIME type
	- added Catalan translation

	* include/oscillator.h:
	* src/lib/oscillator.cpp:
	got switches out of for-loops

	* include/arp_and_chords_tab_widget.h:
	* include/effect_tab_widget.h:
	* include/instrument_track.h:
	* include/midi_tab_widget.h:
	* include/track.h:
	cleaned up dependencies

	* data/locale/ca.ts:
	updated translation

2007-04-07	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* plugins/patman/artwork.png:
	* plugins/patman/logo.png:
	* plugins/patman/loop_off.png:
	* plugins/patman/loop_on.png:
	* plugins/patman/Makefile.am:
	* plugins/patman/patman.cpp:
	* plugins/patman/patman.h:
	* plugins/patman/tune_off.png:
	* plugins/patman/tune_on.png:
	initial release, PatMan instrument plugin

	* include/sample_buffer.h:
	* src/lib/sample_buffer.cpp:
	- added start/end loop points, different from start/end sample points
	- added sample frequency
	- reworked resampling, fixes resampling underruns/clicks
	- reused try-to-make-relative and try-to-make-absolute file handling
	- reused samplerate conversion

	* include/sample_buffer.h:
	* include/sample_play_handle.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/audio_file_processor/audio_file_processor.h:
	* plugins/singerbot/singerbot.cpp:
	* src/core/sample_play_handle.cpp:
	* src/lib/sample_buffer.cpp:
	added per handle state

	* include/engine.h:
	* include/file_browser.h:
	* include/plugin.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/audio_file_processor/audio_file_processor.h:
	* src/core/engine.cpp:
	* src/core/file_browser.cpp:
	* src/core/main_window.cpp:
	modularized sample extensions

	* plugins/audio_file_processor/audio_file_processor.cpp:
	- check dragged file extension
	- accept dragged files from desktop
	- fit displayed file name in the background box

	* src/core/track_container.cpp:
	fixed track swapping

	* src/tracks/bb_track.cpp:
	fixed loading last bb-track name

	* include/pattern.h:
	* src/tracks/pattern.cpp:
	removed obsolete method

	* plugins/polyb302/polyb302.cpp:
	* plugins/polyb302/polyb302.h:
	simplified inclusions and comments

	* include/main_window.h:
	cosmetic, grouped methods

	* data/locale/ca.ts:
	updated translation

2007-04-01	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/lmms_single_source.cpp:
	moved inclusion of file_browser.cpp up as it has problems with headers
	included by later files

2007-03-28	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/mixer.h:
	* include/note_play_handle.h:
	* src/core/note_play_handle.cpp:
	* src/core/song_editor.cpp:
	fixed notes with dynamic tempo

	* include/main_window.h:
	* src/core/main_window.cpp:
	added online help

	* include/file_browser.h:
	* src/core/file_browser.cpp:
	- filter directories without relevant content
	- simplified entry retrieval

	* include/basic_filters.h:
	limit Moog instability

	* src/core/main.cpp:
	updated year

	* src/widgets/knob.cpp:
	initialize members according to last arrangement

	* data/locale/ca.ts:
	updated translation

2007-03-26	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	fixed "typo" in help

2007-03-25	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* plugins/polyb302/artwork.png:
	* plugins/polyb302/logo.png:
	* plugins/polyb302/Makefile.am:
	* plugins/polyb302/polyb302.cpp:
	* plugins/polyb302/polyb302.h:
	initial release, polyphonic version of lb302 plugin

	* include/instrument_track.h:
	* include/note_play_handle.h:
	* src/core/note_play_handle.cpp:
	* src/tracks/instrument_track.cpp:
	trigger detuning without signals

	* configure.in:
	fixed singerbot error

	* include/knob.h:
	arranged private/protected members

	* data/locale/ca.ts:
	updated translation

2007-03-07	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* plugins/singerbot/singerbot.cpp:
	fixed high quality play

	* data/locale/ca.ts:
	shortened some words

2007-02-28	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/audio/audio_alsa.cpp:
	* src/audio/audio_sdl.cpp:
	fixed high quality play

	* include/audio_alsa.h:
	* include/audio_device.h:
	* include/audio_dummy.h:
	* include/audio_jack.h:
	* include/audio_oss.h:
	* include/audio_sdl.h:
	* include/midi_alsa_raw.h:
	* include/midi_alsa_seq.h
	* include/midi_client.h:
	* include/midi_dummy.h:
	* include/midi_oss.h:
	* include/setup_dialog.h:
	* src/core/setup_dialog.cpp:
	save device names without localization

	* data/locale/ca.ts:
	updated translation

	* plugins/lb302/lb302.cpp:
	* src/audio/audio_alsa.cpp:
	* src/audio/audio_oss.cpp:
	fixed typos

2007-02-27	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/widgets/fade_button.cpp:
	simplified timer usage, fixes frozen leds and hopefully the segfaults

	* src/core/config_mgr.cpp:
	create widgets once

2007-02-25	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* plugins/singerbot/singerbot.cpp:
	* plugins/singerbot/singerbot.h:
	use libsamplerate

	* plugins/singerbot/singerbot.cpp:
	- resample while playing, reduced start-up CPU usage
	- joined scheme commands

	* configure.in:
	- added libsamplerate dependency to singerbot
	- don't add plugin libraries to global LIBS

	* src/core/automation_editor.cpp:
	- fixed selection
	- values moved at time 0 don't move horizontally

	* src/core/piano_roll.cpp:
	little optimization when selecting all notes

	* src/tracks/instrument_track.cpp:
	emit sentMidiTime always, pitch automation mustn't be disabled

	* plugins/ladspa_base/ladspa_control.cpp:
	* plugins/ladspa_effect/ladspa_effect.cpp:
	raise gain range up to 10

	* include/effect_select_dialog.h:
	* include/plugin.h:
	* plugins/ladspa_effect/ladspa_subplugin_features.cpp:
	* plugins/ladspa_effect/ladspa_subplugin_features.h:
	* plugins/vst_effect/vst_subplugin_features.cpp:
	* plugins/vst_effect/vst_subplugin_features.h:
	* src/core/effect_select_dialog.cpp:
	changed description layout

	* plugins/ladspa_effect/ladspa_subplugin_features.cpp:
	simplified translations

	* plugins/live_tool/live_tool.cpp:
	added what's-this-text

2007-02-20	Alexey Kouznetsov <alexey/dot/kouznetsov/at/gmail/dot/com>

	* data/locale/ru.ts:
	updated Russian translation

2007-02-16	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* Makefile.am:
	added include/effect_lib.h to sources-list

2007-02-03	Paul Giblock <pgib/at/users/dot/sourceforge/dot/net>

	* plugins/lb302/lb302.cpp:
	* plugins/lb302/lb302.h:
	* plugins/lb302/artwork.png:
	* plugins/lb302/logo.png:
	* plugins/lb302/Makefile.am:
	* plugins/lb302/README:
	Initial release.  LB302 Bass Synth beta instrument plugin

	* configure.in:
	* plugins/Makefile.am:
	* src/tracks/instrument_track.cpp:
	Added LB302 support

	* data/projects/misc/lb302_quick.mmp:
	Added LB302 demo

	* src/widgets/knob.cpp:
	Fixed compile-time bug caused by pointer casted to uint

2007-01-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/note_play_handle.cpp:
	removed obsolete support for monophonic instruments

	* src/tracks/instrument_track.cpp:
	added new code for better support of monophonic instrument

2007-01-20	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* plugins/singerbot/artwork.png:
	* plugins/singerbot/logo.png:
	* plugins/singerbot/Makefile.am:
	* plugins/singerbot/singerbot.h:
	* plugins/singerbot/singerbot.cpp:
	initial release, SingerBot (experimental) instrument plugin

	* configure.in:
	* include/note_play_handle.h:
	* plugins/Makefile.am:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/note_play_handle.cpp:
	* src/tracks/instrument_track.cpp:
	added singerbot support

	* include/sample_buffer.h:
	deleteResampling methods made static

	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/organic/organic.cpp:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* src/core/note_play_handle.cpp:
	* src/tracks/instrument_track.cpp:
	call deleteNotePluginData() only if there is plugin data, fixes
	unprotected instruments

	* plugins/vestige/vestige.cpp:
	trigger deleteNotePluginData()

	* src/tracks/instrument_track.cpp:
	avoid double unlock

	* configure.in:
	fixed configuring with --with-stk

	* acinclude.m4:
	moved QT_TRANSLATIONS_DIR to config.h

	* plugins/flp_import/flp_import.cpp:
	* plugins/flp_import/unrtf/word.c:
	optimized unsafe loops

	* src/lib/sample_buffer.cpp:
	* src/widgets/project_notes.cpp:
	minor cosmetic changes

	* include/shared_object.h:
	not really thread-safe, will be removed

2007-01-02	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/note.cpp:
	fixed segfault in hasDetuningInfo() if m_detuning was NULL

	* README:
	* src/core/about_dialog.cpp:
	extended copyright from 2006 to 2007

2006-12-28	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	some cleanups and fixes

	* src/tracks/instrument_track.cpp:
	before calling mixer::addPlayHandle(), unlock m_notesMutex as in some
	cases (when running into xruns)
	instrumentTrack::deleteNotePluginData() is called while the mutex is
	locked and the program was frozen

	* include/track.h:
	* plugins/flp_import/flp_import.cpp:
	* plugins/midi_import/midi_import.cpp:
	* src/core/file_browser.cpp:
	* src/core/preset_preview_play_handle.cpp:
	* src/core/song_editor.cpp:
	* src/core/track.cpp:
	* src/core/track_container.cpp:
	* src/tracks/instrument_track.cpp:
	changed name of constant CHANNEL_TRACK to INSTRUMENT_TRACK

2006-12-24	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/kicker/kicker.cpp:
	changed minimal value for frequency-knobs from 40 to 5 Hz

2006-12-23	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* plugins/kicker/kicker.cpp:
	fixed envelope segfault

2006-12-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/note_play_handle.h:
	* src/core/note_play_handle.cpp:
	added parameter to nphsOfInstrumentTrack() which will cause the method
	to add note-play-handles even if they're released

	* include/effect_lib.h:
	- renamed bassBosst to fastBastBoost
	- added new bassBoost-class based on audacity's bass-boost-effect

	* plugins/kicker/kicker.cpp:
	* include/effect_lib.h:
	introduced new distortion-class which sounds better than
	foldback-distortion

2006-12-20	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/widgets/rack_plugin.cpp:
	* src/widgets/tempo_sync_knob.cpp:
	defer deletion of additional windows, fixes event-loop segfault

2006-12-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/tracks/instrument_track.cpp:
	fixed basic envelope

	* plugins/kicker/kicker.h:
	* plugins/kicker/kicker.cpp:
	* plugins/kicker/logo.png:
	* plugins/kicker/artwork.png:
	* plugins/kicker/Makefile.am:
	* plugins/Makefile.am:
	* configure.in:
	added Kicker-plugin, a versatile kick- & bassdrum-synthesizer

	* include/sweep_oscillator.h:
	added simple sweep-oscillator-class

	* include/effect_lib.h:
	- added foldbackDistortion-class
	- added process()-methods to monoBase- and stereoBase-class
	- added bypass-classes for mono and stereo
	- added effect-chaining-class

	* configure.in:
	fail if -fomit-frame-pointer is found in compiler-flags and
	VST-support is not disabled

2006-12-19	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/tool.h:
	* src/core/tool.cpp:
	initial release, base class for all tool plugins

	* include/plugin.h:
	* plugins/ladspa_effect/ladspa_subplugin_features.cpp:
	renamed AnalysisTools to Tool

	* include/main_window.h:
	* src/core/main_window.cpp:
	added tools menu

	* Makefile.am:
	* src/lmms_single_source.cpp:
	added tool plugins

	* configure.in:
	* plugins/live_tool/artwork.png:
	* plugins/live_tool/live_tool.cpp:
	* plugins/live_tool/live_tool.h:
	* plugins/live_tool/logo.png:
	* plugins/live_tool/Makefile.am:
	added live tool, an example tool plugin

	* plugins/Makefile.am:
	- added live tool
	- eased SVN merging

	* data/*/Makefile.am:
	* data/*/*/Makefile.am:
	* plugins/vst_base/Makefile.am:
	- removed wildcard extension for POSIX compliance
	- fixed additional automake 1.10 issues

2006-12-18	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/bass_booster/bassboster_control_dialog.h:
	* plugins/bass_booster/bassboster_control_dialog.cpp:
	set changed parameters directly using new set...-methods of effect-lib
	(preserves current effect-state and therefore avoids clicks in sound-
	stream)

	* include/effect_lib.h:
	- renamed class "base" to "monoBase"
	- monoToStereoAdaptor can now have different effects for the two
	  channels
	- added stereoToMonoAdaptor
	- extended baseBoost-class by several methods
	
	* plugins/vestige/vestige.h:
	* plugins/vestige/vestige.cpp:
	added note-state-array for handling sequences of "note-on note-off"
	events while the according note is already on which for example is the
	case when placing the two notes at the same key next to each other -
	until now the plugin started playing the second note but stopped
	immediately as the note-off-event of the first note arrived later than
	the note-on-event of the second one

	* src/core/instrument.cpp:
	always call invalidate() in destructor so (instrumentPlayHandle-
	driven) plugins do not have to care about it

	* src/tracks/instrument_track.cpp:
	make sure value returned by masterKey() is within allowed range	

	* src/core/mixer.cpp:
	fixed bug which caused LMMS to crash when using parallelizing-level
	above 1 and invalidated play-handles were existing

2006-12-17	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/bass_booster/bassboster_control_dialog.cpp:
	* plugins/bass_booster/bassboster_control_dialog.h:
	* plugins/bass_booster/bass_boster.h:
	* plugins/bass_booster/bass_boster.cpp:
	* plugins/bass_booster/Makefile.am:
	* plugins/Makefile.am:
	* configure.in:
	added bassbooster-effect-plugin

	* src/core/effect_select_dialog.cpp:
	added support for effects without sub-plugin-support and fixed some
	potential crashs

	* include/effect_lib.h:
	added simple but powerful template-based effect-library with currently
	two basic effects

2006-12-11	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/sample_buffer.h:
	* src/lib/sample_buffer.cpp:
	- fixed SDL_sound decoding
	- enabled speex samples

	* src/core/file_browser.cpp:
	* src/core/main_window.cpp:
	enabled speex samples

	* plugins/ladspa_effect/ladspa_effect.cpp:
	fixed adding effect segfault

2006-12-09	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	check for ${prefix} before extending CFLAGS etc. - should fix issue
	with make-problems when using older automake-versions

	* include/instrument.h:
	* include/envelope_tab_widget.h:
	* src/core/envelope_tab_widget.cpp:
	support for instruments which want to define their own number of
	release-frames

	* include/instrument_track.h:
	* include/instrument.h:
	* src/core/note_play_handle.cpp:
	support for monophonic instruments

	* include/mixer.h:
	* src/core/mixer.cpp:
	made mixer::removePlayHandle() to accept const-pointers

2006-12-06	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/note.h:
	* src/core/note.cpp:
	show detuning in the piano roll

	* include/piano_roll.h:
	* src/core/piano_roll.cpp:
	- show note detuning
	- save last key when starting to play, fixes held notes bug
	- removed cursor enter/leave events, they could be ignored
	- optimized unsafe loops

	* include/xqmap.h:
	initial release, QMap with lowerBound for Qt3

	* include/automation_pattern.h:
	* src/tracks/automation_pattern.cpp:
	- use lowerBound find, resets to proper values
	- work with inverted midi time

	* include/automation_editor.h:
	* src/core/automation_editor.cpp:
	- work with inverted midi time
	- fixed display of hidden values
	- added red cross
	- update detuning in the piano roll
	- removed cursor enter/leave events, they could be ignored
	- optimized unsafe loops
	- minor optimizations

	* include/note_play_handle.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	set subnotes' BB track

	* data/track_icons/*.png:
	re-added corrupted images

	* src/core/name_label.cpp:
	added bad pixmap protection

	* src/audio/audio_alsa.cpp:
	- removed unnecessary asynchronous behaviour, fixes large audio buffers
	- fill the whole period buffer, avoids underrun in synchronous mode

	* src/core/setup_dialog.cpp:
	don't use the journal

	* include/journalling_object.h:
	ease short disabling

	* include/automatable_object.h:
	- use light journal disabling
	- use the journal if necessary

	* src/widgets/knob.cpp:
	* src/widgets/lcd_spinbox.cpp:
	* src/widgets/volume_knob.cpp:
	use the journal if necessary

	* src/widgets/tempo_sync_knob.cpp:
	- change icon when changing mode, fixes automation crash
	- disable the journal when calculating sync time

	* src/core/bb_editor.cpp:
	don't create TCOs when there aren't any BB tracks

	* src/tracks/instrument_track.cpp:
	removed temporary fix

2006-12-05	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/ladspa_effect/caps/Makefile.am:
	added include-path of LMMS for successfully compiling CAPS with shipped
	LADSPA-header

	* src/tracks/instrument_track.cpp:
	integrated patch from Jean-Yves Lefort <jylefort/at/freebsd/dot/org>

2006-12-04	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* Makefile.am:
	added ladspa-1.1.h to source-file-list

	* plugins/ladspa_effect/caps/basics.h:
	include shipped LADSPA-header if none was found during configure

2006-12-03	Alexey Kouznetsov <alexey/dot/kouznetsov/at/gmail/dot/com>

	* data/locale/ru.ts:
	updated Russian translation

2006-11-19	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vst_base/lvsl_server.c:
	proper handling of pitch-bend-events

	* plugins/vestige/vestige.h:
	* plugins/vestige/vestige.cpp:
	handle MIDI-events by forwarding them to VST-plugin

	* include/instrument.h:
	* src/tracks/instrument_track.cpp:
	if supported by according instrument, it now can handle all incoming
	MIDI-events (except Noteon and Noteoff)

	* src/midi/midi_alsa_seq.cpp:
	more complete implementation of MIDI-event-handling

2006-11-15	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/audio_alsa.h:
	* src/audio/audio_alsa.cpp:
	* src/audio/audio_device.cpp:
	* src/audio/audio_file_wave.cpp:
	convert-endian-based conversion instead of little-endian-based,
	fixes OSS and SDL

	* include/audio_sdl.h:
	* src/audio/audio_sdl.cpp:
	fill the whole audio buffer

2006-11-11	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/core/piano_roll.cpp:
	fixed pasting recorded notes segfault

	* configure.in:
	turned EXTRAFLAGS into DEFAULTFLAGS

2006-11-11	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/flp_import/flp_import.cpp:
	include ctype.h

2006-11-08	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/bb_track.h:
	* src/tracks/bb_track.cpp:
	change color of selected group of TCOs

	* plugins/vst_base/lvsl_server.c:
	fixed segfault when initializing some VST plugins

	* src/lib/sample_buffer.cpp:
	fixed switching from normal play to resampling play

2006-10-30	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/lib/string_pair_drag.cpp:
	when decoding value of stringPairDrag-class use everything after ":"
	instead of first section as the value (string) itself might contain
	":"-characters - makes it possible to drag'n'drop instrument-tracks
	with VeSTige-instrument and avoids crash

	* src/core/piano_roll.cpp:
	when checking cursor-position in edit-mode (move/resize note), do
	comparisons in pixels instead of tact64th - fixes bug that 32th- and
	64th-notes could not be resized

	* src/core/file_browser.cpp:
	also recognize "mmpz"-files as projects and load them when
	double-clicking them

	* src/tracks/pattern.cpp:
	when loading pattern, check type afterwards and correct if neccessary

2006-10-09	Mikael Freeman <mikael/dot/freeman/at/mac/dot/se>

	* data/locale/sv.ts:
	updated Swedish translation

2006-09-28	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/setup_dialog.h:
	* src/core/main_window.cpp:
	* src/core/setup_dialog.cpp:
	* src/lib/mmp.cpp:
	added support for compressed project ("mmpz"-extension), files are
	compressed if extension given to multimediaProject::writeFile() is
	mmpz or (if none given) user enabled compression as default

	* data/locale/de.ts:
	updated German translation (still incomplete (mainly for
	mallets-plugin))

	* lmms.1:
	updated manpage (added link to Wiki and updated description)

	* configure.in:
	* include/ladspa-1.1.h:
	* plugins/ladspa_base/ladspa_manager.h:
	added the latest LADSPA-header to be shipped with LMMS for always
	building LMMS with LADSPA-support, even if no ladspa.h was found on
	system (still causes warning)

2006-09-25	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	* plugins/ladspa_effect/Makefile.am:
	* plugins/ladspa_effect/caps/Makefile.am:
	added missing Makefile.am and re-added CAPS-support

2006-09-25	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>

	* plugins/vibed/vibrating_string.cpp:
	2x oversampling in non-hq-mode to get the instument to sound the
	same in both modes
	
	* configure.in:
	* plugins/ladspa_effect/Makefile.am:
	removed references to CAPS (sorry about that Toby, but I couldn't get
	anything to build with them--there's no make info in the CAPS dir)

2006-09-25	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* acinclude.m4:
	* configure.in:
	* Makefile.am:
	* include/piano_roll.h:
	* include/piano_widget.h:
	* src/core/piano_roll.cpp:
	* src/core/piano_widget.cpp:
	made LMMS compile with mingw-cross-compiler

	* include/automatable_slider.h:
	* plugins/stk/mallets/mallets.cpp:
	* plugins/vst_effect/vst_subplugin_features.cpp:
	* plugins/vst_effect/vst_subplugin_features.cpp:
	* src/core/meter_dialog.cpp:
	* src/widgets/automatable_slider.cpp:
	* src/widgets/knob.cpp:
	* src/widgets/volume_knob.cpp:
	Qt4-fixes

	* plugins/audio_file_processor/audio_file_processor.cpp:
	* src/lib/sample_buffer.cpp:
	removed obsolete inclusion of paths.h

	* include/rack_view.h:
	* plugins/ladspa_effect/ladspa_effect.cpp:
	* src/core/effect_control_dialog.cpp:
	include qt3-support-header first

	* plugins/vst_effect/vst_control_dialog.cpp:
	do not try to reparent effect's plugin-widget in destructor - fixes
	crash when deleting vst-effect from effect-chain

	* src/lib/mmp.cpp:
	do not indent mmp-files anymore as it wastes *a lot* of unneccesary
	space

	* data/projects/cool_songs/StrictProduction-Underline.mmp:
	added another cool project

	* plugins/ladspa_base/ladspa_manager.cpp:
	- always add /usr/lib/ladspa and /usr/local/lib/ladspa to directories
	  where to search for LADSPA-plugins
	- also search in /usr/lib/lmms/ladspa for LADSPA-plugins (that's where
	  for example CAPS is installed)

	* plugins/ladspa_effect/caps/:
	added CAPS (C Audio Plugin Suite) for providing a basic LADSPA-plugin-
	collection

2006-09-23	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vst_effect/vst_control_dialog.cpp:
	save and load settings of VST-effect - with this VST-effect-support is
	complete for now

	* plugins/vst_base/lvsl_client.h:
	* plugins/vst_base/lvsl_client.cpp:
	* plugins/vestige/vestige.cpp:
	moved code from vestigeInstrument::saveSettings() and
	vestigeInstrument::loadSettings() to remoteVSTPlugin

	* plugins/ladspa_effect/ladspa_control_dialog.h:
	changed node-name from "controls" to "ladspacontrols" to be more
	consistent with naming-conventions

	* plugins/ladspa_effect/ladspa_subplugin_features.h:
	* plugins/ladspa_effect/ladspa_subplugin_features.cpp:
	moved ladspaSubPluginFeatures-code from LADSPA-base to where it
	belongs/is used - in LADSPA-effect

	* data/projects/demos/Zvonsully-RaceTheZBeat.mmp:
	* data/projects/cool_songs/Malex-Horizon4.mmp:
	added two projects

	* plugins/ladspa_base/ladspa_browser.cpp:
	* plugins/ladspa_base/ladspa_subplugin_features.cpp:
	removed #ifdef SINGLE_SOURCE_COMPILE, as this doesn't affect plugins -
	fixes bug with undefined symbol in libladspaeffect.so

	* configure.in:
	enable VST-support per default

	* include/aeffectx.h:
	added Javier's header (with dssi-vst-patch)

	* data/lmms:
	* data/lmms.desktop:
	* data/Makefile.am:
	added desktop- and menu-entry-file for LMMS (thanks to Javier for the
	latter one on debian-list)

2006-09-23	Mikael Freeman <mikael/dot/freeman/at/mac/dot/se>

	* data/locale/sv.ts:
	added first Swedish translation (very incomplete)

2006-09-22	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vst_base/lvsl_client.cpp:
	m_initialized is now set before calling waitForProcessingFinished(),
	makes VST-effects work

2006-09-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vst_effect/Makefile.am:
	* plugins/vst_effect/logo.png:
	* plugins/vst_effect/vst_effect.h:
	* plugins/vst_effect/vst_effect.cpp:
	* plugins/vst_effect/vst_control_dialog.h:
	* plugins/vst_effect/vst_control_dialog.cpp:
	* plugins/vst_effect/vst_subplugin_features.h:
	* plugins/vst_effect/vst_subplugin_features.cpp:
	added plugin for supporting VST-effects inside LMMS - currently very
	experimental and incomplete, but it compiles and works somehow ;-)

	* plugins/ladspa_effect/Makefile.am:
	generating ladspa_effect.moc not needed ynmore

	* plugins/vestige/Makefile.am:
	- use new vstbase-library
	- do not link against X11, as not needed anymore

	* plugins/Makefile.am:
	* plugins/vst_base/Makefile.am:
	* plugins/vst_base/communication.h:
	* plugins/vst_base/lvsl_client.h:
	* plugins/vst_base/lvsl_client.cpp:
	* plugins/vst_base/lvsl_server.c:
	* plugins/vst_base/vst_base.cpp:
	moved LVSL-code into separate library for allowing multiple
	LMMS-plugins to deal with VST-plugins

2006-09-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/*/*.png:
	* data/locale/*.qm:
	* data/samples/*:
	* data/themes/*:
	re-added all binary files as they were corrupted during SVN-migration
	for some reason

	* configure.in:
	* Makefile.am:
	* plugins/ladspa_base/*:
	* include/config_mgr.h:
	* include/engine.h:
	* include/setup_dialog.h:
	* src/audio/audio_port.cpp:
	* src/core/config_mgr.cpp:
	* src/core/engine.cpp:
	* src/core/setup_dialog.cpp:
	* src/lmms_single_source.cpp:
	moved all LADSPA-related code into separate library against which LMMS
	is linked when compiling with LADSPA-support

	* Makefile.cvs:
	renamed to Makefile.svn as LMMS-CVS-repo was migrated to subversion

2006-09-18	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vestige/vestige.h:
	* plugins/vestige/vestige.cpp:
	* plugin/vestige/lvsl_client.h:
	* plugin/vestige/lvsl_client.cpp:
	take advantage of LMMS' new parallelizing-support - works indeed the
	way expected! all VST-servers are now balanced all over available CPUs

	* plugins/audio_file_processor/audio_file_processor.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bit_invader/bit_invader.h:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/organic/organic.h:
	* plugins/organic/organic.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.h:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/mallets/mallets.h:
	* plugins/mallets/mallets.cpp:
	* plugins/vestige/vestige.h:
	* plugins/vestige/vestige.cpp:
	* plugins/vibed/vibed.h:
	* plugins/vibed/vibed.cpp:
	* include/instrument.h:
	* include/instrument_play_handle.h:
	* include/mixer.h:
	* include/note_play_handle.h:
	* include/play_handle.h:
	* include/plugin.h:
	* include/preset_preview_play_handle.h:
	* include/sample_play_handle.h:
	* include/setup_dialog.h:
	* include/track.h:
	* src/core/instrument.cpp:
	* src/core/mixer.cpp:
	* src/core/plugin.cpp:
	* src/core/preset_preview_play_handle.cpp:
	* src/core/sample_play_handle.cpp:
	* src/core/setup_dialog.cpp:
	* src/tracks/instrument_track.cpp:
	added first simple support for parallelizing sound-processing for
	using full power of SMP-systems (e.g. my new dual-core-notebook :-)

2006-09-17	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/tempo_sync_knob.h:
	fixed save/load segfault in LADSPA controls

	* src/core/song_editor.cpp:
	fixed looping when processing the audio buffer

	* include/timeline.h:
	* src/core/timeline.cpp:
	update loop points state button when loading a project

	* src/core/automation_editor.cpp:
	fixed segfault when stopping without pattern

2006-09-17	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/flp_import/flp_import.cpp:
	* plugins/midi_import/midi_import.cpp:
	* plugins/organic/organic.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/mallets/mallets.cpp:
	* plugins/vestige/vestige.cpp:
	* plugins/vibed/vibed.cpp:
	extended plugin-descriptor by sub_plugin_features-field (for
	non-effects likely NULL)

	* include/audio_port.h:
	* include/effect.h:
	* include/effect_chain.h:
	* include/effect_label.h:
	* include/effect_tab_widget.h:
	* include/instrument.h:
	* include/instrument_track.h:
	* include/ladspa_browser.h:
	* include/ladspa_manager.h:
	* include/main_window.h:
	* include/plugin.h:
	* include/rack_plugin.h:
	* include/rack_view.h:
	* include/sample_track.h:
	* src/lmms_single_source.cpp:
	* src/audio/audio_port.cpp:
	* src/core/effect.cpp:
	* src/core/effect_chain.cp:
	* src/core/effect_tab_widget.cpp:
	* src/core/import_filter.cpp:
	* src/core/ladspa_browser.cpp:
	* src/core/main_window.cpp:
	* src/core/mixer.cpp:
	* src/core/plugin.cpp:
	* src/core/plugin_browser.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/sample_track.cpp:
	* src/widgets/effect_label.cpp:
	* src/widgets/ladspa_control.cpp:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/rack_view.cpp:
	added generic effect-framework based on LADSPA-effect-code for using
	arbitrary effects inside LMMS and using sub-plugins (such as
	LADSPA-plugins) transparently at the same time, now writing of any
	other effects an begin

	* plugins/ladspa_effect/ladspa_effect.h:
	* plugins/ladspa_effect/ladspa_effect.cpp:
	* plugins/ladspa_effect/ladspa_control_dialog.h:
	* plugins/ladspa_effect/ladspa_control_dialog.cpp:
	moved LADSPA-effect-support into separate plugin

	* include/dummy_effect.h:
	* include/effect_control_dialog.h:
	* include/effect_select_dialog.h:
	* include/ladspa_base.h:
	* include/ladspa_subplugin_features.h:
	* src/core/effect_control_dialog.cpp:
	* src/core/effect_select_dialog.cpp:
	* src/core/ladspa_subplugin_features.cpp:
	added (see description above)

	* include/ladspa_control_dialog.h:
	* include/ladspa_description.h:
	* include/ladspa_effect.h:
	* include/select_ladspa_dialog.h:
	* src/core/ladspa_control_dialog.cpp:
	* src/core/ladspa_effect.cpp:
	* src/core/select_ladspa_dialog.cpp:
	removed

	* data/locale/de.ts:
	updated German translation

	* configure.in:
	- do not set wrong VST_SUPPORT-condition if winegcc was found and
	  --with-vst specified but VST-headers are missing
	- LADSPA-support not experimental anymore and enabled per default when
	  header is found
	- use -O2 per default

2006-09-11	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* plugins/vestige/lvsl_server.c:
	save/load all plugin parameters

2006-09-09	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/core/automation_editor.cpp:
	fixed single source compilation

2006-09-08	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>
	* configure.in:
	fixed check for STK headers and library
	
	* plugins/stk/mallets/mallets.h:
	removed the meaningless index boundary limiter for m_delayRead and
	m_delayWrite
	
	* configure.in:
	* plugins/Makefile.am:
	* plugins/stk/Makefile.am:
	began work on supporting STK instruments

	* plugins/stk/mallets/Makefile.am:
	* plugins/stk/mallets/artwork.png:
	* plugins/stk/mallets/logo.png:
	* plugins/stk/mallets/mallets.h:
	* plugins/stk/mallets/mallets.cpp:
	added mallets instrument
	
	* include/config_mgr.h:
	* src/core/config_mgr.cpp:
	* include/setup_dialog.h:
	* src/core/setup_dialog.cpp:
	added STK rawwave to directory selector
	
2006-09-03	Thomas Girard <thomas/dot/g/dot/girard/at/free/dot/fr>

	* src/core/file_browser.cpp:
	fixed bad project browsing segfault

2006-09-03	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/bb_track.h:
	* src/core/track.cpp:
	integrated Toby's Qt4 fixes

	* src/widgets/tempo_sync_knob.cpp:
	- integrated Toby's Qt4 fixes
	- connect the meter dialog only when custom sync
	- don't set the modified flag on automated changes

	* src/core/song_editor.cpp:
	- integrated Toby's Qt4 fixes
	- rely on objects to set the modified flag

	* src/core/meter_dialog.cpp:
	added names to display in the automation editor

2006-09-03	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* acinclude.m4:
	* include/effect_tab_widget.h:
	* include/ladspa_description.h:
	* include/qt3support.h:
	* include/rack_view.h:
	* include/track.h:
	* src/audio/audio_device.cpp:
	* src/core/automation_editor.cpp:
	* src/core/effect_tab_widget.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/core/ladspa_control_dialog.cpp:
	* src/core/ladspa_effect.cpp:
	* src/core/ladspa_port_dialog.cpp:
	* src/core/name_label.cpp:
	* src/core/note.cpp:
	* src/core/piano_roll.cpp:
	* src/lib/ladspa_2_lmms.cpp:
	* src/lib/ladspa_manager.cpp:
	* src/tracks/automation_pattern.cpp:
	* src/tracks/instrument_track.cpp:
	* src/widgets/effect_label.cpp:
	* src/widgets/ladspa_control.cpp:
	* src/widgets/ladspa_description.cpp:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/rack_view.cpp:
	* src/widgets/volume_knob.cpp:
	Qt4-compat fixes

2006-08-30	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>
	* src/widgets/ladspa_control.cpp:
	added a lock to prevent segfaults when changing the values
	while playing
	
	* src/core/ladspa_effect.cpp:
	corrected the labeling of "(ms)" which were showing up as
	"(ms))"
	
	* Makefile.am:
	* src/lmms_single_source.cpp:
	* include/meter_dialog.h:
	* src/core/meter_dialog.cpp:
	* include/tempo_sync_knob.h:
	* src/widgets/tempo_sync_knob:
	added user definable settings for tempo sync
	
	* src/core/arp_and_chords_tab_widget.cpp:
	- changed arp time knob to save using new tempo sync format
	- fixed a bug that was preventing the arp groupbox state from
	  being restored properly
	
	* src/core/envelope_and_lfo_widget.cpp:
	changed lfo time knob to save using new tempo sync format
	
2006-08-28	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* COPYING:
	updated GPL

	* README:
	* source files:
	updated FSF address

	* depcomp:
	removed generated file

	* mkinstalldirs:
	removed auxiliary automake file

2006-08-27	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/automation_track.h:
	* include/bb_editor.h:
	* include/bb_track.h:
	* include/instrument_track.h:
	* include/sample_track.h:
	* src/core/bb_editor.cpp:
	* src/core/song_editor.cpp:
	* src/tracks/automation_track.cpp:
	* src/tracks/bb_track.cpp:
	* src/tracks/sample_track.cpp:
	removed start frame from play() methods

	* src/tracks/instrument_track.cpp:
	- removed start frame from play() methods
	- removed checks when sending automation events

	* include/track.h:
	- removed start frame from play() methods
	- removed checks when sending automation events
	- use update() instead of repaint()

	* src/core/track.cpp:
	- fixed no bb-track case
	- removed checks when sending automation events
	- use update() instead of repaint()

	* src/core/track_container.cpp:
	* src/widgets/kmultitabbar.cpp:
	* src/widgets/text_float.cpp:
	use update() instead of repaint()

	* include/automation_editor.h:
	* include/piano_roll.h:
	* src/core/automation_editor.cpp:
	* src/core/piano_roll.cpp:
	moved update() reimplementations to methods called from paintEvent()

	* include/envelope_and_lfo_widget.h:
	* src/core/envelope_tab_widget.cpp:
	optimized envelope and LFO computations

	* src/core/envelope_and_lfo_widget.cpp:
	- optimized envelope and LFO computations
	- separated sample variables updates from paint events

	* include/combobox.h:
	clear the menu when the combobox is cleared

	* src/midi/midi_alsa_seq.cpp:
	clean-up properly

2006-08-24	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/shared_object.h:
	initial release, shared object for use among threads

	* include/sample_buffer.h:
	became a shared object

	* src/tracks/instrument_track.cpp:
	use sample handles to play frozen patterns, fixes crackling

	* include/pattern.h:
	* src/tracks/pattern.cpp:
	allow access to the frozen pattern

	* include/sample_play_handle.h:
	* src/core/sample_play_handle.cpp:
	- react to bb-track mute automation
	- added constructor to handle frozen patterns
	- use shared sample buffers

	* include/instrument_track.h:
	getAudioPort() is required

	* include/sample_track.h:
	* src/tracks/sample_track.cpp:
	- removed obsolete play() in sampleTCO
	- use shared sample buffers

	* src/core/envelope_and_lfo_widget.cpp:
	fixed load settings deadlock

	* src/audio/audio_device.cpp:
	graceful shutdown

	* include/midi_alsa_seq.h:
	* src/midi/midi_alsa_seq.cpp:
	added pipe to detect shutdown

	* Makefile.am:
	added shared object

2006-08-22	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	- changed package-maintainer-email-address to lmms-devel-list
	- removed -floop-optimization2-flag as it is deprecated and not
	  supported by coming GCC 4.2

2006-08-20	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/envelope_and_lfo_widget.h:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/core/envelope_tab_widget.cpp:
	changed busy flag into busy mutex, improves thread safety

2006-08-18	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/core/bb_editor.cpp:
	removed disabled tracks

	* src/tracks/instrument_track.cpp:
	added automation disabled

	* include/bb_track.h:
	* include/track.h:
	* src/core/track.cpp:
	* src/tracks/bb_track.cpp:
	renamed disabled track logic to automation disabled

	* include/pattern.h:
	* src/tracks/pattern.cpp:
	added empty() to check whether there is any relevant note

	* src/lib/oscillator.cpp:
	check user waveform presence, fixes organic segfault

	* src/core/name_label.cpp:
	changed icon selection, fixes loss of icon

2006-08-17	Erwin Goossen <egoossen/at/tomaatnet/dot/nl>

	* data/locale/nl.ts:
	updated Dutch translation

2006-08-16	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>
	* src/widgets/tempo_sync_knob.cpp:
	changed context menu to only display possible note length
	options based on the knob's max value
	
	* include/ladspa_effect.h:
	* src/core/ladspa_effect.cpp:
	- added a new port data type TIME for port names containing
	  "(ms)", "(S)", or "(Seconds)"
	- converts units to milliseconds for TIME ports
	
	* src/widgets/ladspa_control.cpp:
	use a tempoSyncKnob for TIME ports
	
	* src/widgets/automatable_button.cpp:
	remove toggled signal sent from method toggle--it's also sent
	from setValue, and the double signal was wreaking havoc with
	the channel linkings
	
	* include/ladspa_control.h:
	* include/ladspa_control_dialog.h:
	* src/core/ladspa_control_dialog.cpp:
	* src/widgets/ladspa_control.cpp:
	* src/widgets/rack_plugin.cpp:
	- added channel link selectors for individual ports
	- don't show control edit button for plugins with no controls
	
2006-08-16	Erwin Goossen <egoossen/at/tomaatnet/dot/nl>

	* data/locale/nl.ts:
	added Dutch translation

2006-08-15	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/automatable_object.h:
	fixed unlinking objects

	* include/automation_pattern.h:
	added constructor for unlinking objects

	* src/tracks/automation_pattern.cpp:
	- added constructor for unlinking objects
	- don't remove value at position 0

	* INSTALL:
	* Makefile.cvs:
	* install-sh:
	* missing:
	removed more generated files

2006-08-15	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/knob.cpp:
	support for linking knobs using <Shift> + drag'n'drop (note that
	connetions are not saved!)

2006-08-15	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>
	* src/widgets/ladspa_control.cpp:
	doubled the number of steps in the knobs
	
	* src/core/ladspa_control_dialog.cpp:
	changed linking to default on
	
	* data/themes/default/effect_plugin.png:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/rack_view.cpp:
	added some texture to the plugin widget
	
	* src/core/ladspa_control_dialog.cpp:
	save and restore the channel link state
	
	* src/widgets/rack_plugin.cpp:
	added deletion of the control view to the dtor to make it clean
	up after itself
	
	* include/automatable_object.h:
	* include/ladspa_control.h:
	* include/ladspa_control_dialog.h:
	* src/core/ladspa_control_dialog.cpp:
	* src/core/ladspa_control.cpp:
	- added a link channels option to the ladspa controls
	
	* All of the effects related files:
	reformatted to respect the 80 characters per line convention
	
2006-08-15	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* Makefile.cvs:
	small makefile to be run before configure for creating/copying all
	neccessary files

	* config.sub:
	* config.guess:
	* configure:
	* config.h.in:
	* ltmain.sh:
	removed

2006-08-14	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>
	* Makefile.am:
	* include/ladspa_effect.h:
	* src/core/ladspa_effect.cpp:
	* include/effect.h:
	* include/effect_chain.h:
	* include/ladspa_browser:
	* include/ladspa_control_dialog.h:
	* include/rack_plugin.h:
	* select_ladspa_dialog.h:
	* src/core/effect.cpp:
	* src/core/effect_chain.cpp:
	* src/core/ladspa_browser.cpp:
	* src/core/ladspa_control_dialog.cpp:
	* src/core/select_ladspa_dialog.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/sample_track.cpp:
	* src/widgets/ladspa_control.cpp:
	* src/widgets/rack_plugin.cpp:
	- separated ladspa specific stuff into a class derived from
	  effect
	- changed the default value range for unhinted ports from
	  (-99999,99999) to (0,1)

2006-08-13	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/tracks/sample_track.cpp:
	moved playing to samplePlayHandle, removes crackling

	* include/sample_track.h:
	- allow sample buffer access
	- getAudioPort() is required
	- removed slots, moved playing to samplePlayHandle

	* include/sample_play_handle.h.
	* src/core/sample_play_handle.cpp:
	- became a QObject
	- create handle from sampleTCO
	- fill audio buffer from the requested base frame
	- made automation-awared

	* Makefile.am:
	samplePlayHandle is now a QObject

	* include/sample_buffer.h:
	- use fast sample generation, rely on proper waveforms
	- removed locks in sample generation
	- added lock methods for use in higher levels

	* src/lib/oscillator.cpp:
	lock user waveform once per loop

	* data/samples/shapes/low_sine.wav:
	low frequency sine for use in the oscillator

	* include/lmms_math.h:
	added fast pseudo-random integer generator

	* include/oscillator.h:
	- use fast noise generation
	- simplified user-wave call, frames must never be 0

	* include/basic_filters.h:
	- added minQ "constant"
	- limit Q resonance

	* src/core/envelope_tab_widget.cpp:
	added minQ "constant"

2006-08-10	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>
	* src/widgets/ladspa_control.cpp:
	unfixed my misunderstood fix of the setting of sample rate
	dependent ports
	
	* src/core/mixer:
	got rid of the "more_effect |= ..." nonsense
	
	* src/widgets/effect_label.cpp:
	* src/widgets/rack_plugin.cpp:
	changed the parenting of the control dialog to main window
	instead of NULL

2006-08-11	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	added check for ctype.h to make LMMS work on Zenwalk-systems

2006-08-10	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/bb_track.h:
	* include/track.h:
	* src/core/bb_editor.cpp:
	added disabled tracks

	* src/tracks/bb_track.cpp:
	- added disabled tracks
	- fixed BB-track 0 cloning bug

	* src/core/track.cpp:
	- added disabled tracks
	- update track operations menu
	- simplified engine access
	- fixed BB-track 0 cloning bug
	- improved removing automation patterns

	* include/track_container.h:
	- moved tracks() to public
	- added node name

	* src/core/track_container.cpp:
	added node name

	* data/themes/default/mute_on_disabled.png:
	* data/themes/default/track_op_menu_disabled.png:
	* data/themes/default/mute_off_disabled.png:
	* resources/mute_on_disabled.png:
	* resources/track_op_menu_disabled.png:
	* resources/mute_off_disabled.png:
	added disabled track artwork

2006-08-10	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>
	* include/effect.h:
	* include/effect_chain.h:
	* include/effect_label.h:
	* include/effect_tab_widget.h:
	* include/ladspa_control.h:
	* include/ladspa_control_dialog.h:
	* include/ladspa_description.h:
	* include/rack_plugin.h:
	* include/rack_view.h:
	* src/core/effect.cpp:
	* src/core/effect_tab_widget.cpp:
	* src/core/ladspa_port_dialog.cpp:
	* src/core/ladspa_control_dialog.cpp:
	* src/widgets/ladspa_description.cpp:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/rack_view.cpp:
	added Qt4 includes

	* include/config_mgr.h:
	* include/setup_dialog.h:
	* src/core/config_mgr.cpp:
	* src/core/setup_dialog.cpp:
	* src/lib/ladspa_manager.cpp:
	-added ladspa search path to user configuration
	-made ladspa loader ignore all files not ending in "so"

	* include/effect.h:
	* src/core/effect.cpp:
	* src/widgets/ladspa_control.cpp:
	corrected an error in setting the values for sample rate
	dependent ports

	the crackling in the sample tracks is due to rounding errors
	in the calculation of _start_frame in sampleTrack::play that
	cause it to occasionally skip a sample.  Don't know what to
	do about it--just thought it should be noted somewhere.

2006-08-09	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>
	* Makefile.am:
	* include/effect_label.h:
	* include/effect_tab_widget.h:
	* include/instrument_track.h:
	* include/ladspa_control.h:
	* include/ladspa_control_dialog.h:
	* include/rack_plugin.h:
	* include/rack_view.h:
	* src/lmms_single_source.cpp:
	* src/audio/audio_port.cpp:
	* src/core/effect.cpp:
	* src/core/effect_tab_widget.cpp:
	* src/core/ladspa_control_dialog.cpp:
	* src/core/ladspa_port_dialog.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/sample_track.cpp:
	* src/widgets/ladspa_control.cpp:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/rack_view.cpp:
	-full save and load
	-added effects to sample tracks
	-fixed the knob twoddling segfaults (hopefully)
	-somewhere between 0.2.1 and yesterday a crackling has been
	 introduced in the sample tracks.  My largish checkins
	 look like an obvious culprit, but it would have to be
	 something I forgot to #ifdef LADSPA_SUPPORT out.

2006-08-08	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>
	* include/effect.h:
	* include/effect_chain.h:
	* include/effect_tab_widget.h:
	* include/ladspa_browser.h:
	* include/ladspa_control.h:
	* include/ladspa_control_dialog.h:
	* include/rack_plugin.h:
	* include/rack_view.h:
	* src/core/effect.cpp:
	* src/core/effect_chain.cpp:
	* src/core/effect_tab_widget.cpp:
	* src/core/ladspa_browser.cpp:
	* src/core/ladspa_control_dialog.cpp:
	* src/tracks/instrument_track.cpp:
	* src/widgets/ladspa_control.cpp:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/rack_view.cpp:
	-added ability to change the order of effects or delete them
	-partial save and load support
	-still getting spurious segfaults when twoddling with knobs,
	 the textFloat associated with the knob is being reparented to
	 NULL(?!), but works well enough to at least hear what things
	 sound like with effects

2006-08-07	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>
	* include/oscillator.h:
	* plugins/vibed/vibrating_string.h:
	* plugins/vibed/vibrating_string.cpp:
	clean up some things that were preventing the getNextSample
	methods from being inlined

	* configure:
	* configure.in:
	-made ladspa support default off
	-must pass --with-ladspa to get it to build

	* Makefile.am:
	* data/themes/default/add.png:
	* data/themes/default/analysis.png:
	* data/themes/default/ports.png:
	* data/themes/default/uhoh.png:
	* data/themes/default/unavailable_sound.png:
	* data/themes/blue_scene/add.png:
	* data/themes/blue_scene/analysis.png:
	* data/themes/blue_scene/ports.png:
	* data/themes/blue_scene/uhoh.png:
	* data/themes/blue_scene/unavailable_sound.png:
	* include/audio_port.h:
	* include/effect_chain.h:
	* include/effect_tab_widget.h:
	* include/effect.h:
	* include/engine.h:
	* include/group_box.h:
	* include/instrument_track.h:
	* include/ladspa_2_lmms.h:
	* include/ladspa_browser.h:
	* include/ladspa_control.h:
	* include/ladspa_control_dialog.h:
	* include/ladspa_description.h:
	* include/ladspa_manager.h:
	* include/ladspa_port_dialog.h:
	* include/main_window.h:
	* include/rack_plugin.h:
	* include/rack_view.h:
	* include/select_ladspa_dialog.h:
	* src/lmms_single_source.cpp:
	* src/audio/audio_port.cpp:
	* src/core/effect_chain.cpp:
	* src/core/effect_tab_widget.cpp:
	* src/core/effect.cpp:
	* src/core/engine.cpp:
	* src/core/ladspa_browser.cpp:
	* src/core/ladspa_control.cpp:
	* src/core/ladspa_port_dialog.cpp:
	* src/core/main_window.cpp:
	* src/core/mixer.cpp:
	* src/core/select_ladspa_dialog.cpp:
	* src/lib/ladspa_2_lmms.cpp:
	* src/lib/ladspa_manager.cpp:
	* src/tracks/instrument_track.cpp:
	* src/widgets/group_box.cpp:
	* src/widgets/ladspa_control.cpp:
	* src/widgets/ladspa_description.cpp:
	* src/widgets/rack_plugin.cpp:
	* src/widgets/rack_view.cpp:
	-added preliminary support for ladspa effects
	-no load or save
	-expect segfaults

2006-08-07	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/lcd_spinbox.h:
	added manualChange signal

	* src/widgets/lcd_spinbox.cpp:
	- added manualChange signal
	- emit valueChanged whenever value is changed
	- removed redundant journalling operations

	* src/core/song_editor.cpp:
	- set modified flag if there's a manual BPM change
	- set tempo if BPM value has changed
	- allow further processing on muted tracks

	* include/note_play_handle.h:
	* src/core/note_play_handle.cpp:
	* src/tracks/instrument_track.cpp:
	added bbTrack reference to check whether it's muted

	* src/tracks/bb_track.cpp:
	send automation events

	* include/mixer.h:
	* src/core/mixer.cpp:
	fixed overflow when using big audio buffers

	* plugins/audio_file_processor/audio_file_processor.cpp:
	use automation in start-/end-point knobs

	* plugins/vibed/vibed.cpp:
	fixed reversed pan

2006-08-06	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/engine.h:
	* include/midi_time.h:
	* src/core/engine.cpp:
	* src/core/note_play_handle.cpp:
	* src/tracks/bb_track.cpp:
	* src/tracks/sample_track.cpp:
	frames computation based on 64th of a tact, fixes BB-pattern arbitrary
	positioning in song editor

	* include/song_editor.h:
	* src/core/song_editor.cpp:
	- frames computation based on 64th of a tact
	- changed playPos frame counter to float, improves timing precision

	* src/tracks/instrument_track.cpp:
	- frames computation based on 64th of a tact
	- simplified note playing

2006-08-03	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/core/automation_editor.cpp:
	- fixed vertical bars in Auto view
	- fixed selection frame drawing
	- renamed some members and variables

	* include/automation_editor.h:
	renamed some members

2006-08-01	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/automation_editor.h:
	added "Auto" view

	* src/core/automation_editor.cpp:
	- added "Auto" view
	- improved labels display
	- removed duplicate variable y_base

	* include/song_editor.h:
	* src/core/engine.cpp:
	* src/core/song_editor.cpp:
	- moved framesPerTact() from songEditor to engine
	- update frames per tact only when changes happen

	* include/engine.h:
	* src/core/note_play_handle.cpp:
	* src/tracks/bb_track.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/sample_track.cpp:
	moved framesPerTact() from songEditor to engine

2006-07-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	made 0.2.1 release

	* include/mixer.h:
	* include/visualization_widget.h:
	* src/widgets/visualization_widget.cpp:
	fixed a bug in connection between mixer and visualization-widget

2006-07-24	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/tracks/instrument_track.cpp:
	handle notes deleted when keys still pressed

	* include/song_editor.h:
	* src/core/note.cpp:
	* src/core/song_editor.cpp:
	added checks to avoid segfaults when closing the application

2006-07-23	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/core/piano_widget.cpp:
	initialize m_lastKey, fixes segfault

	* src/core/automation_editor.cpp:
	* src/core/note_play_handle.cpp:
	added checks to avoid segfaults when closing the application

2006-07-22	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/automatable_object.h:
	avoid unnecessary level updates

	* include/track.h:
	* src/tracks/instrument_track.cpp:
	trigger automation only when time has changed

	* src/core/track.cpp:
	- trigger automation only when time has changed
	- remove references from patterns when closing the application

	* include/automation_pattern.h:
	added method to avoid segfaults when closing the application

	* src/tracks/automation_pattern.cpp:
	- added check to avoid segfaults when closing the application
	- reverted processMidiTime(), that processing is needed

	* src/core/track_container.cpp:
	* src/lib/journalling_object.cpp:
	added checks to avoid segfaults when closing the application

	* include/engine.h:
	* src/core/engine.cpp:
	- do the clean-up in close()
	- ensure deleted elements aren't accessed

	* src/core/main_window.cpp:
	close the engine rather than delete it

	* include/instrument_track.h:
	allow access to the piano widget

	* include/piano_widget.h:
	moved key event handlers to public

	* include/piano_roll.h:
	redirect events to the piano widget

	* src/core/piano_roll.cpp:
	- changed some accelerators
	- redirect keyboard events to the piano widget
	- fixed segfault when pressing Ctrl with no pattern

	* src/core/automation_editor.cpp:
	changed some accelerators

	* src/core/song_editor.cpp:
	play the automation track only when playing song

	* include/automation_track.h:
	removed unused signal section

	* data/locale/ca.ts:
	updated translation

2006-07-21	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>

	* configure.in:
	- removed -fomit-frame-pointer flag--causes wine to crash on
	  Ubuntu
	- added check for gcc 4.0 for optimization flags--left it
	  commented out--needs to be tested with 4.1

2006-07-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/tracks/automation_pattern.cpp:
	automationPattern::processMidiTime(): do not start search on time-map if
	empty - find() on maps is horribly slow and makes LMMS unusable (still
	have to find a better solution without any find()s at all)

2006-07-19	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	- added optimization-flags
	- made 0.2.0 release

	* vst_sdk23_headers.diff:
	- removed as not needed anymore

2006-07-17	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* data/locale/de.ts:
	* data/locale/de.qm:
	updated German translation

	* include/automation_editor.h:
	decreased DEFAULT_Y_DELTA

	* plugins/flp_import/flp_import.cpp:
	removed some obsolete code

2006-07-17	dieEasy <dieeasy/at/cheapnet/dot/it>

	* locale/it.ts:
	updated Italian translation

2006-07-16	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* data/themes/default/automation.png:
	* resources/automation.png:
	* src/core/automation_editor.cpp:
	* src/core/main_window.cpp:
	* src/core/piano_roll.cpp:
	* src/core/piano_widget.cpp:
	* src/core/surround_area.cpp:
	* src/widgets/automatable_button.cpp:
	* src/widgets/automatable_slider.cpp:
	* src/widgets/combobox.cpp:
	* src/widgets/knob.cpp:
	* src/widgets/lcd_spinbox.cpp:
	* src/widgets/tempo_sync_knob.cpp:
	added automation icon

2006-07-15	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* data/locale/ca.ts:
	updated translation

	* src/core/automation_editor.cpp:
	corrected help sentence

2006-07-14	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/note.h:
	* src/core/note.cpp:
	- added detuning knob
	- added explicit constructor from another note

	* include/note_play_handle.h:
	* src/core/note_play_handle.cpp:
	handle detuning automation

	* include/instrument_track.h:
	send a signal when handling automation

	* src/tracks/instrument_track.cpp:
	- send a signal when handling automation
	- use note detuning to calculate frequency

	* src/core/arp_and_chords_tab_widget.cpp:
	extended detuning to chords and arpeggios

	* include/automation_pattern.h:
	* src/tracks/automation_pattern.cpp:
	- automation pattern can be initialized without track
	- slots moved to public

	* include/automatable_object.h:
	automation pattern can be initialized without track

	* src/core/song_editor.cpp:
	* src/widgets/automatable_slider.cpp:
	updated clear automation method name

	* include/piano_roll.h:
	added open (note in editor) mode and support methods

	* src/core/piano_roll.cpp:
	- added open (note in editor) mode and support methods
	- clone detuning knobs when copying/pasting notes

	* src/core/automation_editor.cpp:
	- improved display when no pattern
	- play buttons can be used to play related note patterns
	- improved play/pause button display

2006-07-10	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/combobox.h:
	* src/widgets/combobox.cpp:
	- use automation capabilities
	- added context menu

	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/automation_editor.cpp:
	* src/core/envelope_tab_widget.cpp:
	* src/core/export_project_dialog.cpp:
	* src/core/piano_roll.cpp:
	upgraded combo boxes

	* src/core/bb_editor.cpp:
	- upgraded combo box
	- improved bb-track management

	* src/tracks/bb_track.cpp:
	- update bb editor combo box when removed
	- moving track is the active one

	* src/core/song_editor.cpp:
	- upgraded combo box
	- use default template to create new projects

	* include/main_window.h:
	* src/core/main_window.cpp:
	- added user templates to templates menu
	- update templates menu when accessed

2006-07-09	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/piano_widget.h:
	* src/core/piano_widget.cpp:
	- use automation capabilities using a helper knob
	- added context menu
	- added save/load methods
	- use raw keycodes to play the piano

	* include/instrument_track.h:
	* src/tracks/instrument_track.cpp:
	- don't set song modified flag when playing automation
	- use piano widget save/load methods

2006-07-08	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/automation_track.h:
	* src/tracks/automation_track.cpp:
	initial release, to handle automation of objects without a track

	* include/lcd_spinbox.h:
	* src/widgets/lcd_spinbox.cpp:
	- use automation capabilities
	- added context menu

	* include/automatable_slider.h:
	* src/widgets/automatable_slider.cpp:
	initial release, slider with automation

	* include/song_editor.h:
	* src/core/song_editor.cpp:
	- use automatable sliders
	- use automation track
	- upgraded lcd spin box
	- joined some slider creation code between QT versions
	- show slider status on manual change only

	* include/track.h:
	* src/core/track.cpp:
	added automation track

	* src/audio/audio_alsa.cpp:
	* src/audio/audio_jack.cpp:
	* src/audio/audio_oss.cpp:
	* src/core/midi_tab_widget.cpp:
	* src/tracks/instrument_track.cpp:
	upgraded lcd spin boxes

	* include/automatable_object.h:
	check whether the automation editor has been created

	* src/core/surround_area.cpp:
	fixed position rounding

	* Makefile.am:
	* src/lmms_single_source.cpp:
	added automatable_slider and automation_track

2006-07-03	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* plugins/audio_file_processor/audio_file_processor.cpp:
	removed all automation

	* src/widgets/automatable_button.cpp:
	button groups may not use automation

	* src/widgets/knob.cpp:
	knobs may not use automation

	* include/automatable_object.h:
	- moved update flag to automation pattern
	- moved nullTrack() to public

	* include/automation_pattern.h:
	* src/tracks/automation_pattern.cpp:
	moved update flag from automatable object

2006-07-02	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/surround_area.h:
	* src/core/surround_area.cpp:
	- use automation capabilities using helper knobs
	- added context menu
	- added save/load methods

	* include/instrument_track.h:
	* src/tracks/instrument_track.cpp:
	use upgraded surround area

	* include/automatable_button.h:
	* src/widgets/automatable_button.cpp:
	- use automation capabilities in button and button group
	- added button context menu

	* include/group_box.h:
	* include/led_checkbox.h:
	* include/pixmap_button.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/vestige/vestige.cpp:
	* plugins/vibed/impulse_editor.cpp:
	* plugins/vibed/impulse_editor.h:
	* plugins/vibed/nine_button_selector.cpp:
	* plugins/vibed/nine_button_selector.h:
	* plugins/vibed/vibed.cpp:
	* src/core/envelope_tab_widget.cpp:
	* src/core/export_project_dialog.cpp:
	* src/core/midi_tab_widget.cpp:
	* src/core/setup_dialog.cpp:
	* src/core/track.cpp:
	* src/widgets/group_box.cpp:
	* src/widgets/led_checkbox.cpp:
	* src/widgets/pixmap_button.cpp:
	upgraded buttons

	* plugins/bit_invader/bit_invader.cpp:
	- upgraded buttons
	- use sample length knob automation

	* plugins/organic/organic.cpp:
	- upgraded button
	- use waveshape knob automation

	* plugins/triple_oscillator/triple_oscillator.cpp:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	upgraded buttons and button groups

	* include/automatable_object.h:
	- moved getAutomationPattern to public
	- added some checks and minor fixes

	* src/core/automation_editor.cpp:
	improved levels display

	* src/core/song_editor.cpp:
	save/load automation editor state

	* src/widgets/tempo_sync_knob.cpp:
	added automation editor option in context menu

2006-06-29	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* Makefile.am:
	* include/automation_editor.h:
	* include/automation_pattern.h:
	* include/engine.h:
	* include/main_window.h:
	* include/song_editor.h:
	* include/time_pattern.h:
	* include/time_roll.h:
	* include/track.h:
	* src/lmms_single_source.cpp:
	* src/core/automation_editor.cpp:
	* src/core/engine.cpp:
	* src/core/main_window.cpp:
	* src/core/time_roll.cpp:
	* src/core/track.cpp:
	* src/tracks/automation_pattern.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/sample_track.cpp:
	* src/tracks/time_pattern.cpp:
	* src/widgets/knob.cpp:
	renamed time* classes to automation* ones

	* include/automatable_object.h:
	- renamed time* classes to automation* ones
	- fixed int classes rounding

	* plugins/organic/organic.cpp:
	save harmonic settings like before

	* data/presets/Organic/organ_risingsun.cs.xml:
	* data/presets/Organic/organ_swish.cs.xml:
	* data/presets/Organic/pad_ethereal.cs.xml:
	* data/presets/Organic/pad_rich.cs.xml:
	* data/presets/Organic/pad_sweep.cs.xml:
	* data/presets/Organic/sequencer_64.cs.xml:
	upgraded to new detuning algorithm

2006-06-28	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/level_object.h:
	* src/tracks/time_pattern.cpp:
	added level<->label methods

	* include/automatable_object.h:
	- added level<->label methods
	- minimized rounding errors

2006-06-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vestige/lvsl_server.c:
	compatibility with older VST-headers (2.0) mentioned by configure

	* acinclude.m4:
	* configure.in:
	compat-fixes for FreeBSD

2006-06-27	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/time_pattern.h:
	* src/tracks/time_pattern.cpp:
	initial release, pattern for dynamic values

	* include/time_roll.h:
	* src/core/time_roll.cpp:
	initial release, time pattern editor

	* include/level_object.h:
	initial release, mainly used by the time-roll

	* include/automatable_object.h:
	- added levelObject inheritance and related functions
	- added time pattern
	- moved linkObject methods to private for safety
	- save/load settings can use generic names and types other than double

	* include/engine.h:
	* include/main_window.h:
	* src/core/engine.cpp:
	* src/core/main_window.cpp:
	added time-roll

	* include/knob.h:
	* src/widgets/knob.cpp:
	- use automation capabilities
	- added time-roll option in context menu

	* include/tempo_sync_knob.h:
	* include/volume_knob.h:
	* src/widgets/automatable_button.cpp:
	* src/widgets/lcd_spinbox.cpp:
	* src/widgets/tempo_sync_knob.cpp:
	* src/widgets/volume_knob.cpp:
	added automation

	* include/envelope_and_lfo_widget.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/organic/organic.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/vibed/vibed.cpp:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/core/envelope_tab_widget.cpp:
	added automation to many knobs

	* include/track.h:
	* src/core/track.cpp:
	- added time pattern
	- added name methods

	* include/instrument_track.h:
	* src/tracks/instrument_track.cpp:
	- moved name scope to track
	- added automation to knobs
	- don't try to load a time pattern plugin

	* src/tracks/sample_track.cpp:
	added automation to knob

	* include/note.h:
	* src/core/note.cpp:
	moved quantized() to public

	* include/qt3support.h:
	added QPointer

	* include/song_editor.h:
	added time pattern

	* src/core/piano_roll.cpp:
	* src/core/song_editor.cpp:
	simplified combobox numbers generation

	* data/themes/default/zoom_x.png:
	* data/themes/default/zoom_y.png:
	* resources/zoom_x.png:
	* resources/zoom_y.png:
	icons for the time-roll

	* Makefile.am:
	* src/lmms_single_source.cpp:
	added new files

2006-06-12	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/organic/organic.cpp:
	* plugins/organic/organic.h:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/triple_oscillator/triple_oscillator.h:
	updated code which uses knob-identification-capabilities

	* include/knob.h:
	* include/volume_knob.h:
	* src/widgets/knob.cpp:
	* src/widgets/volume_knob.cpp:
	use data-property of automatableObject for identifying the knob
	(replaces the id-stuff)

	* include/automatable_object.h:
	added data-property in which any arbitrary information can be stored

2006-06-10	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* src/lib/sample_buffer.cpp:
	- fixed bug when sample processor generates less frames than the audio
	  buffer size
	- load full wav samples

	* data/presets/AudioFileProcessor/Fat-Reversed-Kick.cs.xml:
	* data/presets/AudioFileProcessor/Kick-4-your-Subwoofer.cs.xml:
	upgraded to newer version, end frame value caused segfault

2006-06-09	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/lmms_math.h:
	* include/oscillator.h:
	* include/sample_buffer.h:
	* src/lib/oscillator.cpp:
	- reverted to PM and added FM as a new modulation method
	- improved performance, specially PM/FM
	- moved fraction() to global scope
	- removed absolute value from userWaveSample, it's handled by fraction()

	* plugins/triple_oscillator/pm_active.png:
	* plugins/triple_oscillator/pm_inactive.png:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	added PM buttons, hid FM ones

	* Makefile.am:
	added lmms_math.h

	* data/locale/ca.ts:
	updated translation

2006-06-05	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* include/oscillator.h:
	* include/panning.h:
	* plugins/organic/organic.cpp:
	* plugins/organic/organic.h:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/triple_oscillator/triple_oscillator.h:
	* src/lib/oscillator.cpp:
	oscillator rewrite, now many parameters may be changed between audio
	buffer updates

	* Makefile.am:
	note_play_handle is now a QObject

	* data/projects/cool_songs/Djeezus-BeatRolls.mmp:
	* data/projects/cool_songs/Djeezus-Oscilisous.mmp:
	* data/projects/cool_songs/Marfil-MarfilDrum01.mmp:
	* data/projects/cool_songs/Mart-Concave_flow.mmp:
	* data/projects/cool_songs/Mart-Dirt_Track.mmp:
	* data/projects/cool_songs/MaxFellner-Ease.mmp:
	* data/projects/cool_songs/SharkyX-DeadManDancing.mmp:
	* data/projects/cool_songs/SharkyX-Experiments.mmp:
	* data/projects/cool_songs/Siegel-DreamWave.mmp:
	* data/projects/cool_songs/TobyDox-Confused.mmp:
	* data/projects/cool_songs/TobyDox-Psycho.mmp:
	* data/projects/cool_songs/TobyDox-TheFourthDimension.mmp:
	* data/projects/covers/J.S.Bach-Preludium_and_Fugue_A-Minor.mmp:
	* data/projects/demos/basses-demo.mmp:
	* data/projects/demos/beat-collection.mmp:
	* data/projects/demos/demo1.mmp:
	* data/projects/demos/demo3.mmp:
	* data/projects/demos/demo5.mmp:
	* data/projects/demos/demo6.mmp:
	* data/projects/demos/loop_collection.mmp:
	* data/projects/demos/some_basslines.mmp:
	* data/projects/misc/1st.mmp:
	* data/projects/misc/time_machine.mmp:
	* data/projects/templates/AcousticDrumset.mpt:
	* data/projects/templates/ClubMix.mpt:
	* data/presets/AudioFileProcessor/Bass-Mania.cs.xml:
	* data/presets/AudioFileProcessor/Fat-Reversed-Kick.cs.xml:
	* data/presets/AudioFileProcessor/Kick-4-your-Subwoofer.cs.xml:
	reverted audiofileprocessors to not point to /usr/local/share/lmms, they
	should continue working

	* include/knob.h:
	* include/volume_knob.h:
	* src/widgets/knob.cpp:
	* src/widgets/volume_knob.cpp:
	added knob id

	* include/note_play_handle.h:
	* src/core/note_play_handle.cpp:
	update note frequency when changing base note in instrument track

	* include/instrument_track.h:
	* plugins/flp_import/flp_import.cpp:
	* src/core/piano_widget.cpp:
	* src/tracks/instrument_track.cpp:
	unify method to set a base note

2006-06-03	Javier Serrano Polo <jasp00/at/terra/dot/es>

	* acinclude.m4:
	* src/core/main.cpp:
	detect and load standard Qt translations

2006-05-29	Javier Serrano Polo <jasp00/dot/terra/dot/es>

	* src/core/arp_and_chords_tab_widget.cpp:
	fixed integer-overflow

	* include/oscillator.h:
	* include/sample_buffer.h: 
	* plugins/organic/organic.cpp:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/lib/oscillator.cpp:
	- several segfault-fixes when while playing note
	- volume-knob-changes take effect immediately

	* data/locale/ca.ts:
	added catalan translation

2006-05-26	Javier Serrano Polo <jasp00/dot/terra/dot/es>

	* src/lib/sample_buffer.cpp:
	corrected the calculation of f1 in play to prevent it from shifting
	the start_frame out of bounds when resampling.

	* src/core/config_mgr.cpp:
	* src/lib/mmp.cpp:
	changed the xml output to use UTF8 encoding instead of ascii.

2006-05-23	Danny McRae	<khjklujn/at/users/dot/sourceforge/dot/net>

	* include/oscillator.h:
	FM mixing sometimes calculates a negative "time" for the sampling
	which causes bad things to happen when pulling the data out of
	a user defined wave.  Changed userWaveSample to use the absolute
	value of the sample, which fixes the segfaulting problem.  Not
	sure whether I should care about the negative times elsewhere.

2006-05-22	Danny McRae	<khjklujn/at/users/dot/sourceforge/dot/net>

	* plugins/audio_file_processor/audio_file_processor.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	added a switch to setAudioFile to force the track name to be
	used for the track if a name already exists.  Fixes the problem
	of having tracks being renamed to the file name when loading a
	saved song.

2006-05-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* data/locale/de.ts:
	updated German translation

	* src/core/bb_editor.cpp:
	added button in bb-editor for adding new beat/bassline

	* include/track.h:
	* src/core/track.cpp:
	* src/tracks/bb_track.cpp:
	* src/tracks/instrument_track.cpp:
	* src/tracks/pattern.cpp:
	* src/tracks/sample_track.cpp:
	added "muted"-property to track-content-objects for being able to mute
	single patterns, samples etc. either via context-menu or using <Ctrl>
	and middle mousebutton

2006-05-19	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/track_container.cpp:
	added missing #include (debug.h for assert(...) )

2006-04-18	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/flp_import/unrtf/output.c:
	generally use bigger font-sizes

	* plugins/flp_import/unrtf/attr.c:
	* plugins/flp_import/unrtf/attr.h:
	* plugins/flp_import/flp_import.cpp:
	do not crash when importing FLP-projects more than one time per
	session (some vars need to be reset before unrtf works again)

	* plugins/flp_import/flp_import.cpp:
	- limit number of bb-tracks for avoiding hangups
	- set length of step-notes to -64 instead of -1
	- scale filter-resonance to smaller values

2006-04-17	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vibed/vibed.cpp:
	some small optimizations in vibed::playNote( ... )

2006-04-16	Danny McRae	<khjklujn/at/users/dot/sourceforge/dot/net>
	* Makefile.am:
	* src/lmms_single_source.cpp:
	* include/knob.h:
	* include/instrument_track.h:
	* src/tracks/instrument_track.cpp:
	*+src/include/volume_knob.h:
	*+src/widgets/volume_knob.cpp:
	* include/setup_dialog.h:
	* src/core/setup_dialog.cpp:
	* include/sample_track.h:
	* src/tracks/sample_track.cpp:
	* plugins/audio_file_processor/audio_file_processor.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/organic/organic.h:
	* plugins/organic/organic.cpp:
	* plugins/triple_oscillator/triple_oscillator.h:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/vibed/vibed.h:
	* plugins/vibed/vibed.cpp:
	Added a volume knob widget that will display the volume level as
	either a percentage or in dbV, which can be selected from the
	general settings in the setup dialog.  Changed vibed to use a 
	volume range from 0 to 200 to bring it in line with every other
	volume knob in lmms.  Unfortunately, this will break any existing
	presets, but better to do it now before many of them actually
	exist.

	* src/core/mixer.cpp:
	Changed the number of channels processed from the fixed value of
	SURROUND_CHANNELS to m_audioDev->channels() so that only the
	number of channels that will be output get processed instead of
	the maximum number of channels that could be defined.
	
2006-04-15	Danny McRae	<khjklujn/at/users/dot/sourceforge/dot/net>
	* include/mixer.h:
	* src/core/mixer.cpp:
	* src/core/song_editor.cpp:
	*+data/themes/default/auto_limit.png:
	*+data/themes/blue_scene/auto_limit.png:
	Added auto limiter option.  Main window now has a button next to
	the high-quality button to toggle the auto limiter on and off
	The limiter scales the whole section between zero crossings where
	a clip occurs.  This required adding another processing buffer
	in the mixer, which will double the latency when the auto limiter
	is being used, but when it's not being used, there is no change
	to the latency.  Because it's based on detecting the zero
	crossings, the lowest frequency for which it is effective is
	sample_rate/(4*buffer_len).

2006-04-14	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/lib/mmp.cpp:
	clean metadata-nodes when saving projects, project-templates or presets

	* plugins/vibed/vibed.cpp:
	- in vibed::loadSettings():
	  - simplified loading of wave-shape
	  - delete base64-decoded data at the end
	- commented out code in destructor as it is not neccessary - to be
	  removed someday

	* include/base64.h:
	fixed fatal bug in Qt4-version of base64::decode(): memcpy()ed data to
	_data instead of *_data

	* src/widgets/group_box.cpp:
	* src/widgets/tab_widget.cpp:
	some fine-tuning of Qt4-version of painting-code

	* src/widgets/lcd_spinbox.cpp:
	explicitely set black background-color in Qt4-version

	* src/core/midi_tab_widget.cpp:
	Qt4-version of MIDI-connection-code is now working

	* src/core/main_window.cpp:
	* plugins/vibed/impulse_editor.cpp:
	* plugins/vibed/nine_button_selector.cpp:
	* plugins/vibed/vibed.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/organic/organic.cpp:
	* src/core/song_editor.cpp:
	* src/core/piano_roll.cpp:
	* src/core/main_window.cpp:
	* src/core/bb_editor.cpp:
	* src/core/track.cpp:
	* src/widgets/project_notes.cpp:
	* src/widgets/group_box.cpp:
	* src/widgets/tab_widget.cpp:
	* src/widgets/tool_button.cpp:
	added missing setAutoFillBackground( TRUE )-call for making QWidget
	paint specified background-color/pixmap - makes Qt4-version of LMMS
	almost usable

	* src/widgets/tab_widget.cpp:
	per default hide newly added tabs

	* include/spc_bg_hndl_widget.h:
	added missing code for painting pixmap-backgrounds in Qt4-version

	* plugins/vestige/lvsl_client.cpp:
	use QX11EmbedContainer instead of QX11EmbedWidget in Qt4-version ->
	working VST-support in Qt4-version of LMMS

	* include/sample_buffer.h:
	* src/lib/sample_buffer.cpp:
	- when loading sample, first look for it in user's working-directory,
	  then in LMMS' factory-samples-directory
	- simplified making the path of a sample-file relative

	* include/config_mgr.h:
	* src/core/config_mgr.cpp:
	* src/core/main_window.cpp:
	* src/tracks/instrument_track.cpp:
	replaced methods projectsDir(), presetsDir() and samplesDir() with
	userProjectsDir(), factoryProjectsDir(), userPresetsDir(),
	factoryPresetsDir() etc.

	* include/file_browser.h:
	* src/core/file_browser.cpp:
	try to avoid duplicate "/" in paths - fixes some problems

2006-04-10	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* most files:
	Qt4-fixes:
	- when including headers, specify qt-module too (QtCore, QtGui etc.)
	- draw gradients using QLinearGradient etc.
	- other opmizations (use QHash instead of QMap etc.)

2006-04-10	Danny McRae	<khjklujn/at/users/dot/sourceforge/dot/net>

	* Makefile.am:
	* include/lmms_constants.h:
	* include/basic_filters.h:
	* include/oscillator.h:
	* include/interpolation.h:
	converted calculations using PI to single precision
	
	* src/audio/audio_device.cpp:
	* src/audio/audio_alsa.cpp:
	* src/audio/audio_file_wave.cpp:
	corrected handling of big endian data

	* plugins/vibed/vibed.h:
	* plugins/vibed/vibed.cpp:
	* plugins/vibed/nine_button_selector.h:
	* plugins/vibed/nine_button_selector.cpp:
	- added octave to save and restore settings
	- removed mysterious m_sampleBuffer that was causing seg faults in the
	  deconstructor

	* src/core/main_window.cpp:
	added checks to handle "gimp like windows" for save and restore widget 
	states to prevent seg fault

	* data/projects/cool_songs/Djeezus-BeatRolls.mmp:
	* data/projects/cool_songs/Djeezus-Oscilisous.mmp:
	* data/projects/cool_songs/Marfil-MarfilDrum01.mpp:
	* data/projects/cool_songs/Mart-Concave_flow.mpp:
	* data/projects/cool_songs/Mart-Dirt_Track.mpp:
	* data/projects/cool_songs/MaxFellner-Ease.mpp:
	* data/projects/cool_songs/SharkyX-DeadManDancing.mpp:
	* data/projects/cool_songs/SharkyX-Experiments.mpp:
	* data/projects/cool_songs/Siegel-DreamWave.mpp:
	* data/projects/cool_songs/TobyDox-Confused.mpp:
	* data/projects/cool_songs/TobyDox-Psycho.mpp:
	* data/projects/cool_songs/TobyDox-TheFourthDimension.mpp:
	* data/projects/covers/J.S.Bach-Preludium_and_Fuge_A-Minor.mmp:
	* data/projects/demos/basses-demo.mpp:
	* data/projects/demos/beat-collection.mpp:
	* data/projects/demos/demo1.mpp:
	* data/projects/demos/demo3.mpp:
	* data/projects/demos/demo5.mpp:
	* data/projects/demos/demo6.mpp:
	* data/projects/demos/loop_collection.mpp:
	* data/projects/demos/some_basslines.mpp:
	* data/projects/misc/1st.mpp:
	* data/projects/misc/time_machine.mpp:
	* data/projects/templates/AccousticDrums.mpt:
	* data/projects/templates/ClubMix.mpt:
	* data/presets/AudioFileProcessor/Bass-Mainia.cs.xml:
	* data/presets/AudioFileProcessor/Fat-Reversed-Kick.cs.xml:
	* data/presets/AudioFileProcessor/Kick-4-your-Subwoofer.cs.xml:
	updated audiofileprocessors to point to factory presets files in
	/usr/local/share/lmms

2006-04-09	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/envelope_and_lfo_widget.cpp:
	do not show hint when loading settings in which lfo-shape is set to USER

	* src/core/preset_preview_play_handle.cpp:
	disable project-journalling while loading preset

	* src/core/preset_preview_play_handle.cpp:
	* src/tracks/instrument_track.cpp:
	for generating infinite notes, pass valueRanges<f_cnt_t>::max instead
	of ~0 to note-play-handle-constructor as ~0 = 1 for signed ints

	* include/types.h:
	- changed types of fpab_t and f_cnt_t to be signed - compiler
	  generates more optimized code this way
	- added template-struct "valueRanges", containing members "min" and
	  "max" which hold the minimum and maximum value of the type the
	  template is instantiated with

	* plugins/bit_invader/bit_invader.cpp:
	- fixed buffer-overflow when loading sample-data from base64 and more
	  bytes were decoded than allocated in wave-buffer
	- delete decoded base64-data after copying it into wave-buffer

2006-04-08	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/envelope_and_lfo_widget.cpp:
	- connect valueChanged()-event of lfo-shape-buttongroup with
	  lfoWaveCh()-slot - fixes bug that clicks at the lfo-wave-buttons
	  were not recognized
	- completely revised level()-method which doesn't have the bug
	  anymore, that in release-phase the envelope-level simply went down
	  from sustain-level to zero, now it goes down from the level at which
	  the note was released, new method is also much cleaner and more
	  optimized (and optmizable by compiler)

	* src/core/preset_preview_play_handle.cpp:
	hide preview-instrument-track-window after loading settings

2006-04-07	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vibed/vibrating_string.h:
	corrected type-names for resample()-method-parameters (f_cnt_t instead
	of samplerate_t)

2006-04-06	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/config_mgr.h:
	* src/core/config_mgr.cpp:
	use setup-wizard only for setting working-directory

	* src/core/main_window.cpp:
	when creating file-browsers, pass 2 directories:
		- factory-files
		- user-files
	this concerns projects, presets and samples - obsoletes
	copying/linking files the first time, LMMS is run (new factory files in
	new versions do not cause any trouble anymore)

	* include/file_browser.h:
	* src/core/file_browser.cpp:
	added support for merging several directory-trees into one view

2006-04-05	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>

	* include/sample_track.h:
	* src/tracks/sample_track.cpp:
	- add volume knob to sample tracks

2006-04-05	Danny McRae <khjklujn/at/users/dot/sourceforge/dot/net>

	* plugins/vibed/impulse_editor.cpp:
	- corrected mismatch sin/saw mismatch in initialization

	* plugins/vibed/string_container.h:
	* plugins/vibed/string_container.cpp:
	* plugins/vibed/vibed.h:
	* plugins/vibed/vibed.cpp:
	- added string id tracking to allow adding strings while playing

2006-04-05	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/plugin_browser.h:
	* src/core/plugin_browser.cpp:
	- per default show small items for plugins in plugin-browser and show
	  details on mouse-over (nice animations!! ;-) - avoids problems with
	  hidden plugin-items because of too low screen-resolution and missing
	  scrollbars
	- draw plugin-details-text using QPainter::drawText (not with old own
	  (buggy) algorithm for text-drawing with word-break-support)

2006-04-04	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/flp_import/unrtf/*:
	* plugins/flp_import/flp_import.cpp:
	use integrated unrtf-source into FLP-import-filter for converting
	RTF-comments to plain HTML which is usable with QTextEdit

2006-04-02	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/song_editor.cpp:
	set master-volume-slider correctly in songEditor::setMasterVolume()

	* include/envelope_tab_widget.h:
	* src/core/envelope_tab_widget.cpp:
	* src/core/note_play_handle.cpp:
	- in envelopeTabWidget::releaseFrames():
		if the volume-envelope is used, do not check
		release-frames of other envelope-targets, as it is not
		interesting if they're beyond the end of the volume-envelope
		(silent so or so) - may result in less CPU-usage in some
		situations if the user set a bigger release to an envelope
		other than the volume-env
	- for arpeggio-base-notes only use number of release-frames of
	  volume-envelope for m_releaseFramesToDo (for not creating silent notes
	  in release-phase of arp-base-note)

	* plugins/vibed/impulse_editor.cpp:
	use saw-wave as default shape for strings as it sounds much more like
	a typical guitar-string than a sine-wave

	* plugins/triple_oscillator/triple_oscillator.h:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	re-implement setParameter()-method for setting user-defined wave-shape
	(used by FLP-import-filter)

	* plugins/flp_import/flp_import.cpp:
	- convert 3x Osc params to TripleOscillator-settings and load them
	- load Vibed-Plugin for Plucked!-instrument
	- load arpeggio-settings of channel
	- load filter-settings of channel
	- handle base-note of each channel
	- correct master-volume-calculation

2006-04-01	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/flp_import/flp_import.cpp:
	- hack for converting RTF-comment to HTML using unrtf (if installed)

2006-03-30	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/flp_import/flp_import.h:
	* plugins/flp_import/flp_import.cpp:
	- try to load samples correctly using FL Studio installation
	- recognize steps (not working properly yet)
	- set current pattern of project
	- separate handling of plugin-parameters (will allow support of FL
	  presets later!)
	- added FLP_StepData (225) (not handled as format not known yet)
	- added FLP_EnvLfoParams (218) (not handled as format not known yet)
	- load envelope-settings of instrument-tracks

	* src/core/track_container.cpp:
	disable journalling in destructor of trackContainer

	* include/config_mgr.h:
	* include/setup_dialog.h:
	* src/core/config_mgr.cpp:
	* src/core/setup_dialog.cpp:
	support for setting path to installation directory of FL Studio

2006-03-29	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/song_editor.h:
	* src/core/song_editor.cpp:
	added setMasterVolume() and setMasterPitch()

	* plugins/flp_import/flp_import.h:
	* plugins/flp_import/flp_import.cpp:
	- read text-len correctly
	- do not crash when creating new pattern before actual channels are
	  created
	- stated event 224 to be FLP_PatternData
	- extract information for creating notes out of pattern-data
	- add playlist-items after all is done for resizing them correctly

2006-03-28	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/flp_import/flp_import.h:
	* plugins/flp_import/flp_import.cpp:
	improvements for having a working flp-filter as soon as possible

2006-03-28	Danny McRae	<khjklujn/at/yahoo/dot/com>

	* src/lib/sample_buffer.cpp:
	corrected miscalculation of buffer size in resample

	* nine_button_selector.cpp:
	* nine_button_selector.h:
	* string_container.cpp:
	* string_container.h:
	* vibed.cpp:
	* vibed.h:
	changed QPtrList variables to vlist type to make things more
	Qt4 friendly
	
2006-03-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/flp_import/:
	skeleton for FLP-import-filter and some first code (doesn't work yet)

	* include/midi.h:
	* include/midi_port.h:
	* include/midi_tab_widget.h:
	* src/core/midi_tab_widget.cpp:
	* src/midi/midi_port.cpp:
	support for default-velocity for MIDI-in and/or -out-events - useful
	when recording with constant velocity

2006-03-26	Danny McRae	<khjklujn/at/yahoo/dot/com>

	* plugins/vibed/:
	added "Vibed"-plugin, a powerful combination of PluckedStringSynth and
	BitInvader that's capable of producing a surprisingly wide range of
	sounds

2006-03-26	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/lib/journalling_object.cpp:
	in journallingObject::saveState(): append new dom-element to parent
	before calling saveSettings() as some implementations of it depend on
	knowing something about it's parent (e.g. whether it's the clipboard
	etc.) - fixes several bugs related to clipboard-usage and drag'n'drop

2006-03-25	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/instrument_track.h:
	* src/core/preset_preview_play_handle.cpp:
	disable journalling for all objects involved in preset-preview

	* src/tracks/instrument_track.cpp:
	when saving preset, create new node below content-node of project, as
	the behaviour of saveTrackSpecificSettings() was changed some days
	before

	* src/lib/mmp.cpp:
	bugfixes concerning project type-naming

	* src/core/arp_and_chords_tab_widget.cpp:
	bugfixes concerning loading/saving settings

2006-03-24	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/track.cpp:
	in trackContentWidget::undoStep(): cast journalling object to
	track-content-object and close it instead of deleting it - fixes crash
	after undo of TCO-add

2006-03-23	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/organic/organic.cpp:
	* plugins/organic/randomise_pressed.png:
	added pixmap for visual feedback when pressing randomise-button

	* plugins/midi_import/midi_import.cpp:
	removed attribute FASTCALL from midiImport::tryImport() for not
	crashing LMMS, as tryImport() is not defined as FASTCALL in
	importFilter-API

	* src/core/export_project_dialog.cpp:
	fixed bug causing LMMS to crash when trying to export a project

2006-03-19	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/track.cpp:
	* src/core/track_container.cpp:
	* src/tracks/pattern.cpp:
	in loadSettings(): do not get confused by meta-data (journal etc.)

	* src/lib/journalling_object.cpp:
	- lot of bugfixes
	- save/load data of journal-entry (QVariant) by encoding/decoding it
	  with base64

	* include/base64.h:
	* src/lib/base64.cpp:
	support for encoding and decoding whole QVariant, independent of its 
	type (the result is one string, representing data of any type (int,
	QMap, QVector QString...) - this is just awesome!!)

	* src/tracks/instrument_track.cpp:
	do not crash in several situations if instrument is not loaded for
	some reason (e.g. invalid preset)

	* src/core/track.cpp:
	full support for undo/redo adding/removing a TCO (track-type
	independent)

2006-03-18	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/main_window.cpp:
	avoid layouting-errors when restore widget-state by showing widget
	while moving it

	* include/note.h:
	* src/core/note.cpp:
	undo/redo-support for note-properties

	* most files:
	- derive from journallingObject instead of settings and/or engineObject
	- in saveSettings() do not create own node, instead directly set
	  attributes of passed dom-element

	* include/journalling_object.h:
	* src/lib/journalling_object.cpp:
	- added saveSettings() and loadSettings()-method from former
	  settings-class
	- new wrapper-functions around saveSettings() and loadSettings():
	  saveState()
	  restoreState()
	  -> objects do not have to create a new node on their own,
	     saveState() does it for them using nodeName() as node-name
	  -> journal of object is saved/restored automatically

	* include/settings.h:
	removed

2006-03-16	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/journalling_object.h:
	- renamed from editable_object.h
	- renamed editStep to journalEntry
	- renamed editableObject to journallingObject
	- renamed other method-names

	* include/project_journal.h:
	* src/lib/project_journal.cpp:
	renamed editHistory to projectJournal and changed file-names
	accordingly

	* most files:
	renamed class channelTrack to instrumentTrack and changed other
	method-names to match new naming-convention

	* include/instrument_track.h:
	* src/tracks/instrument_track.cpp:
	renamed channel_track.* to instrument_track.*

2006-03-16	Andreas Brandmaier <andreas/at/brandmaier/dot/de>

	* plugins/organic/organic.cpp:
	* plugins/organic/organic.h:
	* plugins/organic/randomise.png:
	added "randomise preset" button to organic plugin

2006-03-14	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/types.h:
	added type for editable-object-ID

	* include/track.h:
	* src/core/track.cpp:
	* src/tracks/bb_track.cpp:
	* src/tracks/pattern.cpp:
	* src/tracks/sample_track.cpp:
	undo/redo-support for position- and size-changes of TCO

	* include/automatable_object.h:
	added methods for saving step-recording-state on stack and restoring
	it

	* include/automatable_object.h:
	* include/automatable_button.h:
	* include/knob.h:
	* src/widgets/automatable_button.cpp:
	* src/widgets/knob.cpp:
	added second template-parameter to automatableObject which specifies
	the type to be used for internal calculations (neccessary for working
	undo/redo-implementation for bool-objects like buttons)

	* include/led_checkbox.h:
	* src/widgets/led_checkbox.cpp:
	fixed some bugs

2006-03-13	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/main_window.h:
	* src/core/main_window.cpp:
	added edit-menu with undo/redo-items

	* src/core/piano_roll.cpp:
	* src/core/song_editor.cpp:
	* src/core/track_container.cpp:
	* src/tracks/channel_track.cpp:
	* src/widgets/project_notes.cpp:
	use mainWindow::saveWidgetState() and mainWindow::restoreWidgetState()
	for saving widget-state in project-file

	* include/piano_roll.h:
	* src/core/piano_roll.cpp:
	made piano-roll a settings-object

	* include/main_window.h:
	* src/core/main_window.cpp:
	added static methods for saving and restoring state of a widget
	(position, size, visibility etc.) to/from QDomElement

	* include/timeline.h:
	* src/core/song_editor.cpp:
	* src/core/timeline.cpp:
	save loop-point-positions and loop-point-state in project

	* plugins/bit_invader/bit_invader.cpp:
	added visual feedback when pressing wave-shape-buttons

	* include/combobox.h:
	* include/led_checkbox.h:
	* include/pixmap_button.h:
	* src/widgets/combobox.cpp:
	* src/widgets/led_checkbox.cpp:
	* src/widgets/pixmap_button.cpp:
	use automatableButton as new base-class
	
	* include/automatable_button.h:
	* src/widgets/automatable_button.cpp:
	- added class automatableButton to be the base-class for pixmapButton,
	  ledCheckBox etc.
	- added automatableButtonGroup, a more powerful button-group, designed
	  to be used in conjunction with automatableButton-derived buttons

2006-03-12	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/automatable_object.h:
	- added setInitValue() to be used by ALL creators of automatable
	  objects for initializing object-value - otherwise edit-step-history
	  gets filled with steps to set object's value to init-value
	- derive from editableObject and re-implement some methods for
	  transparent edit-history for all automatable objects (knobs etc.)

	* include/editable_object.h:
	* include/edit_history.h:
	* src/lib/edit_history.cpp:
	added support for recording edit-steps, the base for a generic
	undo/redo-system

2006-03-09	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/settings.h:
	* src/core/plugin_browser.cpp:
	* src/core/song_editor.cpp:
	* src/core/track_container.cpp:
	* plugins/midi_import/midi_import.cpp:
	* plugins/midi_import/midi_import.h:
	made MIDI-file-code an import-filter

	* include/import_filter.h:
	* src/core/import_filter.cpp:
	support for import-filter-plugins - simply call

	importFilter::import( FILE_NAME, TRACK_CONTAINER )

	for any file and the rest will be done fully automatically according
	to installed import-filter-plugins

2006-03-08	Zolo <the-zolo/at/gmx/dot/de>

	* data/themes/blue_scene/:
	updated some pixmaps

	* data/themes/blue_scene/plugins/:
	added pixmaps for plugins

2006-03-08	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/timeline.cpp:
	more logical loop-point-handling:
		middle mouse button -> left loop-point
		right mouse button -> right loop-point

	* plugins/audio_file_processor/audio_file_processor.cpp:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/organic/organic.cpp:
	* plugins/plucked_string_synth/plucked_string_synth.cpp:
	* plugins/triple_oscillator/triple_oscillator.cpp:
	* plugins/vestige/vestige.cpp:
	* include/plugin.h:
	* src/core/instrument.cpp:
	* src/core/plugin.cpp:
	* src/lib/embed.cpp:
	added support for plugin-theming

	* src/lib/embed.cpp:
	- first search in artwork-directories before searching for embedded data
	  as most artwork is not linked into binary (except plugins)
	- if pixmap not found, try to load according pixmap from
	  default-artwork-dir

	* include/embed.h:
	* src/core/main.cpp:
	* src/lib/embed.cpp:
	as localizations are no longer embedded into binary, loadTranslation()
	was moved to main.cpp and contains only some basic code for loading
	appropriate translation from file

	* src/core/config_mgr.cpp:
	several fixes concerning artwork-path

2006-03-07	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/arp_and_chords_tab_widget.cpp:
	more senseful range for arpeggio time: 25-2000 ms (instead of 10-1000ms)

	* src/audio/audio_alsa.cpp:
	* src/audio/audio_oss.cpp:
	* src/midi/midi_alsa_raw.cpp:
	* src/midi/midi_alsa_seq.cpp:
	* src/midi/midi_oss.cpp:
	only specify threading-priority when using Qt 3.3.5 or above as older
	versions cause problems when running the whole app with realtime
	priority - fixes several lockups

	* src/widgets/knob.cpp:
	when moving mouse while having shift pressed, increase/decrease by
	single steps

	* src/core/envelope_tab_widget.cpp:
	use 10 KHz as filter-maximum instead of 16 KHz

	* include/track.h:
	* src/core/track.cpp:
	added HACK to avoid crash because of bug in Qt (< 3.3.5) when removing
	track

	* src/core/config_mgr.cpp:
	- use default-theme-path if theme-path from config-file doesn't exist
	- add "/" to theme-path if missing

2006-03-06	Alexey Kouznetsov <alexey/dot/kouznetsov/at/gmail/dot/com>

	* locale/ru.ts:
	updated Russian translation

2006-03-05	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/main_window.cpp:
	always set to configured-state before showing setup-dialog on first
	startup

2006-03-04	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/engine.cpp:
	finalize main-window after having mixer to start its audio-devices -
	fixes crash on first time LMMS is started

2006-02-28	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* data/locale/de.ts:
	updated German translation

	* src/core/timeline.cpp:
	use note::toNearestTact() in timeLine::mouseMoveEvent() instead of own
	calculations

	* src/core/track.cpp:
	per default make TCO-ops (create, move, resize) aligned on tact-
	boundaries, free positioning/resizing can be achieved by pressing
	<Ctrl> after pressing mouse-button

	* include/midi_time.h:
	added note::toNearestTact()-method

	* include/pattern.h:
	* src/core/piano_roll.cpp:
	* src/track/pattern.cpp:
	do not quantize note-position while moving selection of notes

	* src/core/song_editor.cpp:
	some layout-fixes for looking good with "Blue Scene" as well

2006-02-27	Zolo <the-zolo/at/gmx/dot/de>

	* data/themes/blue_scene/:
	added new theme for LMMS

2006-02-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/song_editor.cpp:
	* src/tracks/pattern.cpp:
	do not crash when playing a pattern which is deleted

	* src/core/track_container.cpp:
	pause mixer when cloning tracks for avoiding side-effects, probably
	fixes some crash-bugs

	* include/config_mgr.h:
	* include/setup_dialog.h:
	* src/core/config_mgr.cpp:
	* src/core/setup_dialog.cpp:
	* src/lib/embed.cpp:
	first simple support for theming

	* Makefile.am:
	* configure.in:
	re-organized all data-directories (samples, presets, localizations,
	artwork etc.) and put them into data/ dir to be all installed into
	$prefix/share/lmms

2006-02-25	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/tracks/channel_track.cpp:
	apply a very basic envelope at the beginning and the end of a note for
	avoiding these "typical" clicks which were there before

2006-02-22	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	* Makefile.am:
	* src/lmms_single_source.cpp:
	added support for compiling LMMS from one source file which often
	results in a better/more optimized executable

	* include/note.h:
	* include/piano_roll.h:
	* src/core/note.cpp:
	* src/core/piano_roll.cpp:
	- simple quantization-support
	- fixed lengths for drawing notes can be selected in piano-roll

	* resources/black_key.png:
	* resources/black_key_pressed.png:
	* resources/pr_black_key.png:
	* resources/pr_white_key_big.png:
	* resources/pr_white_key_small.png:
	* resources/white_key.png:
	* resources/white_key_pressed.png:
	replaced by new graphics

	* src/core/engine.cpp:
	delete piano-roll after song-editor and bb-editor as patterns being
	destroyed still depend on it

2006-02-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/tracks/channel_track.cpp:
	do not lock mutex in processOutEvent() as it causes a deadlock when
	having channel-activity-indicators enabled

	* include/midi_mapper.h
	* include/project_notes.h:
	* src/lib/sample_buffer.cpp:
	* src/midi/midi_file.cpp:
	* src/midi/midi_mapper.cpp:
	* src/widgets/project_notes.cpp:
	misc fixes for being able to compile LMMS from one source-file

	* include/automatable_object.h:
	* include/knob.h:
	* include/lcd_spinbox.h:
	* include/led_checkbox.h:
	* src/widgets/knob.cpp:
	* src/widgets/led_checkbox.cpp:
	* src/widgets/lcd_spinbox.cpp:
	introduced template-class automatableObject for central value-
	manipulation, range-checking etc. and made some classes (e.g. knob,
	ledCheckBox, lcdCheckBox) derive from it - preparations for full
	automation-support in LMMS

	* Makefile.am:
	do not strip executable when installing as it makes even basic debugging
	impossible

2006-02-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/combobox.cpp:
	* src/widgets/knob.cpp:
	* src/widgets/led_checkbox.cpp:
	draw shadowed text

	* include/mixer.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/mixer.cpp:
	better xrun-detection and -handling (still not perfect)

	* include/mixer.h:
	* src/tracks/channel_track.cpp:
	fixed critical bug which made LMMS crash if xruns were detected and
	notes were discarded by mixer and therefore deleted twice

2006-02-19	Andreas Brandmaier <andreas/at/brandmaier/dot/de>

	* plugins/organic/organic.cpp:
	* plugins/organic/organic.h:
	* presets/Organic:
	* presets/Bitinvader:
	added waveshape knob
	changed distortion method from clipping to foldback
	renamed and added presets for Organic and BitInvader
	
2006-02-18	Andreas Brandmaier <andreas/at/brandmaier/dot/de>

	* plugins/organic/organic.cpp:
	* plugins/organic/organic.h:
	* presets/Organic:
	added new plugin synthesizer plugin organic and some presets

2006-02-09	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/triple_oscillator/triple_oscillator.cpp:
	per default set volume of each osc to 33%

	* allmost all files:
	use engine-technology

	* include/engine.h:
	* src/core/engine.cpp:
	added engine- and engineObject-class providing new "engine-technology"
	which makes singleton-classes obsoletes and offers a lot of new
	possibilities like GUI-data-separation and having several projects
	open at the same time

2006-02-06	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/mixer.h:
	* include/song_editor.h:
	* src/core/mixer.cpp:
	* src/core/song_editor.cpp:
	simple xrun-detection - do not accept new note-play-handles if xruns
	are detected

2006-02-06	Andreas Brandmaier <andy/at/brandmaier/dot/de>

	* plugins/bitinvader/bitinvader.cpp:
	* plugins/bitinvader/bitinvader.h:
	* plugins/bitinvader/graph.cpp:
	* plugins/bitinvader/graph.h:
	- code cleanup
	- added drag&drop support to wavegraph
	- added new BitInvader presets and improved old ones

2006-02-05	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/basic_filters.h:
	small optimizations: do not divide by 2.0, instead multiply with 0.5

	* src/core/main.cpp:
	set SCHED_FIFO-priority for LMMS if possible

	* plugins/vestige/communication.h:
	* plugins/vestige/lvsl_client.cpp:
	* plugins/vestige/lvsl_server.c:
	- set SCHED_FIFO-priority for VST-server if possible
	- no X-calls needed anymore
	- more complete host-callback-implementation
	- support for geometry-changes of plugin
	- use std::list instead of std::vector for enqueing MIDI-events (faster)
	- support for telling plugin system's language

	* configure.in:
	when checking for VST-SDK-headers, use C++ compiler instead of
	C-compilers as headers fail to compile with it

2006-02-04	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/types.h:
	* most files:
	more strict typing -> types for samplerate, bpm, frame-count,
	channel-count etc.

	* src/core/track.cpp:
	when creating a track, pause mixer for not causing any trouble because
	of incompletely initialized track etc. - fixes several crashes when
	adding track while playing

	* include/mixer.h:
	* src/core/mixer.cpp:
	more "intelligent" mix-mutex-management for allow multiple pause()-
	calls without ending in deadlock or crash because of mutex being
	unlocked to early

2006-02-02	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	made 0.1.4 release

	* Makefile.am:
	added -rdynamic-switch again to make LMMS able to load plugins

	* include/track_container.h:
	fixed bug which caused LMMS not being compilable using GCC 3

2006-02-01	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	made 0.1.3 release

	* lmms.1:
	added manpage (taken from debian-package and updated)

	* include/base64.h:
	* include/rubberband.h:
	* plugins/bit_invader/graph.cpp:
	* src/core/name_label.cpp:
	* src/widgets/combobox.cpp:
	* src/widgets/rubberband.cpp:
	Qt4-compat fixes

	* locale/de.ts:
	updated German translation

	* src/core/main.cpp:
	updated copyright-notice in help-text

2006-01-30	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vestige/fstclient.h:
	* plugins/vestige/fstclient.cpp:
	- renamed to lvsl_client.*
	- when waiting for plugin to have finished process()ing, usleep() some
	  micro-seconds for allowing better scheduling

	* plugins/vestige/lvsl_server.c:
	- merged code from fstserver.cpp, fstserver.h and fstcore.c into one
	  source-file and removed rests of the old FST-API which makes all
	  the VST-code MUCH more cleaner and less redundant (LVSL = LMMS VST
	  Support Layer)
	- VST SDK 2.4 compatibility (no need to fix headers with 2.4!)

2006-01-29	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/bit_invader/bit_invader.cpp:
	- call graph::setSamplePointer() after loading settings
	- memcpy() samples in bitInvader::smoothClicked() instead of copying
	  them in a loop

	* plugins/bit_invader/graph.cpp:
	- update after setting new sample

	* src/tracks/pattern.cpp:
	- disable auto-cleanup during pattern-freeze
	- initialize member m_progress in patternFreezeStatusDialig-dtor - fixes
	  bug which sometimes closed the window before actual freezing was
	  started

	* include/buffer_allocator.h:
	* src/lib/buffer_allocator.cpp:
	- added possibility to disable auto-cleanup at certain times e.g. when
	  freezing a pattern
	- cleanup only every 10th free()-call for decreasing overhead
	- only start searching for free bufs if there're enough remaining

2006-01-24	Andreas Brandmaier <andy/at/brandmaier/dot/de>

	* plugins/bit_invader/bit_invader.cpp:
	* plugins/bit_invader/bit_invader.h:
	* presets/BitInvader:
	- changed sample buffer encoding in presets to base64
	- added BitInvader various presets

2006-01-23	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/sample_buffer.h:
	* src/lib/sample_buffer.cpp:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	use new base64-code

	* include/base64.h:
	* src/lib/base64.cpp:
	added methods for encoding/decoding binary data to/from base64-encoded
	data (wrapper-implementation for Qt4)

2006-01-23	Andreas Brandmaier <andy/at/brandmaier/dot/de>

	* plugins/bit_invader/bit_invader.cpp:
	* plugins/bit_invader/bit_invader.h:
	* plugins/bit_invader/graph.cpp:
	* plugins/bit_invader/graph.h:
	- improved mouse handling.
	- replaced waveform generation methods by those of toby's oscillator
	  class
	- added user-loadable waveform
	- code cleanup

2006-01-22	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/timeline.h:
	* src/core/song_editor.cpp:
	* src/core/timeline.cpp:
	updates are now completely done by timeline/QTimer without being
	called from song-editor out of non-GUI-thread which caused segfaults
	etc. sometimes

	* include/name_label.h:
	* src/core/name_label.cpp:
	* src/tracks/bb_track.cpp:
	* src/tracks/sample_track.cpp:
	added support for user-defined track-icons

	* artwork/track_icons/*png:
	added several icons to be used as track-icons

	* include/track.h:
	* src/core/track.cpp:
	* src/core/track_container.cpp:
	do not hide track for completely repainting it, use special method for
	it

	* include/pattern.h:
	* src/tracks/pattern.cpp:
	only repaint if neccessary, otherwise just paint the pixmap we painted
	before

	* include/bb_editor.h:
	* src/core/bb_editor.cpp:
	added combobox for selecting bb-track inside bb-editor

	* include/combobox.h:
	* src/widgets/combobox.cpp:
	- added clear()-method
	- do not crash when having no items
	- scale pixmap to fit into combobox
	- place menu below combobox if possible

2006-01-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/track.h:
	* src/core/track.cpp:
	* src/tracks/pattern.cpp:
	* src/tracks/sample_track.cpp:
	added support for used-defined track-height by pressing <Shift> and
	move mouse (with pressed button)

	* include/song_editor.h:
	* include/track.h:
	* include/track_container.h:
	* src/core/song_editor.cpp:
	* src/core/track.cpp:
	* src/core/track_container.cpp:
	take advantage of new rubberband:
	- selecting track-content-objects of any type either via rubberband or
	  by clicking while pressing <Ctrl>
	- move selected track-content-objects
	- delete selected track-content-objects

	* include/rubberband.h:
	* src/widgets/rubberband.cpp:
	added rubberband which either acts as wrapper for Qt4's QRubberBand or
	as a widget imitating a rubberband

	* include/track.h:
	* src/core/track.cpp:
	draw vertical lines for each bar

	* include/bb_editor.h:
	* include/song_editor.h:
	* include/track_container.h:
	* src/core/bb_editor.cpp:
	* src/core/song_editor.cpp:
	* src/core/track.cpp:
	* src/core/track_container.cpp:
	fixed all that stuff with annoying scrollbars which partly hid important
	widgets

2006-01-21	Andreas Brandmaier <andy/at/brandmaier/dot/de>

	* plugins/bit_invader/bit_invader.cpp:
	* plugins/bit_invader/bit_invader.h:
	added smooth button

2006-01-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/tracks/pattern.cpp:
	also update after clearing all notes

	* include/piano_roll.h:
	* include/song_editor.h:
	* src/core/piano_roll.cpp:
	* src/core/song_editor.cpp:
	use new combobox for zooming-comboboxes

	* include/export_project_dialog.h:
	* src/core/export_project_dialog.cpp:
	- reject() dialog when pressing cancel
	- use new combobox

	* include/arp_and_chords_tab_widget.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	use new combobox with according arpeggio-mode-icons

	* include/envelope_tab_widget.h:
	* src/core/envelope_tab_widget.cpp:
	* resources/filter_2lp.png:
	* resources/filter_ap.png:
	* resources/filter_bp.png:
	* resources/filter_hp.png:
	* resources/filter_lp.png:
	use new combobox with according filter-icons

	* include/combobox.h:
	* src/widgets/combobox.cpp:
	added own cool-looking combobox with menu-extension which basically
	has the same API as QComboBox

2006-01-19	Andreas M. Brandmaier <andy/at/brandmaier/dot/de>

	* plugins/bit_invader/bit_invader.h:
	* plugins/bit_invader/bit_invader.cpp:
	* plugins/bit_invader/graph.h:
	* plugins/bit_invader/graph.cpp:
	added "BitInvader"-plugin, an usereditable wavetable-synthesizer

2006-01-16	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/lib/mmp.cpp:
	do not add "mmp"-extensions if there's already "mpt" (multimedia-
	project-template) as extension

	* include/arp_and_chords_tab_widget.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	- added new sync-mode to arpeggiator
	- arpeggiator-modes are now selectable from combobox

2006-01-15	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/file_browser.cpp:
	use 7.5 instead of 8 as font-size

	* src/widgets/led_checkbox.cpp:
	use 7.5 instead of 7 as font-size

	* include/gui_templates.h:
	- added more precise pointSizeF()-method
	- more precise point-size-calculation for pointSize()-method which
	  makes all fonts inside LMMS a bit bigger and everything more
	  readable

	* include/setup_dialog.h:
	* src/core/note_play_handle.cpp:
	* src/core/setup_dialog.cpp:
	* src/tracks/channel_track.cpp:
	added switches for disabling several UI-effects for a better
	performance even on older hardware

	* include/preset_preview_play_handle.h:
	* src/core/preset_preview_play_handle.cpp:
	global-data-mutex is not a pointer anymore, instead it's a normal
	QMutex - fixes crashes with sort-arpeggio if no preset was previewed
	before

2006-01-14	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/kmultitabbar.cpp:
	made KMultiTabBar working with Qt4

	* src/audio/audio_jack.cpp:
	return if connection to JACK-server failed with old JACK-API
	(jack_client_new(...)) - fixes crash when using old JACK-API with
	LMMS and JACK-server is not running

	* include/preset_preview_play_handle.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/preset_preview_play_handle.cpp:
	as preset-note-play-handle is not registered at mixer, it cannot be
	returned in notePlayHandle::nphsOfChannelTrack() and therefore
	previewing presets with sort-mode arpeggios doesn't work - now the
	arpeggiator also checks preview-note for being the only note there

	* src/core/arp_and_chords_tab_widget.cpp:
	fixed some bugs in arpeggiator

	* src/core/piano_roll.cpp:
	lock qapp-thread in recordNote() - hopefully fixes some
	xlib-async-errors

	* src/tracks/channel_track.cpp:
	- do not process note-on-out-events if according key is already pressed
	- when invalidating note-play-handles, also reset m_notes-array for not
	  crashing when applying another preset while key is pressed and
	  released afterwards

2006-01-10	Alexey Kouznetsov <alexey/dot/kouznetsov/at/gmail/dot/com>

	* locale/ru.ts:
	updated Russian translation

2006-01-10	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/piano_roll.cpp:
	update pattern after changing volume of step-note

2006-01-09	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/setup_dialog.h:
	* src/core/config_mgr.cpp:
	* src/core/setup_dialog.cpp:
	made appearence of two dialogs switchable (question whether to re-run
	wizard after up-/downgrade and message after accepting setup-dialog)

2006-01-08	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/piano_roll.h:
	* src/core/piano_roll.cpp:
	* src/tracks/pattern.cpp:
	simple support for editing (existing) steps in piano-roll, e.g. for
	changing key of a step

	* plugins/vestige/vestige.cpp:
	per default switch to users VST-plugin-directory when opening plugin

	* include/config_mgr.h:
	* include/setup_dialog.h:
	* src/core/config_mgr.cpp:
	* src/core/setup_dialog.cpp:
	added possibility to setup working-directory and location of VST-plugins

	* src/widgets/tempo_sync_knob.cpp:
	removed a lot of obsolete #include's

	* include/piano_widget.h:
	* src/core/note_play_handle.cpp:
	* src/core/piano_widget.cpp:
	display played keys as if they were pressed

	* include/arp_and_chords_tab_widget.h:
	* include/note_play_handle.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/note_play_handle.cpp:
	added sort-mode for more powerful arpeggios

	* src/core/arp_and_chords_tab_widget.cpp:
	fixed bug which made the arpeggiator skipping notes sometimes at
	certain arpeggio-times

	* src/core/lmms_main_win.cpp:
	commented out code for creating effect-board-window-button

	* src/core/channel_track.cpp:
	removed inclusion of paths.h which isn't part of LMMS for quite a long
	while... - there were no problems because Linux has paths.h too

2006-01-06	dieEasy <dieeasy/at/cheapnet/dot/it>

	* locale/it.ts:
	added Italian translation

2006-01-02	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vestige/vestige.cpp:
	set vestige-logo as window-icon of plugin-GUI-window

	* src/core/instrument.cpp:
	set logo of plugin as window-icon of channel-track

	* include/dummy_instrument.h:
	* include/dummy_plugin.h:
	* include/instrument.h:
	* include/plugin.h:
	* src/core/instrument.cpp:
	* src/core/plugin.cpp:
	small changes in plugin-API: plugin now always has to pass pointer to
	plugin-descriptor to plugin-dtor to make the latter one able to
	provide several information

	* src/core/plugin.cpp:
	search for plugin-libs in configManager::pluginDir() which is
	$prefix/lib/lmms - hopefully solves problems with finding plugins on
	some systems

	* include/channel_track.h:
	* include/midi_tab_widget.h:
	* src/core/midi_tab_widget.cpp:
	* src/tracks/channel_track.cpp:
	when using Raw-MIDI-client, make items "MIDI input/output" checkable
	and enable/disable MIDI-input/output accordingly if user
	checked/unchecked it and update check-state if user changed MIDI-mode
	in midi-tab-widget in channel-track

	* src/core/midi_tab_widget.cpp:
	set MIDI-output-channel to 1 per default

	* src/lib/sample_buffer.cpp:
	added flac-files to filter of file-selection-dialog

	* include/note_play_handle.h:
	* src/core/note_play_handle.cpp:
	when invalidating note-play-handle, do some stuff which actually would
	be done by dtor if m_channelTrack wouldn't be NULL

2006-01-01	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/track.cpp:
	added tooltip to track-op-widget telling the user something about
	drag'n'drop-functionality...

	* include/lmms_main_win.h:
	* src/core/lmms_main_win.cpp:
	* src/lib/string_pair_drag.cpp:
	if main-window looses focus or a drag is completed, clear
	key-modifiers of LMMS-main-window, because we might have lost
	key-release-events in these cases and therefore our modifier-state-map
	could be incorrect - fixes several bugs concerning drag'n'drop

	* README:
	* src/core/about_dialog.cpp:
	extended copyright from 2005 to 2006 - Happy New Year!

2005-12-31	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/channel_track.h:
	* src/tracks/channel_track.cpp:
	removed surround-area in track-settings-widget and added button with
	MIDI-connection-menu instead

2005-12-30	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/track.h:
	* include/track_container.h:
	* src/core/track.cpp:
	* src/core/track_container.cpp:
	revised all the things around track-operations:
	- tracks are now directly movable via the grip at the beginning of a
	  track - replaces "move up/down"-buttons and is much more usable
	- actions (clone/delete track) are now part of a popup-menu

	* src/core/lmms_main_win.cpp:
	- corrected file-description at the beginning
	- add space at left side before adding tool-buttons

	* src/core/midi_tab_widget.cpp:
	use smaller font for connection-selection-menu

2005-12-29	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/fade_button.cpp:
	do not update() directly in nextState(), use QTimer instead for avoiding
	xlib-threading-errors

2005-12-28	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vestige/communication.h:
	* plugins/vestige/fstclient.cpp:
	* plugins/vestige/fstclient.h:
	* plugins/vestige/fstserver.cpp:
	* plugins/vestige/vestige.cpp:
	* plugins/vestige/vestige.h:
	- support for telling plugin current BPM, also catches BPM-changes
	- handle plugins without GUI correctly
	
	* include/tool_button.h:
	* src/widgets/tool_button.cpp:
	catch toggle-signals to emit clicked()-signal which is neccessary if a
	button is checked using setChecked()-method and not by the user -
	fixes some bugs with piano-roll

	* include/piano_roll.h:
	* src/core/piano_roll.cpp:
	- show text-float after user copied notes
	- do not play note when just moving selection
	- when update()ing paint everything in a pixmap which is painted in
	  paintEvent() - saves all the repaints everytime mouse-cursor is moved
	  and makes painting tool-cursor possible again

	* src/tracks/channel_track.cpp:
	corrected calculation in channelTrack::masterKey()

2005-12-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/piano_roll.h:
	* src/core/piano_roll.cpp:
	always reset cursor when receiving leave-event

	* include/channel_track.h:
	* src/tracks/channel_track.cpp:
	use new fade-button as MIDI-event-indicator as well as simple
	play-default-tone-button

	* include/fade_button.h:
	* src/widgets/fade_button.cpp:
	added fade-button which can be activated and fades back to
	default-color afterwards

	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/core/envelope_tab_widget.cpp:
	* src/core/midi_tab_widget.cpp:
	* src/core/note.cpp:
	* src/core/song_editor.cpp:
	* src/core/track.cpp:
	* src/tracks/bb_track.cpp:
	* src/tracks/channel_track.cpp:
	* src/tracks/sample_track.cpp:
	do not use QString::number() for saving scalar value with
	setAttribute() as it is obsolete

	* src/audio/audio_alsa.cpp:
	* src/audio/audio_oss.cpp:
	start audio-thread with QThread::HightestPriority for having less xruns

	* src/tracks/pattern.cpp:
	save m_steps-property, otherwise restoring it in loadSettings() makes
	no sense... - fixes bug which caused LMMS to always reset number of
	steps to 16 when loading files, even if the user created patterns
	containing more than 16 steps

	* include/audio_dummy.h:
	- fixed missing implementation of thread running the whole time and
	  calling audioDevice::processNextBuffer() -> fixes bugs & lockups when
	  using audio-dummy-driver
	- thread now always waits the amount of time that is left for the
	  current buffer, so if rendering of current buffer went faster than
	  in realtime, the song doesn't play at a higher speed

2005-12-26	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vestige/vestige.cpp:
	determine real key of note using channelTrack::masterKey

	* include/micro_timer.h:
	moved micro-timer-class from mixer.cpp in separate header for being
	available to all modules of LMMS

	* src/core/mixer.cpp:
	added metronome-sounds when recording in piano-roll

	* src/lib/sample_buffer.cpp:
	- added resample()-method for resampling whole sample-buffer
	- after libsndfile try to load sample with libvorbis instead of
	  SDL_sound as the latter one seems to be buggy on few systems and
	  leads to unexpected crashes
	- if sample-decoder doesn't resample sample automatically, do it
	  afterwards using resample()

	* src/core/track_container.cpp:
	accept drops of type samplefile and sampledata too and create new
	channel-track with AudioFileProcessor

	* plugins/audio_file_processor/audio_file_processor.cpp:
	save/load sample-data which was dragged on plugin in settings

	* src/core/track.cpp:
	display correct length and now additionally start- and end-position of
	track-content-object

	* include/bb_track.h:
	* src/tracks/bb_track.cpp:
	do not align position and length of bb-track-objects on tact-boundaries
	as it offers an interesting new feature (incomplete/start beats etc.!)

2005-12-25	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/visualization_widget.cpp:
	enable visualization-widget per default

	* plugins/vestige/vestige.cpp:
	- do not crash when loading settings with empty plugin-attribute (e.g.
	  older projects/presets)
	- set channel-name according to plugin-name
	- added note-off-button for being able to note off hanging notes
	  (which sometimes occurs in combination with arpeggios)

2005-12-24	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vestige/vestige.cpp:
	use new parameter-saving/loading-feature when saving/loading settings

	* plugins/vestige/communication.h:
	* plugins/vestige/fstclient.cpp:
	* plugins/vestige/fstclient.h:
	* plugins/vestige/fstserver.cpp:
	* plugins/vestige/fstserver.h:
	* plugins/vestige/fstcore.c:
	- added support for saving/loading parameters which almost completes
	  LMMS's rudimentary VST-support
	- support for querying parameter-properties
	- some changes in initialization of plugin

	* src/tracks/pattern.cpp:
	pass unused wheel-events to trackContentObect for being able to scroll
	within song-editor

2005-12-23	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vestige/fstcore.c:
	a lot of clean-ups and other bug-fixes making VeSTige almost usable
	and stable

	* plugins/vestige/fstclient.h:
	* plugins/vestige/fstclient.cpp:
	save PID of children when fork()ing XFST-server which is used for
	sending SIGTERM when destroying everything

	* plugins/vestige/communication.h:
	* plugins/vestige/fstclient.cpp:
	* plugins/vestige/fstserver.cpp:
	* plugins/vestige/fstcore.c:
	do not show editor until client created x11-embed-widget - solves
	problems with not-embedded plugins under KDE

	* plugins/vestige/fstserver.cpp:
	rewrote MIDI-enqueueing-code as the old one was very buggy and
	unreliable

	* plugins/vestige/vestige.h:
	* plugins/vestige/vestige.cpp:
	added mutex for plugin which solves some problems

	* include/mixer.h:
	* src/core/mixer.cpp:
	per default clear all play-handles but instrument-play-handles in
	mixer::clear() as instrument-playhandles normally exist during the
	whole life-time of a certain plugin and must not be deleted when just
	stopping song etc.

	* include/play_handle.h:
	added type-information, so every derived class has to pass a
	type-constant to playHandle-constructor

2005-12-22	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	made 0.1.2 release

2005-12-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/lib/sample_buffer.cpp:
	- first try to use libsndfile instead of SDL_sound for decoding sample
	  as SDL_sound sometimes doesn't handle samples (raw- and FLAC-files)
	  the correct way and returns unusable data while libsndfile seems to
	  work quite fine with these samples
	- when using libsamplerate, use linear-interpolation per default
	  instead of zero-order-hold-resampling which results in MUCH higher 
	  quality when resampling as it produces much less artifacts

	* src/core/file_browser.cpp:
	classify files with extension "flac" as samples

	* src/widgets/tab_widget.cpp:
	hide all other tabs when changing active tab - neccessary for working
	with Qt 4.1

2005-12-20	Danny McRae	<khjklujn/at/yahoo/dot/com>

	* resources/step_btn_on_100.png:
	* resources/step_btn_yellow.png:
	* include/pattern.h:
	* src/tracks/pattern.cpp:
	make it possible to change volume of steps in bb-editor using mouse
	wheel and which changes color of step-button accordingly

2005-12-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/lib/sample_buffer.cpp:
	first implementation of FLAC-encoding/decoding for compressing buffers
	before encoding them to base64 which results in smaller XML-files -
	currently disabled as it's still buggy and unusable

	* src/lib/buffer_allocator.cpp:
	in cleanup-method use list instead of vector for pool of buffers to be
	removed - fixes crash with Qt4

2005-12-19	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/knob.cpp:
	made knob ready for drag'n'drop of values

	* src/tracks/sample_track.cpp:
	load and save/load sample-data which doesn't come from sample in/from
	XML-node (base64-encoded)

2005-12-18	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/tracks/pattern.cpp:
	use Sint32 instead of Sint16 for determining central key, otherwise we
	might get overflows when having a lot of notes

	* src/tracks/sample_track.cpp:
	draw zero-line if sample is shorter than TCO

	* src/core/track.cpp:
	display text-float with current position/size when moving/resizing TCO

	* src/core/song_editor.cpp:
	do correct positioning for text-floats for master-volume/-pitch

	* include/envelope_and_lfo_widget.h:
	* src/core/envelope_and_lfo_widget.cpp:
	added support for user-defined wave-shapes - the user just has to drag
	an audio-sample into envelope/lfo-widget and that's all ;-)

	* src/tracks/pattern.cpp:
	* src/tracks/sample_track.cpp:
	make sound-buffer of frozen pattern draggable to sample in
	sample-track

	* include/sample_buffer.h:
	* src/lib/sample_buffer.cpp:
	support for base64-encoding of sample-data into a QString

	* src/core/track_container.cpp:
	import MIDI-file to itself when getting according drag'n'drop-request

	* plugins/audio_file_processor/audio_file_processor.h:
	* plugins/audio_file_processor/audio_file_processor.cpp:
	receive drop-events (set dragged sample etc.)

	* plugins/vestige/fstclient.h:
	* plugins/vestige/fstclient.cpp:
	renamed removeVSTPlugin::write/readValue to write/readValueS for
	compiling even with buggy GCC 3.x

	* include/file_browser.h:
	* src/core/file_browser.cpp:
	made up all that drag'n'drop-stuff, you're now able to drag samples
	and presets directly to according channel, sample etc.

2005-12-17	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/bb_editor.h:
	* include/pattern.h:
	* src/core/bb_editor.cpp:
	* src/tracks/pattern.cpp:
	always update according bb-tracks when changing pattern/it's length

	* include/track.h:
	* src/core/track.cpp:
	* src/core/track_container.cpp:
	drag'n'drop everywhere - now you can drag every track-content-object
	(e.g. a pattern) to every other track-content-object of the same type
	or to a free place in an according track or just in another
	track-container

	* include/mmp.h:
	* src/lib/mmp.cpp:
	allow additionally to load data from given string instead of file

	* include/timeline.h:
	* src/core/timeline.cpp:
	- disable magnetic loop-points when pressing control
	- set start-point directly to given position when pressing middle
	  mouse-button, do the same for end-point of shift is pressed at the
	  same time

	* include/piano_roll.h:
	* include/song_editor.h:
	* src/core/piano_roll.cpp:
	* src/core/song_editor.cpp:
	use modifier-key-states from lmmsMainWin instead of monitoring them on
	it's own

	* include/lmms_main_win.h:
	* src/core/lmms_main_win.cpp:
	capture key-events and save states of shift, control- and alt-key
	everytime it changes - other widgets can use this for querying whether
	one of these modifier-keys is pressed

2005-12-16	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	added better LADSPA-check and fixed some other small things

	* src/core/mixer.cpp:
	query attribute "mididev" instead of "midiclient" for determining
	selected MIDI-device - fixes bug with apparently non-selectable
	MIDI-device/-client

	* src/core/plugin.cpp:
	* src/lib/ladspa_manager.cpp:
	load plugins using QLibrary instead of platform-dependent dl-functions

2005-12-15	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/audio_alsa.h:
	do not include alsa-headers if they do not exist...

2005-12-14	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/file_browser.cpp:
	display text-float while loading sample for preview

	* plugins/audio_file_processor/audio_file_processor.cpp:
	fixed bug which caused LMMS to crash when playing notes on
	audio-file-processor, which was created out of preset containing link
	to file which doesn't exist

	* src/core/song_editor.cpp:
	use text-floats instead of status-bar

	* src/core/lmms_main_win.cpp:
	removed status-bar

	* plugins/vestige/vestige.cpp:
	show text-float while loading plugin

	* include/text_float.h:
	* src/widgets/text_float.cpp:
	heavy improvements on text-float-widget which is now also able to
	display messages with title and pixmap and offers two static methods
	for displaying a certain message

	* src/tracks/channel_track.cpp:
	set project modified after accepting drops of presets/plugins

	* include/instrument_play_handle.h:
	check for m_instrument being NULL because play-handle might be
	invalidated and thus crash when referencing NULL-ptr

	* most files:
	continued improving Qt4-support

2005-12-13	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* most files:
	made LMMS compatible with Qt4 again after heavy development under Qt3
	led to incompatibility with Qt4

2005-12-11	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/lmms_main_win.cpp:
	* src/lib/mmp.cpp:
	- default file-extension is now "mmp" (MultiMedia Project) instead of
	  "xml" for being able to associate mmp-files with LMMS in
	  file-managers etc. - futhermore LMMS-file-browser is much faster now
	  because it does not have to examine each file
	- file-extension for song-templates is now "mpt" (MultiMedia Project
	  Template)

	* include/cpuload_widget.h:
	* src/widgets/cpuload_widget.cpp:
	added cool CPU-load-widget displaying LMMS's current CPU-usage

	* src/core/note_play_handle.cpp:
	always check validity of sub-notes as they might not be known to mixer
	and therefore not invalidated in certain situations which made LMMS
	crashing (e.g. when deleting a channel-track which was current playing
	some arpeggio-notes)

	* include/pattern.h:
	* src/tracks/pattern.cpp:
	start separate thread for freezing pattern as this doesn't block the
	GUI-thread and user is now able to cancel pattern-freezing (which was
	not possible after last rewrite a few days ago)

	* include/timeline.h:
	* src/core/timeline.cpp:
	use timer for periodically screen-updates - locking QApplication-mutex
	isn't neccessary anymore which makes LMMS not to hang when creating
	new song while playing etc.

	* src/core/piano_roll.cpp:
	when settings time-line-position, call setTact( 0 ) and
	setTact64th( 0 )-members instead of pos() = 0 (the latter one leads
	to crashes)

	* plugins/audio_file_processor/audio_file_processor.cpp:
	update start- and end-frames of sample-buffer when loading settings

2005-12-10	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/lmms_main_win.h:
	* include/song_editor.h:
	* src/core/lmms_main_win.cpp:
	* src/core/song_editor.cpp:
	* resources/toolbar_bg.png:
	* resources/main_toolbar_bg.png:
	heavy improvements on toolbars

	* include/nstate_button.h:
	* src/widgets/nstate_button.cpp:
	base-class is now toolButton instead of QPushButton

	* include/tool_button.h:
	* src/widgets/tool_button.cpp:
	- moved implemenation of toolButton into cpp-file
	- added highlighting during mouse-over
	- do not connect clicked()-signal if receiver and/or slot are NULL

2005-12-09	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/channel_track.h:
	* src/core/midi_tab_widget.cpp:
	* src/core/preset_preview_play_handle.cpp:
	added support for saving and restoring MIDI-connections of a channel
	in ordinary channel-preset-data

	* include/channel_track.h:
	* include/midi_tab_widget.h:
	* src/core/midi_tab_widget.cpp:
	* src/tracks/channel_track.cpp:
	dropped support for switchable MIDI-event-routing as it is done per
	default and actually makes no sense...

	* src/midi/midi_port.cpp:
	do not process MIDI-out-event if channel = -1

2005-12-08	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/midi_tab_widget.cpp:
	- always un-check items in port-menus when disabling receiving or
	  sending MIDI-events
	- small GUI improvements

	* resources/midi_in.png:
	* resources/midi_out.png:
	added icons for MIDI-input- and MIDI-output-port-selection

2005-12-07	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/midi_alsa_seq.h:
	* include/midi_client.h:
	* include/midi_tab_widget.h:
	* src/core/midi_tab_widget.cpp:
	* src/midi/midi_alsa_seq.cpp:
	* src/midi/midi_client.cpp:
	added support for easy MIDI-port-subscription inside LMMS by just
	selecting according source-/destination-port from a menu in
	MIDI-setup-tab in each channel-window

2005-12-06	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/note_play_handle.cpp:
	* src/core/piano_roll.cpp:
	* src/core/piano_widget.cpp:
	* src/tracks/channel_track.cpp:
	moved output-MIDI-event-generation-code from channel-track to
	note-play-handles for covering arpeggio/chords and having exactly
	timed events - makes it now possible to control other MIDI-based
	synths etc. from patterns (which was not possible before because
	of a small bug) - will drop MIDI-out-plugin very soon as it isn't
	needed anymore

2005-12-05	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/piano_roll.h:
	* src/core/piano_roll.cpp:
	- when moving mouse draw a bar at current key
	- re-enabled mouse-tracking for cursor-changes when mouse is over tail
	  of note etc.

	* resources/zoom.png:
	* src/core/song_editor.cpp:
	* src/core/piano_roll.cpp:
	added small zoom-icon to zoom-combobox

2005-12-04	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/midi_alsa_raw.h:
	* include/midi_client.h:
	* include/midi_dummy.h:
	* include/midi_oss.h:
	* src/midi/midi_alsa_raw.cpp:
	* src/midi/midi_client.cpp:
	* src/midi/midi_oss.cpp:
	renamed class midiRawClient to midiClientRaw
	
	* include/pattern.h:
	* src/core/song_editor.cpp:
	* src/tracks/pattern.cpp:
	do not hang in endless loop when rendering pattern with enabled
	looping-points

	* src/core/time_line.cpp:
	align looping-points on bars

	* include/bb_editor.h:
	* include/piano_roll.h:
	* include/song_editor.h:
	* include/timeline.h:
	* include/tool_button.h:
	* src/core/bb_editor.cpp:
	* src/core/piano_roll.cpp:
	* src/core/song_editor.cpp:
	* src/core/timeline.cpp:
	redesigned toolbars of song-editor, bb-editor and piano-roll - now
	they're looking really cool and especially time-line-features are much
	more usable

	* include/song_editor.cpp:
	* src/core/lmms_main_win.cpp:
	* src/core/song_editor.cpp:
	- added main-toolbar at bottom of screen and moved several widgets from
	  song-editor-toolbar into it
	- added high-quality-button for switching to 88200/96000 Hz

	* src/widgets/tab_widget.cpp:
	reversed scroll-wheel-direction for changing tab

2005-12-03	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/main.cpp:
	- better handling of command-line options
	- added help switch
	- fixed bugs concerning rendering from command-line

	* include/audio_alsa.h:
	* include/audio_device.h:
	* include/audio_dummy.h:
	* include/audio_file_device.h:
	* include/audio_file_ogg.h:
	* include/audio_file_wave.h
	* include/audio_jack.h:
	* include/audio_oss.h:
	* include/audio_sdl.h:
	* include/export.h:
	* include/export_project_dialog.h:
	* include/mixer.h:
	* include/pattern.h
	* include/song_editor.h:
	* src/audio/audio_alsa.cpp:
	* src/audio/audio_device.cpp:
	* src/audio/audio_file_device.cpp:
	* src/audio/audio_file_ogg.cpp:
	* src/audio/audio_file_wave.cpp:
	* src/audio/audio_jack.cpp:
	* src/audio/audio_oss.cpp:
	* src/audio/audio_port.cpp:
	* src/audio/audio_sdl.cpp:
	* src/core/export_project_dialog.cpp:
	* src/core/lmms_main_win.cpp:
	* src/core/main.cpp:
	* src/core/mixer.cpp:
	* src/core/song_editor.cpp:
	* src/track/pattern.cpp:
	changed architecture of mixer-system from push- to pull-architecture
	which makes almost all things (song-export, pattern-freezing etc.) much
	easier and also results in a better performance (especially when using
	JACK) - additionally LMMS doesn't take 100% CPU anymore

2005-12-02	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/config_mgr.cpp:
	do not try to re-run wizard in case of version mismatches

	* configure.in:
	* plugins/Makefile.am:
	* presets/Makefile.am:
	dropped ladspa_sine_1063-plugin as it is only for experimental
	purposes

2005-11-29	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vestige/vestige.h:
	* plugins/vestige/vestige.cpp:
	changes for working with new VST-framework

	* plugins/vestige/fstclient.h:
	* plugins/vestige/fstserver.h:
	* plugins/vestige/fstclient.cpp:
	* plugins/vestige/fstserver.cpp:
	* plugins/vestige/fstcore.c:
	* plugins/vestige/communication.h:
	added new VST-framework (client-server-architecture) based on XFST

	* include/qxembed.h
	* src/widgets/qxembed.cpp:
	added QXEmbed-widget which is neccessary for embedding VST-plugin

2005-11-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/mixer.cpp:
	added usleep()-call for realizing usable threading and solve problems
	with 100%-CPU-usage

2005-11-08	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/channel_track.h:
	* include/sample_play_handle.h:
	* include/sample_track.h:
	* src/core/sample_play_handle.cpp:
	* src/tracks/channel_track.cpp:
	* src/tracks/sample_track.cpp:
	made things work with audio-ports

	* include/mixer.h:
	* src/core/mixer.cpp:
	completely revised internal mixing-engine make it working with
	the new audio-ports, which results in a much cleaner, faster and more
	powerful mixing-engine

	* include/audio_port.h:
	* src/audio/audio_port.cpp:
	added so called audio-ports which are important for transporting sound
	from it's origin through the mixer and the effect-board (the latter
	one isn't existing yet but coming quite soon) - another important
	point is the ability of having output-ports for each channel/sample-
	track with JACK

	* src/tracks/channel_track.cpp:
	translate default-channel-name "Default"

	* src/audio/audio_jack.cpp:
	- sync JACK's buffer-size with LMMS's one
	- start JACK-transport if not already done

	* include/mixer.h:
	* src/audio/audio_jack.cpp:
	* src/core/mixer.cpp:
	* src/lib/sample_buffer.cpp:
	* src/widgets/visualization_widget.cpp:
	use memset() for clearing buffers - obsoletes usage of silence-buffers
	in mixer

2005-11-07	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/midi/midi_alsa_seq.cpp:
	use relative instead of absolute scheduling for events which makes
	MIDI-out working

2005-10-31	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/midi_alsa_seq.h:
	* src/midi/midi_alsa_seq.cpp:
	several bug-fixes

2005-10-30	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/midi_alsa_seq.h:
	* src/midi/midi_alsa_seq.cpp:
	added first version of ALSA-sequencer - currently doesn't handle all
	common events, but note-on/off and key-pressure work so far

	* include/midi_client.h:
	- added method applyPortMode() for making MIDI-subsystem able to get
	  known of port-mode changes which is neccessary if they have REAL
	  ports like ALSA-seq. has
	- renamed validatePortName() to applyPortName() and made it non-pure
	  virtual

	* src/tracks/channel_track.cpp:
	initialize m_midiEventRoutingEnabled with FALSE per default in ctor

	* src/core/mixer.cpp:
	delete midi-dev on exit

	* src/midi/midi_midi_alsa_raw.cpp:
	when reading/saving device-name via config-mgr, use "midialsaraw"
	instead of "midialsa" as context-name

2005-10-28	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/project_notes.cpp:
	set initial text to bright gray, since black text on a very dark back-
	ground isn't very readable...

	* include/lmms_main_win.h:
	* include/setup_dialog.h:
	* src/core/bb_editor.cpp:
	* src/core/lmms_main_win.cpp:
	* src/core/setup_dialog.cpp:
	* src/core/song_editor.cpp:
	* src/widgets/project_notes.cpp:
	added support for GIMP-like usability, i.e. no MDI

	* src/core/song_editor.cpp:
	* src/core/bb_editor.cpp:
	reorder some code in constructor for not crashing if window is
	shown while constructor is still running

2005-10-23	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/led_checkbox.cpp:
	also emit toggled()-signal if state actually wasn't changed

	* include/lcd_spinbox.h:
	* src/widgets/lcd_spinbox.cpp:
	- display special strings if value is a certain number
	- support for disabled-state (gray/no input)

	* include/midi_tab_widget.h:
	* src/core/midi_tab_widget.cpp:
	* src/tracks/channel_track.cpp:
	added new tab "MIDI" for being able to setup MIDI-related stuff for
	each channel

	* include/channel_track.h:
	* include/midi*:
	* include/piano_widget.h:
	* include/setup_dialog.h:
	* src/core/mixer.cpp:
	* src/core/piano_roll.cpp:
	* src/core/piano_widget.cpp:
	* src/core/setup_dialog.cpp:
	* src/core/song_editor.cpp:
	* src/midi/midi*:
	* src/tracks/channel_track.cpp:
	coded a completely new, powerful and clean MIDI-system which e.g. makes
	it possible to mask MIDI-events for each channel and to receive and send
	(timed!) MIDI-events on a separate MIDI-port for each channel, which
	only makes sense if using non-raw (sequenced) MIDI-client - currently
	none existing, but ALSA-sequencer-support is in progress

	* include/midi_device.h:
	* src/midi/midi_device.cpp:
	removed

2005-10-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/tempo_sync_knob.cpp:
	do not implement the same code as knob does in mouseMoveEvent() - call
	knob::mouseMoveEvent() instead

	* include/knob.h:
	* src/widgets/knob.cpp:
	cleaned up a lot and fixed some bugs

2005-10-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/song_editor.h:
	decreased MAX_BPM to 999 since BPM-LCD-spinbox is intended to have
	only three digits while 1000 has four of them... ;-)

	* include/track_container.h:
	* src/core/track_container.cpp:
	trackContainer::scrollArea-class has now m_trackContainer-member
	for storing parent which makes cast of parent-widget to track-container
	(which sometimes failed...) obsolete

	* configure.in:
	check for libfst and present VST-SDK header-files

2005-10-19	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* plugins/vestige/vestige.h:
	* plugins/vestige/vestige.cpp:
	added possibility of opening plugins instead of hardcoding them ;-)

	* include/track.h:
	renamed createTrack() and cloneTrack() to create() and clone()

	* include/track_container.h:
	* src/core/track_container.cpp:
	receive drop-events -> add channel with instrument/preset

	* src/audio/audio_jack.cpp:
	removed usleep() out of loop in audioJACK::writeBufferToDev() since it
	caused LMMS to hang e.g when removing a track

	* src/core/plugin_browser.cpp:
	show hand-cursor if over a plugin-description-widget

	* src/widgets/pixmap_button.cpp:
	if pixmap-button is set non-checkable, draw active-graphic if pressed
	down and inactive one in normal state

	* include/lmms_main_win.h:
	* src/core/lmms_main_win.cpp:
	own workspace for making wheelEvent(...) is now obsolete -> removed

	* include/track_container.h:
	* src/core/song_editor.cpp:
	* src/core/track_container.cpp:
	added own scroll-area for capturing special wheel-events where a
	modifier-key (shift, control etc.) is pressed

	* src/core/song_editor.cpp:
	removed add-channel-button as it is obsolete after adding plugin-browser

	* resources/:
	improved icons such as project_*.png and sample-track-related icons

2005-10-18	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/channel_track.h:
	* src/tracks/channel_track.cpp:
	- moved channelButton-implementation to channel_track.src
	- added support for receiving drop-events, which makes channel-track
	  to load either the given instrument or the given preset

	* src/core/plugin_browser.cpp:
	* include/plugin_browser.h:
	added cool plugin-browser, which displays all available instrument-
	plugins which are draggable to a channel-window/button

	* include/string_pair_drag.h:
	* src/lib/string_pair_drag.cpp:
	added drag'n'drop-implementation for dragging string-pairs (key/value)
	which provides a standard-interface, although drag'n'drop has changed a
	lot in Qt 4

	* src/widgets/crystal_button.cpp:
	made mouseMoveEvent()-method much more effective

	* Makefile.am:
	* buildtools/Makefile.am:
	build buildtools in subdir instead of top-build-directory - solves
	dependendy problems with bin2res

	* src/core/file_browser.cpp:
	do not depend on typeinfo of audioFileProcessor anymore by using
	new setParameter()-method

	* include/plugin.h:
	added setParameter() and getParameter()-methods for making LMMS able to
	set parameters of a specific plugin without knowing anything about it

2005-10-17	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* buildtools/bin2res.cpp:
	* include/embed.h:
	* src/lib/embed.cpp:
	- declaration of embedded-data-descriptor is now located in embed.h and
	  part of namespace embed
	- added support for local embedded-resources which is important for
	  plugins containing their own images etc., so data and access-methods
	  are stored into namespace PLUGIN_NAME

	* include/plugin.h:
	* src/core/plugin.cpp:
	added logo-field to descriptor-structure and simplified method for
	getting descriptors of all plugins

	* include/basic_filters.h:
	removed Moog-2-filter as it is only very CPU-intensive without any
	significant difference to sound of normal Moog-filter

2005-10-16	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/lib/ladspa_manager.cpp:
	skip not existing/unreadable directories when searching for plugins

	* include/vestige.h:
	* src/plugins/vestige.cpp:
	make use of new instrument-play-handle

	* include/channel_track.h:
	* src/core/browser.cpp:
	* src/core/song_editor.cpp:
	* src/midi/midi_file.cpp:
	* src/tracks/channel_track.cpp:
	renamed loadPlugin() to loadInstrument()

	* include/config_mgr.h:
	* src/core/config_mgr.cpp:
	added pluginDir()-method

	* include/instrument_play_handle.h:
	added another play-handle for playing instruments which do not
	produce sound for each note

	* src/plugins/:
	renamed directory soundgenerators to plugins and modified all plugins
	for working with revised plugin-system

	* include/instrument.h:
	* include/plugin.h:
	* src/core/instrument.cpp:
	* src/core/plugin.cpp:
	splitted code from instrument up into class plugin and class instrument
	and revised plugin-system

	* include/instrument.h:
	* src/core/instrument.cpp:
	renamed files soundgenerator.* to instrument.* as well as class-name

2005-10-15	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/vestige.h:
	* src/soundgenerators/vestige.cpp:
	new plugin "VeSTige" for handling VST-plugins - VERY experimental,
	but at least, we get some sound out of these strange dll-files ;-)

2005-10-13	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/audio/audio_jack.cpp:
	do not fill up buffers if JACK-transport is not rolling but at the same
	time always handle frame-syncing-var in JACK-callback, even if JACK-
	transport is not rolling - fixes several bugs like lockups when
	removing tracks while JACK-server is pausing...

	* src/widgets/knob.cpp:
	fixed bug which caused hidden mouse-cursor forever when pressing right
	mouse-button while left one is pressed

	* src/lib/ladspa_manager.cpp:
	use /usr/lib/ladspa as default-directory if env-var LADSPA_PATH is not
	set

	* src/soundgenerators/*.cpp:
	removed obsolete defaultSettings()-method from each soundgenerator

2005-10-13	Danny McRae	<khjklujn/at/yahoo/dot/com>

	* include/ladspa_manager.h
	* include/ladspa_sine_1063.h
	* src/lib/ladspa_manager.cpp:
	* src/soundgenerators/ladspa_sine_1063.cpp:
	added LADSPA-support and a simple soundgenerator for testing-purposes

2005-10-12	Danny McRae	<khjklujn/at/yahoo/dot/com>

	* Makefile.am:
	* include/led_checkbox.h:
	* src/core/envelope_and_lfo_widget.cpp:
	* src/widgets/led_checkbox.cpp:
	inherit ledCheckBox from QWidget instead of QCheckBox since it sometimes
	caused graphic-errors when running on KDE with Baghira-style...

2005-10-05	Danny McRae	<khjklujn/at/yahoo/dot/com>

	* resources/note_double_whole.png:
	* resources/note_eighth.png:
	* resources/note_half.png:
	* resources/note_none.png:
	* resources/note_quarter.png:
	* resources/note_sixteenth.png:
	* resources/note_thirtysecond.png:
	* resources/note_whole.png:
	* resources/xclock.png:
	added icons for context-menu of tempoSyncKnob

	* src/widgets/lcd_spinbox.cpp:
	emit valueChanged()-signal in wheelEvent()-method

	* include/song_editor.h:
	* src/core/song_editor.cpp:
	- added getBPM()-method
	- emit signal if BPM is changed

	* include/arp_and_chords_tab_widget.h:
	* include/envelope_and_lfo_widget.h:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/envelope_and_lfo_widget.cpp:
	use new tempoSyncKnob-widget instead of traditional time-knob

	* include/tempo_sync_knob.h:
	* src/widgets/tempo_sync_knob.cpp:
	added tempo-sync-knob which automatically converts fixed note-length's
	to a fixed time in ms everytime BPM is changed

2005-10-03	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/basic_filters.h:
	- added another moog-filter which sounds a bit better but needs MUCH
	  more CPU-time...
	- cleaned up different filter-code-branches

2005-10-02	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/oscillator.h:
	cast to int instead of floor()ing value in oscillator::phase() which
	makes the whole thing faster again...

2005-09-29	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/tab_widget.cpp:
	fixed bugs when adding widget with already existing index

	* Makefile.am:
	* include/midi_out.h:
	* include/plucked_string_synth.h:
	* src/soundgenerators/midi_out.cpp:
	* src/soundgenerators/plucked_string_synth.cpp:
	classes midiOut and pluckedStringSynth do not have slots or signals,
	so Q_OBJECT-macros were removed and MOC-code isn't compiled anymore

	* include/sgs:
	* src/core/plugin_management.cpp:
	removed because not needed anymore with new plugin-system

	* configure.in:
	* Makefile.am:
	* include/audio_file_processor.h:
	* include/channel_track.h:
	* include/midi_out.h:
	* include/plucked_string_synth.h:
	* include/sound_generator.h:
	* include/triple_oscillator.h:
	* src/core/browser.cpp:
	* src/core/sound_generator.cpp:
	* src/core/song_editor.cpp:
	* src/midi/midi_file.cpp:
	* src/soundgenerators/*:
	* src/tracks/channel_track.cpp:
	made all sound-generator-plugins shared libraries loaded at runtime,
	which gives much more flexibility because you can load songs/presets
	from people having other plugins just by adding according lib*.so file
	to /usr/lib - no need to recompile!

	* inlude/empty_sg_plugin.h:
	added empty sound-generator plugin

2005-09-28	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/song_editor.h:
	* src/core/song_editor.cpp:
	added combo-box for selectinf zooming-factor

	* include/piano_roll.h:
	* src/core/piano_roll.cpp:
	added combo-box for selecting zooming-factor

	* include/led_checkbox.h:
	* src/widgets/led_checkbox.cpp:
	added methods for querying and setting state

	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/envelope_tab_widget.cpp:
	better alignment of widgets inside each of this tabs

	* src/tracks/channel_track.cpp:
	finished improving GUI of channel-track-window by using tabWidget
	instead of tabBar for plugin-, env/lfo- and arp-widgets

	* include/envelope_and_lfo_widget.h:
	* src/core/envelope_and_lfo_widget.cpp:
	use ledCheckBox'es instead of pixmapButton's with QLabel's

	* include/tab_widget.h:
	* src/widgets/tab_widget.cpp:
	made tabWidget more powerful:
	- use indexed tabs
	- different painting if no caption was defined
	- switch tabs if wheel-events occurs

2005-09-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/tracks/channel_track.cpp:
	began improving GUI of channel-track-window

	* projects/cool_songs/TobyDox-TheFourthDimension.xml:
	added another song...

	* include/qt3support.h:
	Qt 3.1-support

	* include/audio_alsa.h:
	define macro ALSA_PCM_NEW_HW_PARAMS_API for working with older ALSA-
	versions which offer old and new HW-param-API - we're using the new one

2005-09-26	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* many files:
	make LMMS compile with Qt 3.0 and GCC 2.95

2005-09-25	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/audio/audio_jack.cpp:
	- decreased wait-time from 0.5 ms to 0.2 ms in writeBufferToDev(...)
	- clear part of buffers that could not be filled for avoiding bad
	  noise in case there's no data from sound-render-thread, because it is
	  locked or got no cpu-time for some reason

	* src/core/timeline.cpp:
	do not call update() in updatePosition, call paintEvent() directly
	instead - hopefully fixes the "unexspected Xlib async replies"
	which occured in some seldom cases because there were paint-events
	generated - something that must not be done in other threads...

	* resources/source/songeditor.svg:
	* resources/songeditor.png:
	created a new song-editor-icon

	* src/core/song_editor.cpp:
	do not save play-pos from previous play-mode when beginning to play
	in different play-mode - fixes bug in timeline behaviour "back to start"

2005-09-24	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	* include/audio_oss.h:
	* include/midi_oss.h:
	* src/audio/audio_oss.cpp:
	* src/midi/midi_oss.cpp:
	made LMMS compiling and working without OSS - configure detects
	whether soundcard.h is available

	* include/gui_templates.h:
	made template pointSize(...) platform-independent by not using x11-
	specific qt-classes/-functions

	* include/templates.h:
	moved pointSize-function with all the headers it depends on into
	gui_templates.h

	* src/core/mixer.cpp:
	- do not initialize member m_surroundSilence if surround is disabled
	- free silence-buffers in dtor

	* src/tracks/bb_track.cpp:
	when drawing gradient skip first and last line as a rect is painted
	over it afterwards

	* src/core/track_container.cpp:
	set modified-state for song when removing track

2005-09-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	made 0.1.1 release

2005-09-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/about_dialog.h:
	* src/core/about_dialog.cpp:
	no need for passing parent when creating about-dialog

	* src/core/song_editor.cpp:
	- different usage of question-box in songEditor::mayChangeProject()
	  because of bugs with several qt-versions...
	- when exporting song, do use baseName( TRUE ) instead of baseName()
	  for determining base-name of rendered file

	* src/core/lmms_main_win.cpp:
	- display filename before app-name in window-title
	- only use basename of filename in window-title
	- added message referring to LMMS-homepage when clicking on
	  Help/Help

	* src/core/export_song_dialog.cpp:
	use lmmsMainWin::resetWindowTitle() for resetting window-title
	after export is done

	* src/widgets/knob.cpp:
	do not add tooltips to knobs - clicking on knob has quite the same
	effect so tooltips are just annoying

	* src/core/browser.cpp:
	when matching file-name, always convert them to lower case for also
	handling files like foo.WAV

	* src/core/config_mgr.cpp:
	added setValue(...)-call for saving working-directory after setting
	up everything - fixes bug with empty browsers after fresh personal
	installation of LMMS

2005-09-19	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	made 0.1.0 release

2005-09-18	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/tracks/bb_track.cpp:
	revised paintEvent()-method -> bb-TCO's are now painted with a gradient!

	* src/core/song_editor.cpp:
	- call bbEditor::stop before playing to make sure play-button in
	  bb-editor is properly reset
	- call realignTracks() with parameter TRUE in wheelEvent(...)
	- some hacks for making pause-button work...

	* src/core/track_container.cpp:
	added parameter _complete_update to trackContainer::realignTracks()
	to be able to hide and show all tracks which is neccessary e.g.
	after having changed pixels-per-tact-property -> zooming in song-editor
	works now well

	* src/core/setup_dialog.cpp:
	added message-box telling the user to restart LMMS

	* include/midi_alsa_raw.h:
	* include/midi_device.h:
	* include/midi_oss.h:
	* include/midi_dummy.h:
	* include/mixer.h:
	* include/setup_dialog.h:
	* src/core/mixer.cpp:
	* src/core/setup_dialog.cpp:
	* src/midi/midi_alsa_raw.cpp:
	* src/midi/midi_device.cpp:
	* src/midi/midi_oss.cpp:
	made it possible to select and setup MIDI-device

	* include/knob.h:
	* src/widgets/knob.cpp:
	- many cleanups, coding style improvements etc.
	- added new behaviour for controlling knob -> move cursor up/down for
	  changing value
	- replaced usage of status-bar by text-float-widget

	* include/text_float.h:
	* src/widgets/text_float.cpp:
	took text-float from Rosegarden

	* include/config_mgr.h:
	* src/core/config_mgr.cpp:
	- fixed bug in configManager::setValue(): new value-pair was always
	  pushed back, even if it already existed, so result of value() didn't
	  change until restart
	- moved widget-creation-code from ctor to new method createWidgets()
	  which fixes problems with unlocalized strings in wizard because
	  embed::loadTranslation() calls configManager::inst()->localeDir()
	  for determining path to localization files - this call created all
	  wizard-widgets before actual localization was loaded...

2005-09-17	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/setup_dialog.cpp:
	added switches for disabling tooltips and turning on classical knob-
	behaviour

	* include/led_checkbox.h:
	* src/widget/led_checkbox.cpp:
	added LED-check-box

2005-09-16	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/mixer.cpp:
	clear output-buffers in ctor before using them -> avoids awful noises
	at startup

	* src/core/mixer.cpp:
	* src/lib/sample_buffer.cpp:
	* src/tracks/channel_track.cpp:
	* src/tracks/sample_track.cpp:
	use given frame-parameter in methods playing sample-buffers instead
	of mixer::framesPerAudioBuffer() -> no clicks at tact-border because
	of odd sample-frame-count

	* src/core/lmms_main_win.cpp:
	call presetPreviewPlayHandle::cleanUp() in dtor -> fixes segfault which
	which occured at exit if you previewed a channel during session

	* include/preset_preview_play_handle.h:
	* src/core/preset_preview_play_handle.cpp:
	added cleanUp()-method which deletes blind track-container containing
	preset-preview-channel

	* src/soundgenerators/triple_oscillator.cpp:
	- unified much code by defining setChecked when compiling with Qt 3
	- also set file-name of user-defined-wave as tool-tip when loading
	  settings

	* most files in src/:
	use new tooltip-system - removes qt3/qt4-compat-code

	* include/tooltip.h:
	* src/widget/tooltip.cpp:
	added tooltip-namespace with method "add(...)" for allowing transparent
	usage of tooltips, so there's no difference to code using tooltips
	whether it is compiled with Qt 3 or Qt 4

2005-09-14	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/mixer.h:
	* include/note_play_handle.h:
	* include/play_handle.h:
	* src/core/mixer.cpp:
	* src/core/note_play_handle.cpp:
	* src/tracks/channel_track.cpp:
	added play-handle-invalidating-feature making it possible to
	invalidate notes of which the objects they depend on do not exist
	anymore or things like that. for example channel-track-dtor
	invalidates all note-play-handles linked with according channel
	-> no segfault when deleting channel-track

	* src/core/track_container.cpp:
	pause mixer before removing track -> no segfault

	* src/lib/mmp.cpp:
	initialize m_type in mmp::multimediaProject( projectTypes )

	* src/lib/buffer_allocator.cpp:
	added mutex for better protection against parallel accesses from
	several threads - fixes some segfaults

	* src/core/lmms_main_win.cpp:
	improved ~lmmsMainWin() which now first instructs mixer to quit it's
	thread for avoiding spurious usages of objects to be destroyed
	afterwards -> no segfault at the end

	* src/core/export_song_dialog.cpp:
	* src/tracks/pattern.cpp:
	cleaned up exporting/freezing mechanisms by using mixer's new methods
	play() and pause()

	* include/mixer.h:
	* src/core/mixer.cpp:
	cleaned up mixer-thread syncing stuff by reorganizing mutexes and
	replacing m_waitMutex by m_safetySyncMutex as well as according methods
	lockWaitMutex() and unlockWaitMutex() by play() and pause()

	* src/core/setup_dialog.cpp:
	tell config-manager to save it's config-file when setupDialog is
	destroyed

2005-09-13	Stephane Thomas <sthomas/at/nerim.net>

	* locale/fr.ts:
	added French translation

2005-09-13	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/lmms_main_win.cpp:
	- show setup-dialog if LMMS is started first time or mixer uses dummy-
	  audio-driver
	- added setup-dialog-entry to settings-menu

	* src/lib/mmp.cpp:
	if saving preset, check whether file-name contains suffix ".cs.xml"
	and add it if neccessary

	* include/midi_alsa_raw.h:
	* src/midi/midi_alsa_raw.cpp:
	* src/midi/midi_device.cpp:
	- changed everything (including file-names) from midiAlsa to midiALSARaw
	- added terminate()-call in dtor for terminating thread properly

	* include/tab_bar.h:
	* src/widget/tab_bar.cpp:
	- added flag for addTab(...)-method indicating whether to use given
	  text as caption or just as tooltip
	- reduced #ifdef QT4-macros by defining some names when compiling
	  with Qt3

	* include/setup_dialog.h:
	* src/core/setup_dialog.cpp:
	added help-button in audio-setup-tab and improved geometry-stuff

	* include/audio_alsa.h:
	* include/audio_oss.h:
	* src/audio/audio_alsa.cpp:
	* src/audio/audio_oss.cpp:
	added probeDevice()-method which eases determining device-name in
	either actual audio-class as well as in it's setup-widget

2005-09-11	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/mixer.cpp:
	use new audio-settings-technology for opening audio-device

	* include/setup_dialog.h:
	* src/core/setup_dialog.cpp:
	added setup-dialog for general-, audio- and MIDI-settings

	* include/audio_alsa.h:
	* include/audio_device.h:
	* include/audio_dummy.h:
	* include/audio_jack.h:
	* include/audio_oss.h:
	* include/audio_sdl.h:
	* src/audio/audio_alsa.cpp:
	* src/audio/audio_device.cpp:
	* src/audio/audio_jack.cpp:
	* src/audio/audio_oss.cpp:
	* src/audio/audio_sdl.cpp:
	added setup-widget-technology making it possible to have audio-device-
	specific setup-widgets which can be used in setup-dialog etc.

	* include/lcd_spinbox.h:
	* src/widgets/lcd_spinbox.cpp:
	added stepping-functionality

	* include/tab_widget.h:
	* src/widgets/tab_widget.cpp:
	pass caption to constructor instead of using fixed text

	* include/tab_bar.h:
	* src/widgets/tab_bar.cpp:
	- added direction-parameter in constructor
	- added exclusive-property
	- addTab(...) returns now pointer to tab-button which gives caller
	  possibility to modify the button

	* src/core/mixer.cpp:
	save frames-per-audio-buffer-value in ctor if not set yet instead
	of saving it in dtor

	* src/lib/embed.cpp:
	do not return null-pixmap if pixmap not found

2005-09-10	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* resources/setup_audio.png:
	* resources/setup_general.png:
	* resources/setup_midi.png:
	added icons to be used in setup-dialog

	* src/audio/audio_alsa.cpp:
	* src/audio/audio_sample_recorder.cpp:
	use auto-cleaning pointer in createSampleBuffer(...) (fixes memory-leak
	in ALSA-driver)

	* include/buffer_allocator.h:
	added simple class for auto-cleaning pointers

	* src/core/mixer.cpp:
	- added delete-calls in mixer::tryAudioDevices()
	- init s_instanceOfMe-member in dtor, otherwise LMMS hangs up

	* locale/:
	* artwork/:
	moved translations and some artwork-stuff into locale- and artwork-
	directory which is going to be installed into
	LMMS-data-dir (/usr/share/lmms etc.) and shrinks executable

	* src/lib/embed.cpp:
	added possibility to have resources in external files instead of being
	linked into executable

	* configure.in:
	- use macro AS_HELP_STRING for formatting help-strings
	- removed --with-latency option as it is not needed anymore

2005-09-06	Alireza	<dr/dot/alireza/at/gmail/dot/com>

	* resources/ir.ts:
	added Persian translation

2005-09-04	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/audio/audio_oss.cpp:
	- read device-name from config-file before evaluating environment-
	  variables etc.
	- fixed bugs with device-probing (after dev-file was searched, there	
	  was no open(...)-call again so it always failed if the first open(...)
	  didn't work

	* src/audio/audio_alsa.cpp:
	read device-name from config-file before evaluating environment-
	variables or using "default"

	* src/core/lmms_main_win.cpp:
	call bufferAllocator::cleanUp( 0 ) for destroying all allocated buffers

	* include/buffer_allocator.h:
	* src/lib/buffer_allocator.cpp:
	- added clean-up-technique which removes least used buffers if
	  buffer-size exceeds limits (which depends on mixer's buffer-size)
	- added field to bufDesc indicating usage of this buf - used by
	  alloc-method for determining most used, free and matching buffer

	* include/lcd_spinbox.h:
	* src/widgets/lcd_spinbox.cpp:
	made lcdSpinBox controlable by scroll-wheel

	* src/widgets/knob.cpp:
	do not center knob if width of label is greater than actual knob

	* src/audio/audio_sample_recorder.cpp:
	use bufferAllocator instead of new[]/delete[]

	* src/core/mixer.cpp:
	- read value for frames-per-audio-buffer out of config-file and save
	  it at exit
	- free buffer at exit

	* include/config_mgr.h:
	* src/core/config_mgr.cpp:
	added value() and setValue()-method which offers all components of LMMS
	an easy way for loading/saving their settings at startup/exit

2005-09-02	Mario Izquierdo <mariodebian/at/gmail/dot/com>
2005-09-02	Johnny Saenz <saenzac/at/hotmail/dot/com>

	* resources/es.ts:
	added Spanish translation

2005-09-02	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* most files:
	finished changes began on 2005-08-29

	* include/buffer_allocator.h:
	* src/lib/buffer_allocator.cpp:
	- only return aligned pointers
	- small changes in API

	* resources/de.ts:
	completed German translation

2005-08-29	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* most files:
	begin to use new bufferAllocator instead of old buffer-types and
	use mixer-method for determining current number of frames per
	audio-buffer

	* include/mixer.h:
	types audioBuffer and surroundAudioBuffer don't exist anymore as well
	as the constant FRAMES_PER_AUDIO_BUFFER - use
	mixer::inst()->framesPerAudioBuffer() instead

2005-08-28	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/song_editor.h:
	* src/core/song_editor.cpp:
	replaced QSpinBox by lcdSpinBox for BPM-spinbox

	* include/tab_bar.h:
	* src/widgets/tab_bar.cpp:
	removed function-parameter _font_size for tabBar::addTab(...)

	* most files:
	- replaced QFont::setPointSize()-calls by according pointSize()-calls
	  which makes LMMS usable at any DPI-resolution
	- changes for Qt4-compatibility

	* include/misc.h:
	* include/template.h:
	moved misc.h to template.h and added template-function pointSize
	which sets a DPI-independent size for a given font

	* src/tracks/channel_track.cpp:
	use labeling-feature of LCD-spinbox and removed old QLabel and
	layouting-stuff

	* include/lcd_spinbox.h:
	* src/widgets/lcd_spinbox.cpp:
	- fixed bug: when moving mouse up, value was not updated properly
	- added labeling-feature
	- added valueChanged()-signal

	* src/core/arp_and_chords_tab_widget.cpp:
	set m_arpDirection correct when loading older settings

2005-08-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/channel_track.h:
	* src/tracks/channel_track.cpp:
	use new LCD-spinbox for effect-spinbox

	* include/lcd_spinbox.h:
	* src/widgets/lcd_spinbox.cpp:
	added LCD-spinbox, an improved QLCDNumber with ability of user-input

	* src/core/main.cpp:
	changed highlight- and text-color to dark white instead of glaring green
	for many people didn't like it...

	* include/audio_jack.h:
	* src/audio/audio_jack.cpp:
	- read and observe buf-size from JACK, so that writeBufferToDev() can
	  wait accordingly to it - now JACK-transport also works if buf-sizes
	  of LMMS and JACK are different
	- also free buffers in destructor and not just throw them out of list

2005-08-26	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/audio_jack.h:
	* src/audio/audio_jack.cpp:
	- also work with older versions which do not have jack_client_open()
	- fixed bugs
	- use bufferAllocator instead of new[] and delete[] in time-critical
	  functions

	* include/buffer_allocator.h:
	* src/lib/buffer_allocator.cpp:
	added bufferAllocator which is an optimized internal memory-manager

2005-08-24	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/audio_jack.h:
	* src/audio/audio_jack.cpp:
	beginning of support for JACK-transport

	* src/audio/audio_sdl.cpp:
	fixed memory leak - m_outputBuffer was not deleted in destructor

	* src/core/arp_and_chords_tab_widget.cpp:
	completed usage of switchable groupboxes by saving groupbox-states
	and evaluating them in processNote()

2005-08-22	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* resources/afp_artwork.png:
	small improvements for better usability and internationalization

	* src/soundgenerators/audio_file_processor.cpp:
	- cleanups and small improvements concerning painting
	- added missing tooltips
	- moved open-sample-button right to filename-display-bar

	* src/widgets/pixmap_button.cpp:
	changed default-pixmaps to led_yellow.png and led_off.png

	* resources/pattern_bg.png:
	resized from 2x43 to 2x25

	* src/core/name_label.cpp:
	decreased default-font

	* include/track.h:
	decreased size of track-settings-widget from 256 to 224

	* include/channel_track.h:
	* src/tracks/channel_track.cpp:
	- use labeling-feature of knob for labeling volume-knob
	- use smaller surroundArea in track-settings-widget and smaller
	  channel-button with smaller font

	* src/core/surround_area.cpp:
	made surroundArea working with different widget-sizes than default size

	* resources/background_artwork.png:
	made bg-image more pale

	* include/bb_editor.h:
	* src/core/bb_editor.cpp:
	changed painting-behaviour and made button-bg-gfx's obsolete by using
	specialBgHandlingWidget

	* include/groupbox.h:
	* src/widgets/groupbox.cpp:
	improved groupbox by adding animation and more

	* src/core/envelope_and_lfo_widget.cpp:
	* src/core/envelope_tab_widget.cpp:
	- use knobs new labeling-feature
	- use new tab-widget for target-widgets

	* include/tab_widget.h:
	* src/widgets/tab_widget.cpp:
	added own tab-widget which looks much cooler than Qt's one

	* src/core/arp_and_chords_tab_widget.cpp:
	- using now new groupbox-widget and reorganized knob/switch-positions
	- revised arpeggio-direction-buttons
	- use knobs new labeling-feature
	- removed obsolete headers

	* include/knob.h:
	* src/widgets/knob.cpp:
	added labeling-feature for automatically labeling knobs with given
	text


2005-08-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/widgets/side_bar_widget.cpp:
	* src/tracks/channel_track.cpp:
	* src/core/config_mgr.cpp:
	* src/core/piano_roll.cpp:
	* src/core/arp_and_chords_tab_widget.cpp:
	* src/core/main.cpp:
	* src/core/browser.cpp:
	replaced painting-device-dependent method setPixelSize by setPointSize

	* src/core/envelope_and_lfo_widget.cpp:
	now using new group-box which looks much cooler and is more usable

	* include/groupbox.h:
	* src/widgets/groupbox.cpp:
	added own groupbox-widget with state-LED

	* src/widgets/pixmap_button.cpp:
	delete m_bgPixmap in destructor

	* include/spc_bg_hndl_widget.h:
	- made member m_backgroundPixmap to normal QPixmap instead of pointer to
	  it which also fixes a memory leak as dtor didn't delete the pixmap
	- also use erase-pixmap of widget if available

	* include/oscillator.h:
	- made shape-functions using phase()-function for determining phase of
	  sample
	- made oscillator::phase() using modff instead of floorf-math which
	  makes the whole thing up to 20% faster

	* src/core/about_dialog.cpp:
	added URL of project-page of LMMS

	* src/core/song_editor.cpp:
	create new project if file given in cmd-line is not read-/usable

	* include/export_project_dialog.h:
	* include/song_editor.h:
	* src/core/main.cpp:
	* src/core/song_editor.cpp:
	added --render command-line-switch to render file and quit as soon as
	job is done - very good for benchmarks

	* src/core/main.cpp:
	added --version command-line-switch

2005-08-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/lmms_main_win.cpp:
	- extended filter for sample-browser
	- added home- and root-browser for being able to load songs, presets,
	  samples etc. from somewhere else than within lmms-working-directory

2005-07-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/lmms_main_win.cpp:
	* src/core/track_container.cpp:
	* src/core/track.cpp:
	by completing destructors and fixing some other small bugs there's
	finally no seg-fault when quitting app! (the bug annoying for months...)

	* include/track_container.h:
	all public-slots were made to normal public and FASTCALLed functions
	since they aren't connected to a signal anywhere and it just blows up
	qt-moc-code

	* include/sample_track.h:
	made method sampleTCO::changeLength(...) FASTCALLed since it's virtual
	and method in base-class is also FASTCALLed - eliminates crash when
	resizing sample

	* include/track.h:
	* src/core/track.cpp:
	removed unsused method setTrackWidgetHeight( int )

2005-07-26	Pedro Lopez-Cabanillas <pedro/dot/lopez/dot/cabanillas/at/gmail/dot/com>

	* src/core/browser.cpp:
	* src/core/config_mgr.cpp:
	* src/core/lmms_main_win.cpp:
	* src/core/main.cpp:
	* src/core/song_editor.cpp:
	* src/lib/mmp.cpp:
	* src/tracks/pattern.cpp:
	* src/widgets/project_notes.cpp:
	small changes for compatibility with Qt 3.1

	* src/midi/midi_alsa.cpp:
	* src/midi/midi_oss.cpp:
	added MIDIDEV-environment variable for being able to choose a MIDI
	device different from the default one

2005-07-24	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/midi_mapper.h:
	* src/midi/midi_mapper.cpp:
	added MIDI-mapper to be used in combination with midiDevice's and/or
	MIDI-Out-Plugin which can read MIDI-maps added before

	* midi-maps/*map:
	added MIDI-maps from KMid

	* include/midi_dummy.h:
	* src/midi/midi_device.cpp:
	added dummy MIDI-driver for not crashing if no MIDI-device is available

	* src/core/piano_roll.cpp:
	- go to start of pattern when pressing home-key
	- added support for zooming

	* src/core/song_editor.cpp:
	- fixed bug with loop-points by setting current-frame-var to zero to
	  force reset of it
	- added auto-scrolling ability
	- fixed bug which caused horizontal scrollbar to have an undefined
	  max-value after starting up LMMS
	- go to start of pattern when pressing home-key

2005-07-23	Alexey Kouznetsov <alexey/dot/kouznetsov/at/gmail/dot/com>

	* resources/ru.ts:
	added Russian translation

2005-07-23	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/piano_roll.cpp:
	scroll back when stopping and play-position changes to invisible area

	* include/time_line.h:
	* src/core/song_editor.cpp:
	* src/core/time_line.cpp:
	added control-buttons to time-line making it possible to control
	things like auto-scrolling, looping and play-position after stop

	* src/midi/midi_device.cpp:
	limit volume between 0 and 127 when sending out note-on-event

2005-07-21	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/nstate_button.h:
	* src/widgets/nstate_button.cpp:
	added widget nStateButton which is a button able to have n different
	states with according pixmaps and tooltips

	* resources/back_to_zero.png:
	* resources/keep_stop_position.png:
	* resources/back_to_start.png:
	* resources/loop_points_off.png:
	* resources/loop_points_on.png:
	* resources/autoscroll_off.png:
	* resources/autoscroll_on.png:
	added pixmaps for buttons to be used in time-line as soon as possible

	* lmms-0.1.0rc1.tar.bz2:
	release of Release Candidate 1 of LMMS 0.1.0

2005-07-20	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/midi/midi_file.cpp:
	- proper handling of note-on-events which velocity 0 -> treat like
	  note-off-events makes it now possible to import a much larger amount
	  of MIDI-files
	- added progress-dialog when importing MIDI-file

	* src/core/song_editor.cpp:
	horizontal scrollbar is now placed some pixels above lower edge so that
	it doesn't take action when resizing song-editor-window at lower edge

	* src/core/track_container.cpp:
	added progress-dialog for loading project and according
	qApp->processEvents()-call -> LMMS now isn't blocked anymore while
	loading project

	* include/knob.h:
	* src/widgets/knob.cpp:
	fixed bugs caused by changes made before for scroll-wheel-support

2005-07-19	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/knob.h:
	* src/widgets/knob.cpp:
	added better scroll-wheel support which increases/decreases knob-value
	by 20th of range (e.g 0.05 if knob is ranged between 0 and 1)

2005-07-17	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* projects/:
	added "covers"-dir and added "Preludium and Fuge A-Minor" by J.S.Bach
	to it as first covered project ;-)

	* src/core/note_play_handle.cpp:
	- fixed bad bug in notePlayHandle::play(): instead of directly being
	  deleted, sub-notes were given to mixer to be removed when they played
	  completely but since these sub-notes are not known to mixer, it
	  couldn't delete them
	- always call channelTrack::deleteNotePluginData() in
	  noteplayhandle-dtor even if pointer to note-plugin-data is NULL so
	  that all plugins are notified when note is done (midiOut-plugin
	  needs that for sending note-off-events!)

	* include/midi_out.h:
	* src/soundgenerators/midi_out.cpp:
	new plugin midiOut which sends all notes on this channel out to
	external midi-device this is especially cool for playing arpeggio for
	key pressed on external midi-device!!

	* src/soundgenerators/plucked_string_synth.cpp:
	removed unneccesary inclusion of qpainter-header

	* include/midi_file.h:
	* src/midi/midi_file.cpp:
	* src/core/lmms_main_win.cpp:
	* src/core/song_editor.cpp:
	added support for importing MIDI-file (very experimental!!)

	* include/midi.h:
	* include/midi_device.h:
	moved general MIDI-stuff from midi_device.h to midi.h

	* src/audio/audio_file_device.cpp:
	added missing arg()-call to QMessageBox::critical()-call in
	audioFileDevice-ctor

2005-07-16	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/config_mgr.cpp:
	added shortcuts to navigation-buttons
	
2005-07-14	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/piano_roll.cpp:
	only play notes while editing if we're not in play-mode

	* include/song_editor.h:
	* src/core/song_editor.cpp:
	when exporting always render one additional tact at the end so that
	we don't cut off notes with delay etc.

2005-07-12	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	- successful compilation with GCC 4.0.1 ;-)

	* src/core/arp_and_chords_tab_widget.cpp:
	fixed bug responsible for playing base-notes of chords all time
	if any arpeggio selected was selected

2005-07-11	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* resources/source/wizard_files.xcf:
	* resources/wizard_files.png:
	updated project-file-icon in image

	* src/core/config_mgr.cpp:
	- ask user whether to re-run setup-wizard if config-file indicates
	  different version of LMMS
	- removed redundant assignment in configManager::loadConfigFile()
	- added additional layout for having space at the left and right side
	- increased font-size of title

	* Makefile.am:
	install LMMS-icon into LMMS-data-dir

	* lmms-0.1.0beta.tar.bz2:
	made beta-release of 0.1.0 and announced it on kde-apps.org

2005-07-10	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* presets/TripleOscillator/:
	added cool Church Organ preset and improved Xylophon preset

	* resources/de.ts:
	updated German translations and cleaned up all obsolete translations 
	and context which shrinks the file by 50K...

	* samples/instruments/:
	removed vibraphone01.ogg because of poor quality

	* src/core/piano_roll.cpp:
	- do not set what's-this-texts as tooltips for play/stop-button
	- added tooltip and what's-this-text to record-button
	- display message in piano-roll how to open a pattern if none is opened
	- always set window-title, even if no pattern is opened

	* src/core/mixer.cpp:
	using iterators in second loop in mixer::run() leads to crashes, so
	an optimized version of the old code is used now again...

	* src/core/lmms_main_win.cpp:
	added tool-buttons for new project, open/save project etc. and added
	popup-menu to new-button containing projects in template-directory

	* include/song_editor.h:
	* src/core/song_editor.cpp:
	- changed remaining method-names containing "[Ss]ong" to "[Pp]roject"
	- toggle channel-button after adding channel-track

	* include/export_project_dialog.h:
	* src/core/export_project_dialog.cpp:
	renamed from export_song_dialog.ext to export_project_dialog.ext

2005-07-09	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* all files:
	now all source-code-files but some single exceptions do not have more
	than 80 characters per line and also were made to conform one
	programming-style 

	* include/sgs:
	wrote sane soundgenerator-plugin-scanner using bash-scripting which
	replaces old, dirty and exaggerated c++-program and is also fully
	portable

	* include/lmms_main_win.h:
	* include/song_editor.h:
	* src/core/lmms_main_win.cpp:
	* src/core/song_editor.cpp:
	renamed methods newFile, openFile etc. to createNewProject, openProject
	etc.

	* resources/source/:
	- renamed filenew.png, fileopen.png etc. to project_new.png etc.
	- replaced song_file.png by project_file.png which has a new file-icon
	  with LMMS-logo inside
	- replaced preset_file.png by new graphic where the star is inside
	  of a file-icon

	* resources/source/lmms_logo.svg:
	made logo Inkscape 0.41 compatible (had problems with gradients since
	logo originally had been made with Inkscape 0.39)

	* src/widgets/project_notes.cpp:
	removed unneccessary name-strings for QActions

	* resources/project_notes.png:
	replaced 16x16-icon with 22x22-icon to provide big enough icon for
	toolbar which needs 22x22-icons

	* src/core/bb_editor.cpp:
	* src/core/song_editor.cpp:
	* src/tracks/bb_track.cpp:
	do not crash if either there're no bb-tracks but bb-editor has tracks
	or there're bb-tracks but bb-editor contains no tracks

	* src/core/mixer.cpp:
	* src/core/note_play_handle.cpp:
	* src/core/track_container.cpp:
	* src/tracks/pattern.cpp:
	rewrote loops using vectors to use iterators instead of indices etc.
	which makes it all a bit smaller and faster since we do not always have
	to access the current element using the []-operator

2005-07-08	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* src/core/envelope_tab_widget.cpp:
	* src/lib/sample_buffer.cpp:
	* src/widgets/knob.cpp:
	small fixes for making compilable with qt4

	* configure.in:
	* projects/:
	added directories "tutorials" and "recorded_loops"

2005-07-07	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/bb_track.h:
	added FASTCALL to moveLocation(...) and changeLength(...) which fixes
	crash-bug

	* src/core/song_editor.cpp:
	do not confirm overwriting file if new project was just saved

	* samples/:
	added a lot of new samples from wikisource and others

2005-07-06	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/project_notes.h:
	* src/core/song_editor.cpp:
	* src/widgets/project_notes.cpp:
	clear project-notes when clearing song (new/open file etc.)

	* src/tracks/pattern.cpp:
	ask user when he tries to freeze a pattern of a muted channel whether he
	wants to continue since freezing a pattern of a muted channel makes no
	sense (you're rendering silence!)

	* include/piano_roll:
	* src/core/piano_roll.cpp:
	- added possibility to edit the volume of notes
	- removed all bool-variables indicating whether an action is being
	  performed at the moment and introduced m_action, indicating
	  one of the actions defined in (also new) enum editActions
	- replaced m_startTone and m_startOctave with one variable m_startKey,
	  which makes a lot of code unneccessary
	- rewrote loops using note-vectors to use iterators instead of
	  indices and vector::size()
	- renamed m_evolutionHeight to m_notesEditHeight
	- replaced QMouseEvent::pos().[xy]()-calls with QMouseEvent::[xy]()
	- pianoRoll::getKey() does now take y-position (int) as parameter
	  instead of QPoint since it only needs y-position
	- use new setKey()/key()-member of note everywhere where it is possible

	* include/note.h:
	added setKey()- and key()-member which setting/getting absolute key
	of note

2005-07-05	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	* projects/:
	categorized projects in "cool_songs", "demos", "misc" and "templates"
	so that we don't annoy the user with a lot projects in his/her project-
	root - have to fill up "templates" with project-templates, e.g.
	basic drum-kit, accoustic drum-kit etc.

	* most files:
	added FASTCALL-attributes to functions taking at least one parameter

	* include/audio_file_processor.h:
	* include/plucked_string_synth.h:
	* include/triple_oscillator.h:
	moved deleteNotePluginData()-method into according cpp-files which
	makes including note_play_handle.h obsolete

	* include/audio_file_processor.h:
	* include/sample_buffer.h:
	* src/lib/sample_buffer.cpp:
	* src/soundgenerators/audio_file_processor.cpp:
	added support for saving sample-rate-conversion-state in m_pluginData
	of a note which fixes bug making clicks in sound when playing a sample
	simultanously at different pitches

	* configure.in:
	check whether compiler knows floorf and powf and if not, define them
	to floor/pow

2005-07-04	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* most files:
	made LMMS compiling (and working) with Qt 3.0, GCC 2.95 and other old
	libs (compiled it under Knoppix 3.1)

	* include/misc.h:
	changed names of abs, min, max, limit to myAbs, myMin etc. for not
	conflicting with functions of STL with the same name

	* configure.in:
	* src/lib/sample_buffer.cpp:
	added support for versions of libsndfile < 1.0.11 since API has changed
	in libsndfile 1.0.11

2005-07-03	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* resources/control_env_amount_active.png:
	* resources/control_env_amount_inactive.png:
	* include/envelope_and_lfo_widget.h:
	* src/core/envelope_and_lfo_widget.cpp:
	it's now possible to control the amount of an envelope with the
	according LFO by toggling new button (otherwise the level of the LFO is
	added to the level of the envelope as it always has been)

	* src/core/envelope_and_lfo_widget.cpp:
	now you can toggle the amount of an envelope/LFO between 0 and 1 by
	clicking on according graph

	* all files:
	updated mail-address in header

	* src/audio/audio_device.cpp:
	always use SURROUND_CHANNELS as channel-count for libsrc since
	resampling is done on surround-buffers - fixes bug which was
	responsible for producing useless noise when exporting file in
	high-quality-mode

	* src/core/export_song_dialog.cpp:
	made "high-quality-mode"-switch working (disabled for some reason
	in 0.0.9...)

	* src/core/mixer.cpp:
	when restoring audio-device, also restore quality-level

	* include/bb_editor.h:
	* src/core/bb_editor.cpp:
	cleaned up a lot because there was still much code from times when
	the track-technology didn't exist and which isn't now used any more

	* src/audio/audio_alsa.cpp:
	added support for 48 KHz soundcards

2005-07-02	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	* src/lib/sample_buffer.cpp:
	made it possible to compile LMMS without SDL_sound, reorganized
	sample-decoding and added libsndfile- and libvorbis-support

	* include/midi_time.h:
	added operators "=", "+=", "-=" and implemented copy-ctor

	* include/piano_roll.h:
	made currentPattern() a const method and added validPattern()

	* src/tracks/pattern.cpp:
	optimized addNote() function which uses m_note.push_back() for notes
	beyond last note

	* src/core/piano_roll.cpp:
	* src/tracks/pattern.cpp:
	when pattern is destroyed it checks whether it is currently opened in
	piano-roll and if so pattern lets piano-roll set its pointer to current
	pattern to NULL. piano-roll does now always check whether current
	pattern is not NULL. in this case it denies any actions. fixes bug which
	led to crash when having piano-roll open while deleting pattern (e.g.
	creating new file, opening file etc.)

2005-07-01	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* all files:
	replaced "location" in names of functions/variables by "position"
	for more clear and unified names

	* include/piano_roll.h:
	* include/timeline.h:
	* src/core/piano_roll.cpp:
	* src/core/timeline.cpp:
	added support for autoscroll in piano-roll when playing/recording
	pattern

2005-06-30	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/channel_track.h:
	* include/midi_device.h
	* include/mixer.h:
	* include/pattern.h:
	* src/core/piano_roll.cpp:
	* src/midi/midi_device.cpp:
	* src/tracks/channel_track.cpp:
	added support for recording notes from MIDI-device (e.g. MIDI-keyboard
	or virtual channel-piano) in a pattern using the piano-roll

	* include/pattern.h
	* src/core/song_editor.cpp:
	fixed bug which led to crash: when pattern was played in non-looping
	mode song-editor always called pattern::finishFreeze() even if there
	actually was no pattern-freezing-process -> added isFreezing() which
	is called by song-editor for checking whether pattern is being freezed
	before calling finishFreeze()

	* src/core/lmms_main_win.cpp:
	* src/lib/sample_buffer.cpp:
	when showing open-file-dialog, use QFileDialog::selectedFiles()[0]
	instead of QFileDialog::selectedFile() because selectedFile() returns
	incorrect file-name if user clicked on the file and then on
	"Open"-button instead of double-clicking file

	* src/audio/audio_oss.cpp:
	* src/soundgenerators/triple_oscillator.cpp:
	* src/tracks/channel_track.cpp:
	added #include <stdlib.h> for solving problems with undeclared
	functions getenv() and rand() on some distributions (e.g Slackware)

	* src/core/track.cpp:
	* src/soundgenerators/triple_oscillator.cpp:
	* src/tracks/channel_track.cpp:
	added missing #include "debug.h" for solving problems with undeclared
	assert() because of not included assert.h

2005-06-29	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* configure.in:
	* include/audio_sdl.h:
	* src/lib/sample_buffer.cpp:
	if SDL/SDL.h does not exist, search for it in SDL10, SDL11 etc. and
	include according headers in source-files (solves problems on FreeBSD)

	* README:
	updated everything a bit...

2005-06-28	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* include/envelope_tab_widget.h:
	* src/core/envelope_tab_widget.cpp:
	use button instead of knob for turning filter on/off

2005-06-27	Tobias Doerffel	<tobydox/at/users/dot/sourceforge/dot/net>

	* samples/effects/Makefile.am:
	don't install effect-samples into directory of basses-samples

